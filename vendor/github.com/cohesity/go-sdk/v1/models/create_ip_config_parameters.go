// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateIPConfigParameters Create IP Config Parameters.
//
// Specifies the parameters needed for an ipconfig request.
//
// swagger:model CreateIpConfigParameters
type CreateIPConfigParameters struct {

	// Specifies the interface ips.
	Ips []string `json:"ips"`

	// Specifies the interface mtu.
	Mtu *int32 `json:"mtu,omitempty"`

	// Specifies the interface name.
	// Required: true
	Name *string `json:"name"`

	// Specifies the interface role.
	// 'kPrimary' indicates a primary role.
	// 'kSecondary' indicates a secondary role.
	// Enum: ["kPrimary","kSecondary"]
	Role *string `json:"role,omitempty"`

	// Specifies the interface gateway.
	SubnetGateway *string `json:"subnetGateway,omitempty"`

	// Specifies the interface subnet mask.
	SubnetMask *string `json:"subnetMask,omitempty"`
}

// Validate validates this create Ip config parameters
func (m *CreateIPConfigParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateIPConfigParameters) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var createIpConfigParametersTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kPrimary","kSecondary"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createIpConfigParametersTypeRolePropEnum = append(createIpConfigParametersTypeRolePropEnum, v)
	}
}

const (

	// CreateIPConfigParametersRoleKPrimary captures enum value "kPrimary"
	CreateIPConfigParametersRoleKPrimary string = "kPrimary"

	// CreateIPConfigParametersRoleKSecondary captures enum value "kSecondary"
	CreateIPConfigParametersRoleKSecondary string = "kSecondary"
)

// prop value enum
func (m *CreateIPConfigParameters) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createIpConfigParametersTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CreateIPConfigParameters) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", *m.Role); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create Ip config parameters based on context it is used
func (m *CreateIPConfigParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateIPConfigParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateIPConfigParameters) UnmarshalBinary(b []byte) error {
	var res CreateIPConfigParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
