// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CrackedFileDocumentO365TeamsMetadata Metadata for teams items: channels, files etc.
//
// swagger:model CrackedFileDocument_O365TeamsMetadata
type CrackedFileDocumentO365TeamsMetadata struct {

	// Metdata document type.
	DocType *int32 `json:"docType,omitempty"`

	// Metadata relating to file of a teams channel for this item.
	TeamsChannelFileMetadata *CrackedFileDocumentO365TeamsChannelFilesMetadata `json:"teamsChannelFileMetadata,omitempty"`

	// Metadata relating to channels of a teams for this item.
	TeamsChannelMetadata *CrackedFileDocumentTeamsChannelMetadata `json:"teamsChannelMetadata,omitempty"`
}

// Validate validates this cracked file document o365 teams metadata
func (m *CrackedFileDocumentO365TeamsMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTeamsChannelFileMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTeamsChannelMetadata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CrackedFileDocumentO365TeamsMetadata) validateTeamsChannelFileMetadata(formats strfmt.Registry) error {
	if swag.IsZero(m.TeamsChannelFileMetadata) { // not required
		return nil
	}

	if m.TeamsChannelFileMetadata != nil {
		if err := m.TeamsChannelFileMetadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("teamsChannelFileMetadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("teamsChannelFileMetadata")
			}
			return err
		}
	}

	return nil
}

func (m *CrackedFileDocumentO365TeamsMetadata) validateTeamsChannelMetadata(formats strfmt.Registry) error {
	if swag.IsZero(m.TeamsChannelMetadata) { // not required
		return nil
	}

	if m.TeamsChannelMetadata != nil {
		if err := m.TeamsChannelMetadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("teamsChannelMetadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("teamsChannelMetadata")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this cracked file document o365 teams metadata based on the context it is used
func (m *CrackedFileDocumentO365TeamsMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTeamsChannelFileMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTeamsChannelMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CrackedFileDocumentO365TeamsMetadata) contextValidateTeamsChannelFileMetadata(ctx context.Context, formats strfmt.Registry) error {

	if m.TeamsChannelFileMetadata != nil {

		if swag.IsZero(m.TeamsChannelFileMetadata) { // not required
			return nil
		}

		if err := m.TeamsChannelFileMetadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("teamsChannelFileMetadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("teamsChannelFileMetadata")
			}
			return err
		}
	}

	return nil
}

func (m *CrackedFileDocumentO365TeamsMetadata) contextValidateTeamsChannelMetadata(ctx context.Context, formats strfmt.Registry) error {

	if m.TeamsChannelMetadata != nil {

		if swag.IsZero(m.TeamsChannelMetadata) { // not required
			return nil
		}

		if err := m.TeamsChannelMetadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("teamsChannelMetadata")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("teamsChannelMetadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CrackedFileDocumentO365TeamsMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CrackedFileDocumentO365TeamsMetadata) UnmarshalBinary(b []byte) error {
	var res CrackedFileDocumentO365TeamsMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
