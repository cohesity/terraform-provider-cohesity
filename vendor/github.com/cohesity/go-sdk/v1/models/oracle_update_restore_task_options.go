// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OracleUpdateRestoreTaskOptions Refer OracleUpdateRestoreTaskOptions message in /magneto/base/magneto.proto
//
// OracleUpdateRestoreTaskOptions holds the information needed for updating an
// Oracle restore task. Currently this contains Oracle clone specific details,
// which would be needed in the migration workflow.
//
// swagger:model OracleUpdateRestoreTaskOptions
type OracleUpdateRestoreTaskOptions struct {

	// Details needed for Oracle Clone migrations.
	MigrateCloneParams *MigrateOracleCloneParams `json:"migrateCloneParams,omitempty"`
}

// Validate validates this oracle update restore task options
func (m *OracleUpdateRestoreTaskOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMigrateCloneParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OracleUpdateRestoreTaskOptions) validateMigrateCloneParams(formats strfmt.Registry) error {
	if swag.IsZero(m.MigrateCloneParams) { // not required
		return nil
	}

	if m.MigrateCloneParams != nil {
		if err := m.MigrateCloneParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("migrateCloneParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("migrateCloneParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this oracle update restore task options based on the context it is used
func (m *OracleUpdateRestoreTaskOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMigrateCloneParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OracleUpdateRestoreTaskOptions) contextValidateMigrateCloneParams(ctx context.Context, formats strfmt.Registry) error {

	if m.MigrateCloneParams != nil {

		if swag.IsZero(m.MigrateCloneParams) { // not required
			return nil
		}

		if err := m.MigrateCloneParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("migrateCloneParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("migrateCloneParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OracleUpdateRestoreTaskOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OracleUpdateRestoreTaskOptions) UnmarshalBinary(b []byte) error {
	var res OracleUpdateRestoreTaskOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
