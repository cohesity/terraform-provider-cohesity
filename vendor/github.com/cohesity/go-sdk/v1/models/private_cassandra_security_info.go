// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PrivateCassandraSecurityInfo Groups some of the security related fields.
//
// swagger:model PrivateCassandraSecurityInfo
type PrivateCassandraSecurityInfo struct {

	// cassandra auth required
	CassandraAuthRequired *bool `json:"cassandraAuthRequired,omitempty"`

	// cassandra auth type
	CassandraAuthType *int32 `json:"cassandraAuthType,omitempty"`

	// cassandra authenticator
	CassandraAuthenticator *string `json:"cassandraAuthenticator,omitempty"`

	// cassandra authorizer
	CassandraAuthorizer *string `json:"cassandraAuthorizer,omitempty"`

	// cassandra client encryption enabled
	CassandraClientEncryptionEnabled *bool `json:"cassandraClientEncryptionEnabled,omitempty"`

	// cassandra server encryption req client auth
	CassandraServerEncryptionReqClientAuth *bool `json:"cassandraServerEncryptionReqClientAuth,omitempty"`

	// cassandra server internode encryption type
	CassandraServerInternodeEncryptionType *string `json:"cassandraServerInternodeEncryptionType,omitempty"`

	// dse authorization enabled
	DseAuthorizationEnabled *bool `json:"dseAuthorizationEnabled,omitempty"`
}

// Validate validates this private cassandra security info
func (m *PrivateCassandraSecurityInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this private cassandra security info based on context it is used
func (m *PrivateCassandraSecurityInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PrivateCassandraSecurityInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrivateCassandraSecurityInfo) UnmarshalBinary(b []byte) error {
	var res PrivateCassandraSecurityInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
