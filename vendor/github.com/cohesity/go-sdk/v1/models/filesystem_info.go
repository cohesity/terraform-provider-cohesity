// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FilesystemInfo Message to encapsulate information about a file system which is hosted by a
// GPFS server. GPFS Servers can host multiple file systems.
// File systems are supported by one or more network shared disks (NSDs).
//
// swagger:model FilesystemInfo
type FilesystemInfo struct {

	// The total capacity in bytes of this filesystem.
	CapacityBytes *uint64 `json:"capacityBytes,omitempty"`

	// Globally unique ID of the filesystem.
	// TODO(Kavita): Make sure this is an immutable ID that will not change when
	// the filesystem is migrated to a different host. Otherwise it might lead to
	// issues.
	ID *string `json:"id,omitempty"`

	// The default mount point of the filesystem.
	Path *string `json:"path,omitempty"`

	// The used space in bytes of this filesystem.
	UsedBytes *uint64 `json:"usedBytes,omitempty"`
}

// Validate validates this filesystem info
func (m *FilesystemInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this filesystem info based on context it is used
func (m *FilesystemInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FilesystemInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FilesystemInfo) UnmarshalBinary(b []byte) error {
	var res FilesystemInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
