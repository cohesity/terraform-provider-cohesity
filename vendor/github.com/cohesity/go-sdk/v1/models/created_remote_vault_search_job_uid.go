// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreatedRemoteVaultSearchJobUID Remote Vault Search Job Uid.
//
// Specifies the Uid of the Job created to search the
// remote vault.
//
// swagger:model CreatedRemoteVaultSearchJobUid
type CreatedRemoteVaultSearchJobUID struct {

	// Specifies the unique id assigned for the search Job on the Cluster.
	SearchJobUID struct {
		UniversalID
	} `json:"searchJobUid,omitempty"`
}

// Validate validates this created remote vault search job Uid
func (m *CreatedRemoteVaultSearchJobUID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSearchJobUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreatedRemoteVaultSearchJobUID) validateSearchJobUID(formats strfmt.Registry) error {
	if swag.IsZero(m.SearchJobUID) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this created remote vault search job Uid based on the context it is used
func (m *CreatedRemoteVaultSearchJobUID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSearchJobUID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreatedRemoteVaultSearchJobUID) contextValidateSearchJobUID(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *CreatedRemoteVaultSearchJobUID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreatedRemoteVaultSearchJobUID) UnmarshalBinary(b []byte) error {
	var res CreatedRemoteVaultSearchJobUID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
