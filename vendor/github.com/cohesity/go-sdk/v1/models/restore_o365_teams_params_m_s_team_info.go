// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestoreO365TeamsParamsMSTeamInfo Info of the team to be restored.
//
// swagger:model RestoreO365TeamsParams_MSTeamInfo
type RestoreO365TeamsParamsMSTeamInfo struct {

	// Specify if the entire Team is to be restored.
	IsFullTeamRequired *bool `json:"isFullTeamRequired,omitempty"`

	// Todo(prann) : deprecate this and only keep the necessary info.
	// This will store the details of the MS team to be restored.
	Object *RestoreObject `json:"object,omitempty"`

	// Channel items that have to be restored. This will be empty iff
	// is_full_team_required is false.
	SourceChannelVec []*RestoreO365TeamsParamsSourceChannel `json:"sourceChannelVec"`
}

// Validate validates this restore o365 teams params m s team info
func (m *RestoreO365TeamsParamsMSTeamInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObject(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSourceChannelVec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreO365TeamsParamsMSTeamInfo) validateObject(formats strfmt.Registry) error {
	if swag.IsZero(m.Object) { // not required
		return nil
	}

	if m.Object != nil {
		if err := m.Object.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreO365TeamsParamsMSTeamInfo) validateSourceChannelVec(formats strfmt.Registry) error {
	if swag.IsZero(m.SourceChannelVec) { // not required
		return nil
	}

	for i := 0; i < len(m.SourceChannelVec); i++ {
		if swag.IsZero(m.SourceChannelVec[i]) { // not required
			continue
		}

		if m.SourceChannelVec[i] != nil {
			if err := m.SourceChannelVec[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sourceChannelVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("sourceChannelVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this restore o365 teams params m s team info based on the context it is used
func (m *RestoreO365TeamsParamsMSTeamInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSourceChannelVec(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreO365TeamsParamsMSTeamInfo) contextValidateObject(ctx context.Context, formats strfmt.Registry) error {

	if m.Object != nil {

		if swag.IsZero(m.Object) { // not required
			return nil
		}

		if err := m.Object.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreO365TeamsParamsMSTeamInfo) contextValidateSourceChannelVec(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.SourceChannelVec); i++ {

		if m.SourceChannelVec[i] != nil {

			if swag.IsZero(m.SourceChannelVec[i]) { // not required
				return nil
			}

			if err := m.SourceChannelVec[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sourceChannelVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("sourceChannelVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestoreO365TeamsParamsMSTeamInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestoreO365TeamsParamsMSTeamInfo) UnmarshalBinary(b []byte) error {
	var res RestoreO365TeamsParamsMSTeamInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
