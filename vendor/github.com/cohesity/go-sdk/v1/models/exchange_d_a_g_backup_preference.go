// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ExchangeDAGBackupPreference Contains params specified by the user while updating an Exchange DAG backup
// preference.
//
// swagger:model ExchangeDAGBackupPreference
type ExchangeDAGBackupPreference struct {

	// If we have more than one passive copy of a DAG database, this option
	// will specify which one among them should be considered for backup.
	PassivePreference *int32 `json:"passivePreference,omitempty"`

	// User specified backup preference order while choosing between passive
	// copies. This is set only when 'passive_preference' = kUserSpecified.
	// Passive copy present on server[0] will get the highest preference
	// and server[n-1] will get the least preference while choosing for backup.
	PassivePreferenceServerGUIDVec []string `json:"passivePreferenceServerGuidVec"`

	// Consider active copy or not for backup.
	Preference *int32 `json:"preference,omitempty"`
}

// Validate validates this exchange d a g backup preference
func (m *ExchangeDAGBackupPreference) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this exchange d a g backup preference based on context it is used
func (m *ExchangeDAGBackupPreference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ExchangeDAGBackupPreference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExchangeDAGBackupPreference) UnmarshalBinary(b []byte) error {
	var res ExchangeDAGBackupPreference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
