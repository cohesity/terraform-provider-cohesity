// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DataLockConstraintsProto Message that specifies the datalock attributes. This proto will be populated
// from worm_retention field in RetentionPolicyProto.
//
// swagger:model DataLockConstraintsProto
type DataLockConstraintsProto struct {

	// Expiry time for datalock in usecs. It represents the absolute time when
	// this data lock expires.
	DataLockExpiryUsecs *int64 `json:"dataLockExpiryUsecs,omitempty"`

	// Whether objects in the external target associated with this policy need to
	// be made immutable.
	EnableWormOnExternalTarget *bool `json:"enableWormOnExternalTarget,omitempty"`

	// Datalock policy.
	PolicyType *int32 `json:"policyType,omitempty"`
}

// Validate validates this data lock constraints proto
func (m *DataLockConstraintsProto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this data lock constraints proto based on context it is used
func (m *DataLockConstraintsProto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataLockConstraintsProto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataLockConstraintsProto) UnmarshalBinary(b []byte) error {
	var res DataLockConstraintsProto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
