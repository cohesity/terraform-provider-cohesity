// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VirtualDiskID This message defines the proto that can be used to identify the disks in
// different environments.
//
// swagger:model VirtualDiskId
type VirtualDiskID struct {

	// Controller's bus-id controlling the virtual disk in question.
	ControllerBusNumber *int64 `json:"controllerBusNumber,omitempty"`

	// Controller's type (SCSI, IDE etc).
	ControllerType *string `json:"controllerType,omitempty"`

	// Original disk id. This is sufficient to identify the disk information, but
	// in some scenarios, user's may specify the controller option instead.
	DiskID *string `json:"diskId,omitempty"`

	// Disk unit number to identify the virtual disk within a controller.
	UnitNumber *int64 `json:"unitNumber,omitempty"`
}

// Validate validates this virtual disk Id
func (m *VirtualDiskID) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this virtual disk Id based on context it is used
func (m *VirtualDiskID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VirtualDiskID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VirtualDiskID) UnmarshalBinary(b []byte) error {
	var res VirtualDiskID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
