// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ViewProtocol view protocol
//
// swagger:model ViewProtocol
type ViewProtocol struct {

	// Mode of protocol access.
	// 'ReadOnly'
	// 'ReadWrite'
	// Enum: [ReadOnly ReadWrite]
	Mode *string `json:"mode,omitempty"`

	// Type of protocol.
	// Specifies the supported Protocols for the View.
	// 'NFS' enables protocol access to NFS v3.
	// 'NFS4' enables protocol access to NFS v4.1.
	// 'SMB' enables protocol access to SMB.
	// 'S3' enables protocol access to S3.
	// 'Swift' enables protocol access to Swift.
	// Enum: [NFS NFS4 SMB S3 Swift]
	Type *string `json:"type,omitempty"`
}

// Validate validates this view protocol
func (m *ViewProtocol) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this view protocol based on context it is used
func (m *ViewProtocol) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ViewProtocol) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ViewProtocol) UnmarshalBinary(b []byte) error {
	var res ViewProtocol
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
