// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// O365AddSnapshotArgOneDriveInfo This captures one drive related info.
//
// swagger:model O365AddSnapshotArg_OneDriveInfo
type O365AddSnapshotArgOneDriveInfo struct {

	// Domain level unique id of the drive.
	DriveID *string `json:"driveId,omitempty"`

	// Type of the drive.
	DriveType *int32 `json:"driveType,omitempty"`

	// Is incremental indexing enabled or not.
	IncrementalIndexingEnabled *bool `json:"incrementalIndexingEnabled,omitempty"`

	// Presence of this signifies whether the underlying file representation is
	// done in a flat way. If yes, information about folders are kept in
	// rocksDB. Yoda should use that for indexing.
	// The path of the rocksDB present. If this field is present, path_to_index
	// will be absent.
	PathToDb *string `json:"pathToDb,omitempty"`

	// Path to be indexed. This is relative to snapshot_dir present in
	// AddSnapshotArg.
	PathToIndex *string `json:"pathToIndex,omitempty"`

	// Whether the backup contains a one drive backup which can be indexed.
	ShouldIndexOneDrive *bool `json:"shouldIndexOneDrive,omitempty"`
}

// Validate validates this o365 add snapshot arg one drive info
func (m *O365AddSnapshotArgOneDriveInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this o365 add snapshot arg one drive info based on context it is used
func (m *O365AddSnapshotArgOneDriveInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *O365AddSnapshotArgOneDriveInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *O365AddSnapshotArgOneDriveInfo) UnmarshalBinary(b []byte) error {
	var res O365AddSnapshotArgOneDriveInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
