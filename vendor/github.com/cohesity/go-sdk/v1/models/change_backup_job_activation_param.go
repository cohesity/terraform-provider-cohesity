// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ChangeBackupJobActivationParam ChangeBackupJobActivationParam is the struct for activating  or
// de-activating a backup job in order to support remote replication.
//
// swagger:model ChangeBackupJobActivationParam
type ChangeBackupJobActivationParam struct {

	// BackupJobId is the Id of the backup job.
	BackupJobID *int64 `json:"backupJobId,omitempty"`

	// IsOperationActivate is the flag to specify whether the operation is
	// activate or de-activate.
	IsOperationActivate *bool `json:"isOperationActivate,omitempty"`

	// ParentEntityId is the entity Id of the parent source.
	ParentEntityID *int64 `json:"parentEntityId,omitempty"`

	// Id of the policy. If it is specified, job will get the new Policy. This
	// field is only used during activation and ignored during de-activation.
	PolicyID *string `json:"policyId,omitempty"`

	// If the request is to de-activate the backup job, this field is used to
	// specify whether to power off VMs in VMware environment. Please note that
	// this field is ignored if the request is not to de-activate the backup job.
	PowerOff *bool `json:"powerOff,omitempty"`
}

// Validate validates this change backup job activation param
func (m *ChangeBackupJobActivationParam) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this change backup job activation param based on context it is used
func (m *ChangeBackupJobActivationParam) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ChangeBackupJobActivationParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangeBackupJobActivationParam) UnmarshalBinary(b []byte) error {
	var res ChangeBackupJobActivationParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
