// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DataTransferFromVaultPerTask Data Transfer From Vault Per Task.
//
// Specifies statistics about the transfer of data from a Vault
// (External Target) to this Cohesity Cluster for a recover or
// clone task.
//
// swagger:model DataTransferFromVaultPerTask
type DataTransferFromVaultPerTask struct {

	// Specifies the total number of logical bytes that are transferred from
	// this Vault to the Cohesity Cluster for this task.
	// The logical size is when the data is fully hydrated or expanded.
	NumLogicalBytesTransferred *int64 `json:"numLogicalBytesTransferred,omitempty"`

	// Specifies the total number of physical bytes that are transferred
	// from this Vault to the Cohesity Cluster for this task.
	NumPhysicalBytesTransferred *int64 `json:"numPhysicalBytesTransferred,omitempty"`

	// Specifies the task name.
	TaskName *string `json:"taskName,omitempty"`

	// Specifies the task type.
	TaskType *string `json:"taskType,omitempty"`
}

// Validate validates this data transfer from vault per task
func (m *DataTransferFromVaultPerTask) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this data transfer from vault per task based on context it is used
func (m *DataTransferFromVaultPerTask) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataTransferFromVaultPerTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTransferFromVaultPerTask) UnmarshalBinary(b []byte) error {
	var res DataTransferFromVaultPerTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
