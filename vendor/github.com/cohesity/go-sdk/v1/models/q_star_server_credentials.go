// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// QStarServerCredentials QStar Server Credentials.
//
// Specifies the server credentials to connect to a QStar service
// to manage the media Vault.
//
// swagger:model QStarServerCredentials
type QStarServerCredentials struct {

	// Specifies the IP address or DNS name of the server where QStar
	// service is running.
	Host *string `json:"host,omitempty"`

	// Array of Integral Volume Names.
	//
	// Specifies a list of existing Integral Volume names available on the
	// QStar server for storing objects.
	IntegralVolumeNames []string `json:"integralVolumeNames"`

	// Specifies the password used to access the QStar host.
	Password *string `json:"password,omitempty"`

	// Specifies the listening port where QStar WEB API service is running.
	Port *int32 `json:"port,omitempty"`

	// Specifies the sharing protocol type used by QStar to mount
	// the integral volume.
	// See the Cohesity online help for the recommended protocol
	// for your environment.
	ShareType *string `json:"shareType,omitempty"`

	// Specifies whether to use http or https to connect to the service.
	// If true, a secure connection (https) is used.
	UseHTTPS *bool `json:"useHttps,omitempty"`

	// Specifies the account name used to access the QStar host.
	Username *string `json:"username,omitempty"`
}

// Validate validates this q star server credentials
func (m *QStarServerCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this q star server credentials based on context it is used
func (m *QStarServerCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *QStarServerCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QStarServerCredentials) UnmarshalBinary(b []byte) error {
	var res QStarServerCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
