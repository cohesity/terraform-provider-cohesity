// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CouchbaseConnectParams Couchbase Connect Params.
//
// Specifies an Object containing information about a registered couchbase
// source.
//
// swagger:model CouchbaseConnectParams
type CouchbaseConnectParams struct {

	// Specifies the Carrier direct/sll port.
	CarrierDirectPort *int32 `json:"carrierDirectPort,omitempty"`

	// Specifies the HTTP direct/sll port.
	HTTPDirectPort *int32 `json:"httpDirectPort,omitempty"`

	// Specifies whether this cluster allows connection through SSL only.
	RequiresSsl *bool `json:"requiresSsl,omitempty"`

	// Specifies the Seeds of this Couchbase Cluster.
	Seeds []string `json:"seeds"`
}

// Validate validates this couchbase connect params
func (m *CouchbaseConnectParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this couchbase connect params based on context it is used
func (m *CouchbaseConnectParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CouchbaseConnectParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CouchbaseConnectParams) UnmarshalBinary(b []byte) error {
	var res CouchbaseConnectParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
