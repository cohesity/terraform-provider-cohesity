// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MapperInfo Information about a mapper.
//
// swagger:model MapperInfo
type MapperInfo struct {

	// The code of the mapper in the specified language. Should be UTF-8.
	Code *string `json:"code,omitempty"`

	// Mapper ID generated by system. Absent when user is creating a new mapper.
	// Mandatory in all other use cases.
	ID *int64 `json:"id,omitempty"`

	// Whether the mapper is system defined.
	IsSystemDefined *bool `json:"isSystemDefined,omitempty"`

	// User can write their own mapper/reducer or upload jar files containing
	// mappers and reducers. If this mapper was part of a jar file, then this
	// field will have the JAR name.
	JarName *string `json:"jarName,omitempty"`

	// path of JAR in which this mapper was found. This is applicable only when
	// this mapper was uploaded via JAR.
	JarPath *string `json:"jarPath,omitempty"`

	// Language of the mapper.
	Language *int32 `json:"language,omitempty"`

	// Name of the mapper.
	Name *string `json:"name,omitempty"`
}

// Validate validates this mapper info
func (m *MapperInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this mapper info based on context it is used
func (m *MapperInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MapperInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MapperInfo) UnmarshalBinary(b []byte) error {
	var res MapperInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
