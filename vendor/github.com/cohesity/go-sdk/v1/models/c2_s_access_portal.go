// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// C2SAccessPortal C2S Access Portal (CAP).
//
// Specifies information required to connect to CAP to get AWS credentials.
// C2SAccessPortal(CAP) is AWS commercial cloud service access portal.
//
// swagger:model C2SAccessPortal
type C2SAccessPortal struct {

	// Name of the agency.
	Agency *string `json:"agency,omitempty"`

	// The base url of C2S CAP server.
	BaseURL *string `json:"baseUrl,omitempty"`

	// Encrypted password of the client private key.
	ClientCertificatePassword *string `json:"clientCertificatePassword,omitempty"`

	// Name of the mission.
	Mission *string `json:"mission,omitempty"`

	// Role type.
	Role *string `json:"role,omitempty"`
}

// Validate validates this c2 s access portal
func (m *C2SAccessPortal) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this c2 s access portal based on context it is used
func (m *C2SAccessPortal) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *C2SAccessPortal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *C2SAccessPortal) UnmarshalBinary(b []byte) error {
	var res C2SAccessPortal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
