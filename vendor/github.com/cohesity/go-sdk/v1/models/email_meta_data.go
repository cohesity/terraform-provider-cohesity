// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EmailMetaData Email Meta Data.
//
// Specifies details about the emails and the folder containing emails.
//
// swagger:model EmailMetaData
type EmailMetaData struct {

	// AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
	// of tenant with id TenantId should be returned.
	AllUnderHierarchy *bool `json:"allUnderHierarchy,omitempty"`

	// Specifies the email addresses of the bcc recipients.
	BccRecipientAddresses []string `json:"bccRecipientAddresses"`

	// Specifies the email addresses of the cc recipients.
	CcRecipientAddresses []string `json:"ccRecipientAddresses"`

	// Specifies the directory path to the item.
	DirectoryPath *string `json:"directoryPath,omitempty"`

	// Specifies the domain Ids in which mailboxes are registered.
	DomainIds []int64 `json:"domainIds"`

	// Specifies the subject of the email.
	EmailSubject *string `json:"emailSubject,omitempty"`

	// Specifes the Parent Folder key.
	FolderKey *int64 `json:"folderKey,omitempty"`

	// Specifies the parent folder name of the email.
	FolderName *string `json:"folderName,omitempty"`

	// Specifies whether the emails have any attachments.
	HasAttachments *bool `json:"hasAttachments,omitempty"`

	// Specifies the Key(unique within mailbox) for Outlook item such as Email.
	// This key is not indexed but used for identifying the item while restore.
	ItemKey *string `json:"itemKey,omitempty"`

	// Specifies the mailbox Ids which contains the emails/folders.
	MailboxIds []int64 `json:"mailboxIds"`

	// Specifies the protection job Ids which have backed up mailbox(es)
	// continaing emails/folders.
	ProtectionJobIds []int64 `json:"protectionJobIds"`

	// Specifies the unix end time for querying on email's received time.
	ReceivedEndTime *int64 `json:"receivedEndTime,omitempty"`

	// Specifies the unix start time for querying on email's received time.
	ReceivedStartTime *int64 `json:"receivedStartTime,omitempty"`

	// Specifies the unix time when the email was received.
	ReceivedTimeSeconds *int64 `json:"receivedTimeSeconds,omitempty"`

	// Specifies the email addresses of the recipients.
	RecipientAddresses []string `json:"recipientAddresses"`

	// Specifies the email address of the sender.
	SenderAddress *string `json:"senderAddress,omitempty"`

	// Specifies the unix time when the email was sent.
	SentTimeSeconds *int64 `json:"sentTimeSeconds,omitempty"`

	// Specifies whether the query result should include only Email folders.
	ShowOnlyEmailFolders *bool `json:"showOnlyEmailFolders,omitempty"`

	// TenantId specifies the tenant whose action resulted in the audit log.
	TenantID *string `json:"tenantId,omitempty"`
}

// Validate validates this email meta data
func (m *EmailMetaData) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this email meta data based on context it is used
func (m *EmailMetaData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EmailMetaData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmailMetaData) UnmarshalBinary(b []byte) error {
	var res EmailMetaData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
