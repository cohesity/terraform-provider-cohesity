// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WindowsHostSnapshotParameters Windows Host Snapshot Parameters.
//
// Specifies settings that are meaningful only on Windows hosts.
//
// swagger:model WindowsHostSnapshotParameters
type WindowsHostSnapshotParameters struct {

	// Specifies whether to backup regardless of the state of each file's
	// backup history. Backup history will not be updated. Refer Microsoft
	// documentation on VSS_BT_COPY.
	CopyOnlyBackup *bool `json:"copyOnlyBackup,omitempty"`

	// Specifies whether to disable fetching and storing of some metadata
	// on Cohesity Cluster to save storage space. Otherwise, there will be
	// some metadata fetched and stored on Cohesity Cluster.
	DisableMetadata *bool `json:"disableMetadata,omitempty"`

	// Specifies whether to disable some notification steps when taking
	// snapshots.
	DisableNotification *bool `json:"disableNotification,omitempty"`

	// Specifies a list of Windows VSS writers that are excluded from backups.
	// For example, "ASR Writer", "System Writer". Refer Microsoft documentaion
	// for a complete list.
	ExcludedVssWriters []string `json:"excludedVssWriters"`
}

// Validate validates this windows host snapshot parameters
func (m *WindowsHostSnapshotParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this windows host snapshot parameters based on context it is used
func (m *WindowsHostSnapshotParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WindowsHostSnapshotParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WindowsHostSnapshotParameters) UnmarshalBinary(b []byte) error {
	var res WindowsHostSnapshotParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
