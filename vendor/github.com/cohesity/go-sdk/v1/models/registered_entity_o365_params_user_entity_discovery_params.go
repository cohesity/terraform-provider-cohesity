// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RegisteredEntityO365ParamsUserEntityDiscoveryParams Encapsulates the discovery params for kUser entities. The caller should
// only populate this incase the 'discoverable_entity_type_vec' includes
// 'kUsers'.
//
// swagger:model RegisteredEntityO365Params_UserEntityDiscoveryParams
type RegisteredEntityO365ParamsUserEntityDiscoveryParams struct {

	// Flag which specifies whether user's direct chats should be backed up.
	AllowChatsBackup *bool `json:"allowChatsBackup,omitempty"`

	// Whether to discover Users with a valid mailbox.
	DiscoverUsersWithMailbox *bool `json:"discoverUsersWithMailbox,omitempty"`

	// Whether to discover Users with a valid onedrive.
	DiscoverUsersWithOnedrive *bool `json:"discoverUsersWithOnedrive,omitempty"`

	// If set to true, on source registration and refresh, Users Mailbox
	// settings will be fetch and processed.
	// Fetching Mailbox settings determines
	// 1. Whether a user has a Mailbox provisioned or not.
	// 2. If provisioned, will fetch the Mailbox Type (User, Shared etc..)
	// 3. If In-Place Archve / Archive Mailbox is enabled or not.
	FetchUsersMailboxInfo *bool `json:"fetchUsersMailboxInfo,omitempty"`

	// If set to true, on source registration and refresh, Users OneDrive info
	// will be fetch and processed.
	// Fetching OneDrive info determines
	// 1. Whether a user has a OneDrive provisioned and initialized or not.
	// 2. If provisioned, will fetch the Storage Quota (Total/Used).
	FetchUsersOnedriveInfo *bool `json:"fetchUsersOnedriveInfo,omitempty"`

	// Skip OneDrive Users without mysite / drive un-initialized.
	SkipUsersWithMissingOnedriveMysite *bool `json:"skipUsersWithMissingOnedriveMysite,omitempty"`
}

// Validate validates this registered entity o365 params user entity discovery params
func (m *RegisteredEntityO365ParamsUserEntityDiscoveryParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this registered entity o365 params user entity discovery params based on context it is used
func (m *RegisteredEntityO365ParamsUserEntityDiscoveryParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegisteredEntityO365ParamsUserEntityDiscoveryParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegisteredEntityO365ParamsUserEntityDiscoveryParams) UnmarshalBinary(b []byte) error {
	var res RegisteredEntityO365ParamsUserEntityDiscoveryParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
