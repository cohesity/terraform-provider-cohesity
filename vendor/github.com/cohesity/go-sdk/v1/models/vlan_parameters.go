// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VlanParameters VLAN Parameters.
//
// Specifies VLAN parameters for the restore operation.
//
// swagger:model VlanParameters
type VlanParameters struct {

	// Specifies whether to use the VIPs even when VLANs are configured on the
	// Cluster. If configured, VLAN IP addresses are used by default.
	// If VLANs are not configured, this flag is ignored.
	// Set this flag to true to force using the partition VIPs when VLANs are
	// configured on the Cluster.
	DisableVlan *bool `json:"disableVlan,omitempty"`

	// Specifies the physical interface group name to use for mounting
	// Cohesity's view on the remote host. If specified, Cohesity hostname or
	// the IP address on this VLAN is used.
	InterfaceName *string `json:"interfaceName,omitempty"`

	// Specifies the VLAN to use for mounting Cohesity's view on the remote
	// host. If specified, Cohesity hostname or the IP address on this VLAN
	// is used.
	Vlan *int32 `json:"vlan,omitempty"`
}

// Validate validates this vlan parameters
func (m *VlanParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vlan parameters based on context it is used
func (m *VlanParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VlanParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VlanParameters) UnmarshalBinary(b []byte) error {
	var res VlanParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
