// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DestroyCloneAppTaskInfoProto Message that captures the destroy clone application task state.
// Application specific destroy clone infos are defined as extensions to this
// proto.
//
// Each available extension is listed below along with the location of the
// proto file (relative to magneto/connectors) where it is defined.
//
// # DestroyCloneAppTaskInfoProto extension
//
// Location
// Extension
//
// =============================================================================
// sql::DestroyCloneTaskInfo::sql_destroy_clone_app_task_info
//
// sql/sql.proto
// 100
//
// oracle::DestroyCloneTaskInfo::oracle_destroy_clone_app_task_info
//
// oracle/oracle.proto
// 101
//
// ad::DestroyTaskInfo::ad_destroy_app_task_info
//
// ad/ad.proto
// 102
//
// exchange::DestroyTaskInfo::exchange_destroy_app_task_info
//
// exchange/exchange.proto
// 103
//
// =============================================================================
//
// swagger:model DestroyCloneAppTaskInfoProto
type DestroyCloneAppTaskInfoProto struct {

	// The application environment.
	AppEnv *int32 `json:"appEnv,omitempty"`

	// If an error is encountered during destroy it is set here.
	Error *ErrorProto `json:"error,omitempty"`

	// This will be set to true if the task is complete on the slave.
	Finished *bool `json:"finished,omitempty"`

	// The target entity on which the application was cloned.
	TargetEntity *EntityProto `json:"targetEntity,omitempty"`

	// Credentials if any needed to log into the target entity.
	TargetEntityCredentials *Credentials `json:"targetEntityCredentials,omitempty"`
}

// Validate validates this destroy clone app task info proto
func (m *DestroyCloneAppTaskInfoProto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetEntity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetEntityCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestroyCloneAppTaskInfoProto) validateError(formats strfmt.Registry) error {
	if swag.IsZero(m.Error) { // not required
		return nil
	}

	if m.Error != nil {
		if err := m.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("error")
			}
			return err
		}
	}

	return nil
}

func (m *DestroyCloneAppTaskInfoProto) validateTargetEntity(formats strfmt.Registry) error {
	if swag.IsZero(m.TargetEntity) { // not required
		return nil
	}

	if m.TargetEntity != nil {
		if err := m.TargetEntity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetEntity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetEntity")
			}
			return err
		}
	}

	return nil
}

func (m *DestroyCloneAppTaskInfoProto) validateTargetEntityCredentials(formats strfmt.Registry) error {
	if swag.IsZero(m.TargetEntityCredentials) { // not required
		return nil
	}

	if m.TargetEntityCredentials != nil {
		if err := m.TargetEntityCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetEntityCredentials")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetEntityCredentials")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this destroy clone app task info proto based on the context it is used
func (m *DestroyCloneAppTaskInfoProto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateError(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTargetEntity(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTargetEntityCredentials(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DestroyCloneAppTaskInfoProto) contextValidateError(ctx context.Context, formats strfmt.Registry) error {

	if m.Error != nil {

		if swag.IsZero(m.Error) { // not required
			return nil
		}

		if err := m.Error.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("error")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("error")
			}
			return err
		}
	}

	return nil
}

func (m *DestroyCloneAppTaskInfoProto) contextValidateTargetEntity(ctx context.Context, formats strfmt.Registry) error {

	if m.TargetEntity != nil {

		if swag.IsZero(m.TargetEntity) { // not required
			return nil
		}

		if err := m.TargetEntity.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetEntity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetEntity")
			}
			return err
		}
	}

	return nil
}

func (m *DestroyCloneAppTaskInfoProto) contextValidateTargetEntityCredentials(ctx context.Context, formats strfmt.Registry) error {

	if m.TargetEntityCredentials != nil {

		if swag.IsZero(m.TargetEntityCredentials) { // not required
			return nil
		}

		if err := m.TargetEntityCredentials.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetEntityCredentials")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetEntityCredentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DestroyCloneAppTaskInfoProto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DestroyCloneAppTaskInfoProto) UnmarshalBinary(b []byte) error {
	var res DestroyCloneAppTaskInfoProto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
