// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// S3BackupJobParams Message that contains S3 Job level params.
//
// swagger:model S3BackupJobParams
type S3BackupJobParams struct {

	// If true, we will also backup object level acls if they are enabled.
	BackupObjectAcls *bool `json:"backupObjectAcls,omitempty"`

	// Version number of the backup associated with the job
	// version = 1 -> ENG-321027
	// version = 2 -> ENG-313025
	BackupVersion *int64 `json:"backupVersion,omitempty"`

	// The Amazon S3 Inventory report configuration
	InventoryReportFrequency *int32 `json:"inventoryReportFrequency,omitempty"`

	// ARN of the inventory report destination bucket for S3 backups.
	S3InventoryReportDestinationBucket *string `json:"s3InventoryReportDestinationBucket,omitempty"`

	// The prefix in the S3 destination bucket where inventory reports will be
	// stored. This field should be in the format
	// <destination-bucket-arn>/prefix.
	S3InventoryReportDestinationBucketPrefix *string `json:"s3InventoryReportDestinationBucketPrefix,omitempty"`

	// scheduled baseline freq days
	ScheduledBaselineFreqDays *int32 `json:"scheduledBaselineFreqDays,omitempty"`

	// If true then backup job will skip the S3 objects whose backup get failed.
	// Basically, won't fail the backup job if some of the objects gets failed.
	SkipFilesOnError *bool `json:"skipFilesOnError,omitempty"`

	// Objects whose storage class is not in the selected storage classes will
	// be skipped.
	StorageClasses []int32 `json:"storageClasses"`
}

// Validate validates this s3 backup job params
func (m *S3BackupJobParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this s3 backup job params based on context it is used
func (m *S3BackupJobParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *S3BackupJobParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *S3BackupJobParams) UnmarshalBinary(b []byte) error {
	var res S3BackupJobParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
