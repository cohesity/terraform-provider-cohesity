// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SQLInstanceInfoProductBuildTypeInfo Holds information about the SQL Server build type.
//
// swagger:model SQLInstanceInfo_ProductBuildTypeInfo
type SQLInstanceInfoProductBuildTypeInfo struct {

	// The build type of the SQL Instance. If not set, the build type is
	// not applicable to the SQL Instance (i.e., it is a nullable field).
	BuildType *int32 `json:"buildType,omitempty"`

	// This holds the string value returned by SQL Server for the
	// SERVERPROPERTY('ProductBuildType').
	BuildTypeString *string `json:"buildTypeString,omitempty"`
}

// Validate validates this SQL instance info product build type info
func (m *SQLInstanceInfoProductBuildTypeInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this SQL instance info product build type info based on context it is used
func (m *SQLInstanceInfoProductBuildTypeInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SQLInstanceInfoProductBuildTypeInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SQLInstanceInfoProductBuildTypeInfo) UnmarshalBinary(b []byte) error {
	var res SQLInstanceInfoProductBuildTypeInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
