// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LatencyThresholds Latency Thresholds.
//
// Specifies latency thresholds that trigger throttling for all datastores
// found in the registered Protection Source or specific to one datastore.
//
// swagger:model LatencyThresholds
type LatencyThresholds struct {

	// If the latency of a datastore is above this value, existing backup tasks
	// using the datastore are throttled.
	ActiveTaskMsecs *int64 `json:"activeTaskMsecs,omitempty"`

	// If the latency of a datastore is above this value, then new backup tasks
	// using the datastore will not be started.
	NewTaskMsecs *int64 `json:"newTaskMsecs,omitempty"`
}

// Validate validates this latency thresholds
func (m *LatencyThresholds) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this latency thresholds based on context it is used
func (m *LatencyThresholds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LatencyThresholds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LatencyThresholds) UnmarshalBinary(b []byte) error {
	var res LatencyThresholds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
