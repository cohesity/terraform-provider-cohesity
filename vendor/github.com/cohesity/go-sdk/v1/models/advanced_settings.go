// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdvancedSettings This is used to regulate certain gflag values from the UI. The values
// passed by the user from the UI will be used for the respective gflags.
//
// Message to capture SQL gflags.
//
// swagger:model AdvancedSettings
type AdvancedSettings struct {

	// Whether to report error if SQL database is cloned.
	ClonedDbBackupStatus *int32 `json:"clonedDbBackupStatus,omitempty"`

	// Whether to report error if SQL database is not online, it includes states
	// such as offline, restoring as well as any other state for which db is not
	// online.
	DbBackupIfNotOnlineStatus *int32 `json:"dbBackupIfNotOnlineStatus,omitempty"`

	// If true, out of band incremental backup will be started when the log chain
	// is broken. It will be started at the end of the log backup.
	LogChainBreakAutoTriggerOobIncrBackup *bool `json:"logChainBreakAutoTriggerOobIncrBackup,omitempty"`

	// Fail the backup job when the database is missing. The database may be
	// missing if it is deleted or corrupted.
	MissingDbBackupStatus *int32 `json:"missingDbBackupStatus,omitempty"`

	// If true, out of band incremental backup will be started when a new
	// database is found. It will be started at the end of the log backup.
	NewDatabaseAutoTriggerOobIncrBackup *bool `json:"newDatabaseAutoTriggerOobIncrBackup,omitempty"`

	// Fail the backup job when database is offline or restoring.
	OfflineRestoringDbBackupStatus *int32 `json:"offlineRestoringDbBackupStatus,omitempty"`

	// Whether to skip backup for read-only SQL databases
	ReadOnlyDbBackupStatus *int32 `json:"readOnlyDbBackupStatus,omitempty"`

	// Whether to report error for all faulty dbs in non-autoprotect jobs. This
	// will fail backup job if any db is offline/restoring/cloned etc.
	ReportAllNonAutoprotectDbErrors *int32 `json:"reportAllNonAutoprotectDbErrors,omitempty"`
}

// Validate validates this advanced settings
func (m *AdvancedSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this advanced settings based on context it is used
func (m *AdvancedSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedSettings) UnmarshalBinary(b []byte) error {
	var res AdvancedSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
