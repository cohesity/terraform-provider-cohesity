// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpmiConfiguration IPMI Configuration.
//
// Specifies the parameters for configuration of IPMI. This is only needed
// for physical clusters.
//
// swagger:model IpmiConfiguration
type IpmiConfiguration struct {

	// Specifies the default Gateway IP Address for the IPMI network.
	IpmiGateway *string `json:"ipmiGateway,omitempty"`

	// Specifies the IPMI Password.
	IpmiPassword *string `json:"ipmiPassword,omitempty"`

	// Specifies the subnet mask for the IPMI network.
	IpmiSubnetMask *string `json:"ipmiSubnetMask,omitempty"`

	// Specifies the IPMI Username.
	IpmiUsername *string `json:"ipmiUsername,omitempty"`
}

// Validate validates this ipmi configuration
func (m *IpmiConfiguration) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipmi configuration based on context it is used
func (m *IpmiConfiguration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpmiConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpmiConfiguration) UnmarshalBinary(b []byte) error {
	var res IpmiConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
