// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ViewIDMappingProtoProtocolAccessInfo view Id mapping proto protocol access info
//
// swagger:model ViewIdMappingProto_ProtocolAccessInfo
type ViewIDMappingProtoProtocolAccessInfo struct {

	// Access control for iSCSI protocol for this view.
	IscsiAccess *int32 `json:"iscsiAccess,omitempty"`

	// Access control for NFSv4.1 protocol for this view. NFSv4.1 will be
	// disabled by default in all configurations.
	Nfs4Access *int32 `json:"nfs4Access,omitempty"`

	// Access control for NFS protocol for this view.
	NfsAccess *int32 `json:"nfsAccess,omitempty"`

	// Access control for S3 protocol for this view.
	S3Access *int32 `json:"s3Access,omitempty"`

	// Access control for SMB protocol for this view.
	SmbAccess *int32 `json:"smbAccess,omitempty"`

	// Access control for Swift protocol for this view.
	SwiftAccess *int32 `json:"swiftAccess,omitempty"`
}

// Validate validates this view Id mapping proto protocol access info
func (m *ViewIDMappingProtoProtocolAccessInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this view Id mapping proto protocol access info based on context it is used
func (m *ViewIDMappingProtoProtocolAccessInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ViewIDMappingProtoProtocolAccessInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ViewIDMappingProtoProtocolAccessInfo) UnmarshalBinary(b []byte) error {
	var res ViewIDMappingProtoProtocolAccessInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
