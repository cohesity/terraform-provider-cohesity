// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VaultProviderStatsByEnv Vault Provider Stats By Env.
//
// Specifies the Vault stats by environments.
//
// swagger:model VaultProviderStatsByEnv
type VaultProviderStatsByEnv struct {

	// Specifies the count of the objects of the specified environment.
	Count *int64 `json:"count,omitempty"`

	// Specifies the environment type.
	// Enum: ["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kVCD","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kAD","kAWSSnapshotManager"]
	Environment *string `json:"environment,omitempty"`

	// Specifies the size of the entities of the specified environment.
	Size *int64 `json:"size,omitempty"`
}

// Validate validates this vault provider stats by env
func (m *VaultProviderStatsByEnv) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vaultProviderStatsByEnvTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kSQL","kView","kPuppeteer","kPhysical","kPure","kNimble","kAzure","kNetapp","kAgent","kGenericNas","kAcropolis","kPhysicalFiles","kIsilon","kGPFS","kKVM","kAWS","kExchange","kHyperVVSS","kOracle","kGCP","kFlashBlade","kAWSNative","kVCD","kO365","kO365Outlook","kHyperFlex","kGCPNative","kAzureNative","kAD","kAWSSnapshotManager"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vaultProviderStatsByEnvTypeEnvironmentPropEnum = append(vaultProviderStatsByEnvTypeEnvironmentPropEnum, v)
	}
}

const (

	// VaultProviderStatsByEnvEnvironmentKVMware captures enum value "kVMware"
	VaultProviderStatsByEnvEnvironmentKVMware string = "kVMware"

	// VaultProviderStatsByEnvEnvironmentKHyperV captures enum value "kHyperV"
	VaultProviderStatsByEnvEnvironmentKHyperV string = "kHyperV"

	// VaultProviderStatsByEnvEnvironmentKSQL captures enum value "kSQL"
	VaultProviderStatsByEnvEnvironmentKSQL string = "kSQL"

	// VaultProviderStatsByEnvEnvironmentKView captures enum value "kView"
	VaultProviderStatsByEnvEnvironmentKView string = "kView"

	// VaultProviderStatsByEnvEnvironmentKPuppeteer captures enum value "kPuppeteer"
	VaultProviderStatsByEnvEnvironmentKPuppeteer string = "kPuppeteer"

	// VaultProviderStatsByEnvEnvironmentKPhysical captures enum value "kPhysical"
	VaultProviderStatsByEnvEnvironmentKPhysical string = "kPhysical"

	// VaultProviderStatsByEnvEnvironmentKPure captures enum value "kPure"
	VaultProviderStatsByEnvEnvironmentKPure string = "kPure"

	// VaultProviderStatsByEnvEnvironmentKNimble captures enum value "kNimble"
	VaultProviderStatsByEnvEnvironmentKNimble string = "kNimble"

	// VaultProviderStatsByEnvEnvironmentKAzure captures enum value "kAzure"
	VaultProviderStatsByEnvEnvironmentKAzure string = "kAzure"

	// VaultProviderStatsByEnvEnvironmentKNetapp captures enum value "kNetapp"
	VaultProviderStatsByEnvEnvironmentKNetapp string = "kNetapp"

	// VaultProviderStatsByEnvEnvironmentKAgent captures enum value "kAgent"
	VaultProviderStatsByEnvEnvironmentKAgent string = "kAgent"

	// VaultProviderStatsByEnvEnvironmentKGenericNas captures enum value "kGenericNas"
	VaultProviderStatsByEnvEnvironmentKGenericNas string = "kGenericNas"

	// VaultProviderStatsByEnvEnvironmentKAcropolis captures enum value "kAcropolis"
	VaultProviderStatsByEnvEnvironmentKAcropolis string = "kAcropolis"

	// VaultProviderStatsByEnvEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	VaultProviderStatsByEnvEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// VaultProviderStatsByEnvEnvironmentKIsilon captures enum value "kIsilon"
	VaultProviderStatsByEnvEnvironmentKIsilon string = "kIsilon"

	// VaultProviderStatsByEnvEnvironmentKGPFS captures enum value "kGPFS"
	VaultProviderStatsByEnvEnvironmentKGPFS string = "kGPFS"

	// VaultProviderStatsByEnvEnvironmentKKVM captures enum value "kKVM"
	VaultProviderStatsByEnvEnvironmentKKVM string = "kKVM"

	// VaultProviderStatsByEnvEnvironmentKAWS captures enum value "kAWS"
	VaultProviderStatsByEnvEnvironmentKAWS string = "kAWS"

	// VaultProviderStatsByEnvEnvironmentKExchange captures enum value "kExchange"
	VaultProviderStatsByEnvEnvironmentKExchange string = "kExchange"

	// VaultProviderStatsByEnvEnvironmentKHyperVVSS captures enum value "kHyperVVSS"
	VaultProviderStatsByEnvEnvironmentKHyperVVSS string = "kHyperVVSS"

	// VaultProviderStatsByEnvEnvironmentKOracle captures enum value "kOracle"
	VaultProviderStatsByEnvEnvironmentKOracle string = "kOracle"

	// VaultProviderStatsByEnvEnvironmentKGCP captures enum value "kGCP"
	VaultProviderStatsByEnvEnvironmentKGCP string = "kGCP"

	// VaultProviderStatsByEnvEnvironmentKFlashBlade captures enum value "kFlashBlade"
	VaultProviderStatsByEnvEnvironmentKFlashBlade string = "kFlashBlade"

	// VaultProviderStatsByEnvEnvironmentKAWSNative captures enum value "kAWSNative"
	VaultProviderStatsByEnvEnvironmentKAWSNative string = "kAWSNative"

	// VaultProviderStatsByEnvEnvironmentKVCD captures enum value "kVCD"
	VaultProviderStatsByEnvEnvironmentKVCD string = "kVCD"

	// VaultProviderStatsByEnvEnvironmentKO365 captures enum value "kO365"
	VaultProviderStatsByEnvEnvironmentKO365 string = "kO365"

	// VaultProviderStatsByEnvEnvironmentKO365Outlook captures enum value "kO365Outlook"
	VaultProviderStatsByEnvEnvironmentKO365Outlook string = "kO365Outlook"

	// VaultProviderStatsByEnvEnvironmentKHyperFlex captures enum value "kHyperFlex"
	VaultProviderStatsByEnvEnvironmentKHyperFlex string = "kHyperFlex"

	// VaultProviderStatsByEnvEnvironmentKGCPNative captures enum value "kGCPNative"
	VaultProviderStatsByEnvEnvironmentKGCPNative string = "kGCPNative"

	// VaultProviderStatsByEnvEnvironmentKAzureNative captures enum value "kAzureNative"
	VaultProviderStatsByEnvEnvironmentKAzureNative string = "kAzureNative"

	// VaultProviderStatsByEnvEnvironmentKAD captures enum value "kAD"
	VaultProviderStatsByEnvEnvironmentKAD string = "kAD"

	// VaultProviderStatsByEnvEnvironmentKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	VaultProviderStatsByEnvEnvironmentKAWSSnapshotManager string = "kAWSSnapshotManager"
)

// prop value enum
func (m *VaultProviderStatsByEnv) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vaultProviderStatsByEnvTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VaultProviderStatsByEnv) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vault provider stats by env based on context it is used
func (m *VaultProviderStatsByEnv) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VaultProviderStatsByEnv) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VaultProviderStatsByEnv) UnmarshalBinary(b []byte) error {
	var res VaultProviderStatsByEnv
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
