// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TagAttribute VMware Tag Attributes.
//
// Specifies a VMware tag.
//
// swagger:model TagAttribute
type TagAttribute struct {

	// Specifies the tag attribute type of GCP.
	// Going forward, there will be an additional TagTypes for AWS as well.
	// Specifies the type of the tag GCP entity refers to.
	// 'kNetworkTag' indicates a network tag present on instances.
	// 'kLabel' indicates a label (key-value pair) present on instances.
	// 'kCustomMetadata' indicates custom Metadata (key-value pair) present on
	// instances.
	// Enum: ["kNetworkTag","kLabel","kCustomMetadata"]
	GcpTagType *string `json:"gcpTagType,omitempty"`

	// Specifies the Coheisty id of the VM tag.
	ID *int64 `json:"id,omitempty"`

	// Specifies the VMware name of the VM tag.
	Name *string `json:"name,omitempty"`

	// Specifies the VMware Universally Unique Identifier (UUID) of the
	// VM tag.
	UUID *string `json:"uuid,omitempty"`
}

// Validate validates this tag attribute
func (m *TagAttribute) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGcpTagType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tagAttributeTypeGcpTagTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kNetworkTag","kLabel","kCustomMetadata"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tagAttributeTypeGcpTagTypePropEnum = append(tagAttributeTypeGcpTagTypePropEnum, v)
	}
}

const (

	// TagAttributeGcpTagTypeKNetworkTag captures enum value "kNetworkTag"
	TagAttributeGcpTagTypeKNetworkTag string = "kNetworkTag"

	// TagAttributeGcpTagTypeKLabel captures enum value "kLabel"
	TagAttributeGcpTagTypeKLabel string = "kLabel"

	// TagAttributeGcpTagTypeKCustomMetadata captures enum value "kCustomMetadata"
	TagAttributeGcpTagTypeKCustomMetadata string = "kCustomMetadata"
)

// prop value enum
func (m *TagAttribute) validateGcpTagTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tagAttributeTypeGcpTagTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TagAttribute) validateGcpTagType(formats strfmt.Registry) error {
	if swag.IsZero(m.GcpTagType) { // not required
		return nil
	}

	// value enum
	if err := m.validateGcpTagTypeEnum("gcpTagType", "body", *m.GcpTagType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tag attribute based on context it is used
func (m *TagAttribute) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TagAttribute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TagAttribute) UnmarshalBinary(b []byte) error {
	var res TagAttribute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
