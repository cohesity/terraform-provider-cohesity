// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VaultDeleteParams Vault Delete Params.
//
// VaultDeleteParams represents the parameters needed to delete a specific
// vault.
//
// swagger:model VaultDeleteParams
type VaultDeleteParams struct {

	// Specifies whether to force delete the vault.
	// If the flag is set to true, the RemovalState of the vault is changed to
	// 'kMarkedForRemoval' and Eventually vault is removed from cluster config
	// and archived metadata from scribe is removed without necessarily deleting
	// the associated archived data.
	ForceDelete *bool `json:"forceDelete,omitempty"`

	// Specifies an id that identifies the Vault.
	ID *int64 `json:"id,omitempty"`

	// Specifies if Vaults that are marked for removal should be returned.
	IncludeMarkedForRemoval *bool `json:"includeMarkedForRemoval,omitempty"`

	// Specifies whether to retry a request after failure.
	Retry *bool `json:"retry,omitempty"`
}

// Validate validates this vault delete params
func (m *VaultDeleteParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vault delete params based on context it is used
func (m *VaultDeleteParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VaultDeleteParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VaultDeleteParams) UnmarshalBinary(b []byte) error {
	var res VaultDeleteParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
