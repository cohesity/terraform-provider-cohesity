// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestoreO365GroupsParamsMSGroupInfo restore o365 groups params m s group info
//
// swagger:model RestoreO365GroupsParams_MSGroupInfo
type RestoreO365GroupsParamsMSGroupInfo struct {

	// Details of the mailbox and site contents that need to be restored for
	// this group.
	GroupGranularParams *RestoreO365GroupsParamsGroupGranularParams `json:"groupGranularParams,omitempty"`

	// Specify if the entire Group (mailbox + site) is to be restored.
	IsFullGroupRequired *bool `json:"isFullGroupRequired,omitempty"`

	// Whether mailbox restore is full or granular.
	MailboxRestoreType *int32 `json:"mailboxRestoreType,omitempty"`

	// This will store the details of the MS groups to be restored.
	Object *RestoreObject `json:"object,omitempty"`

	// Whether site restore is full or granular.
	SiteRestoreType *int32 `json:"siteRestoreType,omitempty"`
}

// Validate validates this restore o365 groups params m s group info
func (m *RestoreO365GroupsParamsMSGroupInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupGranularParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreO365GroupsParamsMSGroupInfo) validateGroupGranularParams(formats strfmt.Registry) error {
	if swag.IsZero(m.GroupGranularParams) { // not required
		return nil
	}

	if m.GroupGranularParams != nil {
		if err := m.GroupGranularParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("groupGranularParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("groupGranularParams")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreO365GroupsParamsMSGroupInfo) validateObject(formats strfmt.Registry) error {
	if swag.IsZero(m.Object) { // not required
		return nil
	}

	if m.Object != nil {
		if err := m.Object.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this restore o365 groups params m s group info based on the context it is used
func (m *RestoreO365GroupsParamsMSGroupInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateGroupGranularParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreO365GroupsParamsMSGroupInfo) contextValidateGroupGranularParams(ctx context.Context, formats strfmt.Registry) error {

	if m.GroupGranularParams != nil {

		if swag.IsZero(m.GroupGranularParams) { // not required
			return nil
		}

		if err := m.GroupGranularParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("groupGranularParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("groupGranularParams")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreO365GroupsParamsMSGroupInfo) contextValidateObject(ctx context.Context, formats strfmt.Registry) error {

	if m.Object != nil {

		if swag.IsZero(m.Object) { // not required
			return nil
		}

		if err := m.Object.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestoreO365GroupsParamsMSGroupInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestoreO365GroupsParamsMSGroupInfo) UnmarshalBinary(b []byte) error {
	var res RestoreO365GroupsParamsMSGroupInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
