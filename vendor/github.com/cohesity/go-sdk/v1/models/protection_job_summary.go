// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtectionJobSummary Specifies Protection Job summary of an object.
//
// swagger:model ProtectionJobSummary
type ProtectionJobSummary struct {

	// Specifies the id of the cluster on which object is protected.
	ClusterID *int64 `json:"clusterId,omitempty"`

	// Specifies the incarnation id of the cluster on which object is protected.
	ClusterIncarnationID *int64 `json:"clusterIncarnationId,omitempty"`

	// Specifies if the Protection Job is created by an RPO policy.
	IsRpoJob *bool `json:"isRpoJob,omitempty"`

	// Specifies the id of the Protection Job.
	JobID *int64 `json:"jobId,omitempty"`

	// Specifies the name of the Protection Job.
	JobName *string `json:"jobName,omitempty"`

	// Specifies the last job run status.
	LastProtectionJobRunStatus *int32 `json:"lastProtectionJobRunStatus,omitempty"`

	// Specifies the id of the policy that is used by a Protection Job.
	// Format of policy id will be like following:
	// clusterid:clusterincarnationid:policyid.
	PolicyID *string `json:"policyId,omitempty"`

	// Specifies the name of the policy that is used by a Protection Job.
	PolicyName *string `json:"policyName,omitempty"`
}

// Validate validates this protection job summary
func (m *ProtectionJobSummary) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this protection job summary based on context it is used
func (m *ProtectionJobSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtectionJobSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectionJobSummary) UnmarshalBinary(b []byte) error {
	var res ProtectionJobSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
