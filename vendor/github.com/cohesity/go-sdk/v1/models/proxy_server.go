// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProxyServer ProxyServer is the struct containing the proxy server for this cluster.
//
// swagger:model ProxyServer
type ProxyServer struct {

	// Address of the proxy. This can be hostname or IP address.
	Address *string `json:"address,omitempty"`

	// IsDisabled determines if the proxy configuration is disabled.
	IsDisabled *bool `json:"isDisabled,omitempty"`

	// Name of the proxy.
	Name *string `json:"name,omitempty"`

	// Password of the proxy. This field is used when the password is updated.
	Password *string `json:"password,omitempty"`

	// Port of the proxy.
	Port *int32 `json:"port,omitempty"`

	// Schemes of the proxy.
	Schemes []string `json:"schemes"`

	// Services to use the proxy.
	Services []int32 `json:"services"`

	// Type of proxy.
	Type *string `json:"type,omitempty"`

	// Username of the proxy.
	Username *string `json:"username,omitempty"`
}

// Validate validates this proxy server
func (m *ProxyServer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this proxy server based on context it is used
func (m *ProxyServer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProxyServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProxyServer) UnmarshalBinary(b []byte) error {
	var res ProxyServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
