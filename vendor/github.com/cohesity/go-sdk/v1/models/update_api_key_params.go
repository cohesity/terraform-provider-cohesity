// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateAPIKeyParams Parameters to update an API key.
//
// Specifies the parameters to update an API key.
//
// swagger:model UpdateApiKeyParams
type UpdateAPIKeyParams struct {

	// Specifies a time stamp when the API key will expire in milli seconds.
	ExpiringTimeMsecs *int64 `json:"expiringTimeMsecs,omitempty"`

	// Specifies if the API key is active. Only an active and not expired API key
	// can be used for authentication.
	IsActive *bool `json:"isActive,omitempty"`

	// Specifies the name of API key.
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this update Api key params
func (m *UpdateAPIKeyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateAPIKeyParams) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update Api key params based on context it is used
func (m *UpdateAPIKeyParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateAPIKeyParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateAPIKeyParams) UnmarshalBinary(b []byte) error {
	var res UpdateAPIKeyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
