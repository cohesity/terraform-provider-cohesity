// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ObjectMeta object meta
//
// swagger:model ObjectMeta
type ObjectMeta struct {

	// Annotations added to the object.
	Annotations map[string]string `json:"annotations,omitempty"`

	// A set of key-value pairs, capturing the labels of a k8s object.
	Labels map[string]string `json:"labels,omitempty"`

	// Name must be unique within a namespace. Is required when creating
	// resources, although some resources may allow a client to request the
	// generation of an appropriate name automatically. Name is primarily
	// intended for creation idempotence and configuration definition. Cannot be
	// updated.
	Name *string `json:"name,omitempty"`

	// Namespace defines the space within each name must be unique. An empty
	// namespace is equivalent to the "default" namespace, but "default" is the
	// canonical representation. Not all objects are required to be scoped to a
	// namespace - the value of this field for those objects will be empty.
	Namespace *string `json:"namespace,omitempty"`

	// UUID of the object queried.
	UID *string `json:"uid,omitempty"`
}

// Validate validates this object meta
func (m *ObjectMeta) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this object meta based on context it is used
func (m *ObjectMeta) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ObjectMeta) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectMeta) UnmarshalBinary(b []byte) error {
	var res ObjectMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
