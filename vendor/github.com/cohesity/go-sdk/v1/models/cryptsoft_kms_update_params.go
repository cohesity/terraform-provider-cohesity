// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CryptsoftKmsUpdateParams CryptsoftKmsUpdateParams to define CryptsoftKms.
//
// swagger:model CryptsoftKmsUpdateParams
type CryptsoftKmsUpdateParams struct {

	// AdditonalServerAddress for the KMS server.
	AdditionalServerAddress []string `json:"additionalServerAddress"`

	// Specifies the CA certificate in PEM format.
	CaCertificate *string `json:"caCertificate,omitempty"`

	// Specifies the client certificate.
	// It is in PEM format.
	ClientCertificate *string `json:"clientCertificate,omitempty"`

	// Specifies the client private key.
	ClientKey *string `json:"clientKey,omitempty"`

	// Specifies protocol version used to communicate with the KMS.
	KmipProtocolVersion *string `json:"kmipProtocolVersion,omitempty"`

	// Specifies the KMS IP address.
	ServerIP *string `json:"serverIp,omitempty"`

	// Specifies port on which the server is listening.
	// Default port is 5696.
	ServerPort *int32 `json:"serverPort,omitempty"`
}

// Validate validates this cryptsoft kms update params
func (m *CryptsoftKmsUpdateParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cryptsoft kms update params based on context it is used
func (m *CryptsoftKmsUpdateParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CryptsoftKmsUpdateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CryptsoftKmsUpdateParams) UnmarshalBinary(b []byte) error {
	var res CryptsoftKmsUpdateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
