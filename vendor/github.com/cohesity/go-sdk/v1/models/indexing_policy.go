// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IndexingPolicy Indexing Policy.
//
// Specifies settings for indexing files found in an Object
// (such as a VM) so these files can be searched and recovered.
// This also specifies inclusion and exclusion rules that determine
// the directories to index.
//
// swagger:model IndexingPolicy
type IndexingPolicy struct {

	// Array of Indexed Directories.
	//
	// Specifies a list of directories to index.
	AllowPrefixes []string `json:"allowPrefixes"`

	// Array of Excluded Directories.
	//
	// Specifies a list of directories to exclude from indexing.
	DenyPrefixes []string `json:"denyPrefixes"`

	// Specifies if the files found in an Object (such as a VM) should be
	// indexed. If false (the default), files are indexed.
	DisableIndexing *bool `json:"disableIndexing,omitempty"`
}

// Validate validates this indexing policy
func (m *IndexingPolicy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this indexing policy based on context it is used
func (m *IndexingPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IndexingPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexingPolicy) UnmarshalBinary(b []byte) error {
	var res IndexingPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
