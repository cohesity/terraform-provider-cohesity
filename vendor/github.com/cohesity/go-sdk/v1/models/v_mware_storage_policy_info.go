// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VMwareStoragePolicyInfo This message has fields which are created when VCD instant recovery or Test
// and dev uses custom storage policy.
//
// swagger:model VMwareStoragePolicyInfo
type VMwareStoragePolicyInfo struct {

	// category id of custom category created.
	CategoryID *string `json:"categoryId,omitempty"`

	// Name of the custom category.
	CategoryName *string `json:"categoryName,omitempty"`

	// ID of the target provider vdc. Need these to delete storage policy in GC.
	PvdcUUID *string `json:"pvdcUuid,omitempty"`

	// If set to true, all above custom created fields are added in GC.
	RecordErrorForGc *bool `json:"recordErrorForGc,omitempty"`

	// Name of the custom storage policy.
	StoragePolicyName *string `json:"storagePolicyName,omitempty"`

	// ID of the provider vdc storage policy.
	StorageProfilePvdcUUID *string `json:"storageProfilePvdcUuid,omitempty"`

	// ID of the org vdc storage policy.
	StorageProfileVdcUUID *string `json:"storageProfileVdcUuid,omitempty"`

	// Tag id of the custom tag created
	TagID *string `json:"tagId,omitempty"`

	// Name of the custom tag.
	TagName *string `json:"tagName,omitempty"`

	// ID of the target org vdc.
	VdcUUID *string `json:"vdcUuid,omitempty"`

	// ID of custom Vcenter storage policy created.
	VmwareStoragePolicyID *string `json:"vmwareStoragePolicyId,omitempty"`
}

// Validate validates this v mware storage policy info
func (m *VMwareStoragePolicyInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v mware storage policy info based on context it is used
func (m *VMwareStoragePolicyInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VMwareStoragePolicyInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VMwareStoragePolicyInfo) UnmarshalBinary(b []byte) error {
	var res VMwareStoragePolicyInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
