// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DownloadChatsParams Message containing params for downloading chat/post messages for
// user/teams/channel.
//
// swagger:model DownloadChatsParams
type DownloadChatsParams struct {

	// List of channel IDs whose chats needs to be downloaded. This will only be
	// populated when specific channel's posts needs to be downloaded. If this is
	// not populated full teams posts will be downloaded.
	ChannelIdsVec []string `json:"channelIdsVec"`

	// File type which will be downloaded containing chat messages.
	DownloadFileType *int32 `json:"downloadFileType,omitempty"`

	// HTML template for the downloaded chats. IRIS will populate this by
	// reading the template locally.
	HTMLTemplate *string `json:"htmlTemplate,omitempty"`
}

// Validate validates this download chats params
func (m *DownloadChatsParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this download chats params based on context it is used
func (m *DownloadChatsParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DownloadChatsParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DownloadChatsParams) UnmarshalBinary(b []byte) error {
	var res DownloadChatsParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
