// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// QuotaPolicy Quota Policy
//
// Specifies a quota limit that can be optionally applied to Views and
// View Boxes.
// At the View level, this quota defines a logical limit for usage on the View.
// At the View Box level, this quota defines a physical limit or
// a default logical View limit.
// If a physical quota is specified for View Box, this quota defines a physical
// limit for the usage on the View Box.
// If a default logical View quota is specified for View Box, this limit
// is inherited by all the Views in that View Box.
// However, this inherited quota can be overwritten at the View level.
// A new write is not allowed if the resource will exceed the specified quota.
// However, it takes time for the Cohesity Cluster to calculate
// the usage across Nodes, so the limit may be exceeded by a small amount.
// In addition, if the limit is increased or data is removed,
// there may be a delay before the Cohesity Cluster allows more data
// to be written to the resource, as the Cluster calculates the usage
// across Nodes.
//
// swagger:model QuotaPolicy
type QuotaPolicy struct {

	// Specifies if an alert should be triggered when the usage of this
	// resource exceeds this quota limit.
	// This limit is optional and is specified in bytes.
	// If no value is specified, there is no limit.
	AlertLimitBytes *int64 `json:"alertLimitBytes,omitempty"`

	// Supported only for user quota policy. Specifies when the usage goes above
	// an alert threshold percentage which is:
	// HardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes
	// Can only be set if HardLimitBytes is set.
	// Cannot be set if AlertLimitBytes is already set.
	AlertThresholdPercentage *int64 `json:"alertThresholdPercentage,omitempty"`

	// Specifies an optional quota limit on the usage allowed for this
	// resource. This limit is specified in bytes. If no value is specified,
	// there is no limit.
	HardLimitBytes *int64 `json:"hardLimitBytes,omitempty"`
}

// Validate validates this quota policy
func (m *QuotaPolicy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this quota policy based on context it is used
func (m *QuotaPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *QuotaPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QuotaPolicy) UnmarshalBinary(b []byte) error {
	var res QuotaPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
