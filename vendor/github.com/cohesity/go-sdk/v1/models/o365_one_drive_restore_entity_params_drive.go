// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// O365OneDriveRestoreEntityParamsDrive o365 one drive restore entity params drive
//
// swagger:model O365OneDriveRestoreEntityParams_Drive
type O365OneDriveRestoreEntityParamsDrive struct {

	// Type of OneDrive drive being stored.
	DriveType *int32 `json:"driveType,omitempty"`

	// Specify if the entire drive is to be restored.
	// This field should be false if restore_item_vec size > 0.
	IsEntireDriveRequired *bool `json:"isEntireDriveRequired,omitempty"`

	// Id of the drive whose items are being restored.
	RestoreDriveID *string `json:"restoreDriveId,omitempty"`

	// List of drive paths that need to be restored. Used for partial drive
	// recovery.
	RestoreItemVec []*O365OneDriveRestoreEntityParamsDriveItem `json:"restoreItemVec"`
}

// Validate validates this o365 one drive restore entity params drive
func (m *O365OneDriveRestoreEntityParamsDrive) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRestoreItemVec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *O365OneDriveRestoreEntityParamsDrive) validateRestoreItemVec(formats strfmt.Registry) error {
	if swag.IsZero(m.RestoreItemVec) { // not required
		return nil
	}

	for i := 0; i < len(m.RestoreItemVec); i++ {
		if swag.IsZero(m.RestoreItemVec[i]) { // not required
			continue
		}

		if m.RestoreItemVec[i] != nil {
			if err := m.RestoreItemVec[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restoreItemVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("restoreItemVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this o365 one drive restore entity params drive based on the context it is used
func (m *O365OneDriveRestoreEntityParamsDrive) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRestoreItemVec(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *O365OneDriveRestoreEntityParamsDrive) contextValidateRestoreItemVec(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RestoreItemVec); i++ {

		if m.RestoreItemVec[i] != nil {

			if swag.IsZero(m.RestoreItemVec[i]) { // not required
				return nil
			}

			if err := m.RestoreItemVec[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restoreItemVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("restoreItemVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *O365OneDriveRestoreEntityParamsDrive) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *O365OneDriveRestoreEntityParamsDrive) UnmarshalBinary(b []byte) error {
	var res O365OneDriveRestoreEntityParamsDrive
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
