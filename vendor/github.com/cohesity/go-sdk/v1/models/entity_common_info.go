// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EntityCommonInfo The following proto contains information common to all types of cloud
// entities.
//
// swagger:model EntityCommonInfo
type EntityCommonInfo struct {

	// Id given to the entity by the cloud provider.
	//
	// In case of Azure, depending upon the type of the entity, Azure returns
	// unix path style id. Examples:
	//
	// Id for a subscription: /subscriptions/3215d0a4-e99d-4b0c-b106-e2a7708e0024
	// Id for a resource group:
	// subscriptions/3215d0a4-e99d-4b0c-b106-e2a7708e0024/resourceGroups/tumri
	//
	// For storage container and storage key we generate the id ourself.
	//
	// storage container: <storage account>/c/<storage container>
	// storage key: <storage account>/k/<storage key>
	ID *string `json:"id,omitempty"`

	// Name of the entity. It is set to the name given to the entity by the cloud
	// provider. If the cloud provider doesn't provide name for the entity, it
	// wont' be set. This could be set to the virtual machine name if the entity
	// type is kVirtualMachine.
	Name *string `json:"name,omitempty"`

	// If this entity is protected using Physical Agent, it must be registered
	// as a physical host. The following is id of the entity corresponding to the
	// physical host.
	PhysicalEntityID *int64 `json:"physicalEntityId,omitempty"`

	// The following is set to id of the "convert and deploy" restore task that
	// created the entity in the cloud.
	//
	// It is required to support the DR-to-cloud usecase where we replicate an
	// on-prem entity to a cluster running in cloud, bring it up using
	// "convert and deploy" mechanism, protect it using a cloud job that uses
	// physical adapter, and convert it back to the on-prem format before
	// replication.
	//
	// Before replicating, we need to update the backup task state of the backed
	// up entity using the on-prem entity and on-prem entity's parent.
	// The id is used to lookup the restore entity that contains details about
	// the on-prem entity.
	//
	// It is set at the time of refreshing the cloud entity hierarchy if all the
	// following conditions are met:
	// Name of the current entity matches with name of any cloud entity
	// deployed using the "convert and deploy" restore task.
	// Restore entity associated with the above matched cloud entity has
	// 'failed_over' flag set to true in its cloud extension.
	RestoreTaskID *int64 `json:"restoreTaskId,omitempty"`

	// Type of subscription.
	SubscriptionType *int32 `json:"subscriptionType,omitempty"`
}

// Validate validates this entity common info
func (m *EntityCommonInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this entity common info based on context it is used
func (m *EntityCommonInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EntityCommonInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EntityCommonInfo) UnmarshalBinary(b []byte) error {
	var res EntityCommonInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
