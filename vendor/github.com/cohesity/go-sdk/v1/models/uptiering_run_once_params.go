// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UptieringRunOnceParams uptiering run once params
//
// swagger:model UptieringRunOnceParams
type UptieringRunOnceParams struct {

	// Ignore the uptiering policy and uptier the directory pointed by the
	// 'uptier_path'. If path is '/', then uptier everything.
	UptierPath *string `json:"uptierPath,omitempty"`

	// Flag to determine whether entity id is used for uptier range. This is
	// applicable only for uptier jobs.
	// TODO: Exists to support upgrade scenario. Can be deprecated once
	// all customers have upgraded beyond 7.0.1.
	UseEntityIDForUptierRange *bool `json:"useEntityIdForUptierRange,omitempty"`
}

// Validate validates this uptiering run once params
func (m *UptieringRunOnceParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uptiering run once params based on context it is used
func (m *UptieringRunOnceParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UptieringRunOnceParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UptieringRunOnceParams) UnmarshalBinary(b []byte) error {
	var res UptieringRunOnceParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
