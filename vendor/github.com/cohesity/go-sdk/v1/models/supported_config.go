// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SupportedConfig Supported Erasure Coding and Node Configurations.
//
// Lists the supported Erasure Coding options for the number of
// Nodes in the Cohesity Cluster. In addition, the minimum number
// of Nodes supported for this Cluster type is defined.
//
// swagger:model SupportedConfig
type SupportedConfig struct {

	// Specifies the minimum number of Nodes supported for this Cluster type.
	// For example, a Cohesity Cluster hosted directly on hardware must have at
	// least 3 Nodes.
	MinNodesAllowed *int32 `json:"minNodesAllowed,omitempty"`

	// Array of Supported Erasure Coding Options.
	//
	// List the supported Erasure Coding options for the current number of
	// Nodes (nodeCount) in this Cluster.
	// Each string in the array is in the following format:
	// "NumDataStripes:NumCodedStripes"
	// For example if there are 3 nodes in the Cluster, the following
	// Erasure Coding mode is returned: 2:1.
	// See the Cohesity Dashboard help documentation for details.
	SupportedErasureCoding []string `json:"supportedErasureCoding"`
}

// Validate validates this supported config
func (m *SupportedConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this supported config based on context it is used
func (m *SupportedConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SupportedConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SupportedConfig) UnmarshalBinary(b []byte) error {
	var res SupportedConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
