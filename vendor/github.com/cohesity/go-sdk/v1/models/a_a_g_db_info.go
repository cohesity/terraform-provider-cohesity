// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AAGDbInfo Information about one database that belongs to an AAG. This does not
// refer to a local database on one instance, but represents a synchronized
// database at the AAG level.
// Each AAG database shares the same information across each of its replicas.
// It will however have a different entity id on
// each of its replicas. We store the common information here.
// If we break the AAG, each replica's db will become an independent db.
//
// swagger:model AAGDbInfo
type AAGDbInfo struct {

	// The name of the database.
	DatabaseName *string `json:"databaseName,omitempty"`

	// The unique identifier of the database within the availability group.
	// This identifer is the same for all replicas on which the
	// database has been joined to the AAG.
	GroupDatabaseID *string `json:"groupDatabaseId,omitempty"`
}

// Validate validates this a a g db info
func (m *AAGDbInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this a a g db info based on context it is used
func (m *AAGDbInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AAGDbInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AAGDbInfo) UnmarshalBinary(b []byte) error {
	var res AAGDbInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
