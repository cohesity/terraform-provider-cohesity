// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestoreExchangeParamsViewOptions restore exchange params view options
//
// swagger:model RestoreExchangeParams_ViewOptions
type RestoreExchangeParamsViewOptions struct {

	// The path to access the SMB share.
	MountPoint *string `json:"mountPoint,omitempty"`

	// View to which the files of an Exchange database have to be cloned.
	ViewName *string `json:"viewName,omitempty"`

	// If set to true then when restore view is cloned then white-list all
	// IPs not just the agent IP.
	WhitelistRestoreViewForAll *bool `json:"whitelistRestoreViewForAll,omitempty"`
}

// Validate validates this restore exchange params view options
func (m *RestoreExchangeParamsViewOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this restore exchange params view options based on context it is used
func (m *RestoreExchangeParamsViewOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RestoreExchangeParamsViewOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestoreExchangeParamsViewOptions) UnmarshalBinary(b []byte) error {
	var res RestoreExchangeParamsViewOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
