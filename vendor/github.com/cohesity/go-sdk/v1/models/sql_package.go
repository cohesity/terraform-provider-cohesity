// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SQLPackage Message representing the options for SQL package.
//
// Details can be found here https://tinyurl.com/ysryshrx
//
// swagger:model SqlPackage
type SQLPackage struct {

	// Only applies to backup.
	Compression *int32 `json:"compression,omitempty"`

	// Specifies the degree of parallelism for concurrent operations running
	// against a database. The default value is 8.
	// Applies to backup/restore.
	MaxParallelism *int32 `json:"maxParallelism,omitempty"`

	// Specifies whether the extracted schema model should be verified. If set to
	// true, schema validation rules are run on the dacpac or bacpac.
	// Only applies to backup.
	VerifyExtraction *bool `json:"verifyExtraction,omitempty"`
}

// Validate validates this Sql package
func (m *SQLPackage) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this Sql package based on context it is used
func (m *SQLPackage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SQLPackage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SQLPackage) UnmarshalBinary(b []byte) error {
	var res SQLPackage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
