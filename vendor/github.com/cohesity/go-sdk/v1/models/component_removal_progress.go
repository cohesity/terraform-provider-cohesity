// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ComponentRemovalProgress ComponentRemovalProgress is the struct to define the removal progress of
// an entity w.r.t a given component.
//
// swagger:model ComponentRemovalProgress
type ComponentRemovalProgress struct {

	// If there is no progress for certain threshold time,
	// set this flag to true
	IsRemovalStuck *bool `json:"isRemovalStuck,omitempty"`

	// Progress percentage
	ProgressPercentage *int64 `json:"progressPercentage,omitempty"`

	// Removal progress details.
	RemovalProgress *string `json:"removalProgress,omitempty"`

	// Name of the component.
	ServiceName *string `json:"serviceName,omitempty"`

	// Time remaining
	TimeRemaining *int64 `json:"timeRemaining,omitempty"`
}

// Validate validates this component removal progress
func (m *ComponentRemovalProgress) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this component removal progress based on context it is used
func (m *ComponentRemovalProgress) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ComponentRemovalProgress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComponentRemovalProgress) UnmarshalBinary(b []byte) error {
	var res ComponentRemovalProgress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
