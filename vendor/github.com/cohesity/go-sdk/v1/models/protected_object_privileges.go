// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProtectedObjectPrivileges Protected objects privileges.
//
// ProtectedObjectPrivileges specifies which protected objects are allowed to
// be accessed by an app instance.
//
// swagger:model ProtectedObjectPrivileges
type ProtectedObjectPrivileges struct {

	// Specifies if all, none or specific protected objects are allowed to be
	// accessed.
	// Specifies if all, none or specific protected objects are allowed to be
	// accessed.
	// kNone - None of the protected objects have access.
	// kAll - All the protected objects have access.
	// kSpecific - Only specific protected objects have access.
	// Enum: ["kNone","kAll","kSpecific"]
	ProtectedObjectsprivilegesType *string `json:"protectedObjectsprivilegesType,omitempty"`

	// Specifies the ids of the protection sources which are allowed to be
	// accessed in case the privilege type is kSpecific.
	ProtectionSourceIds []int64 `json:"protectionSourceIds"`
}

// Validate validates this protected object privileges
func (m *ProtectedObjectPrivileges) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProtectedObjectsprivilegesType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var protectedObjectPrivilegesTypeProtectedObjectsprivilegesTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kNone","kAll","kSpecific"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protectedObjectPrivilegesTypeProtectedObjectsprivilegesTypePropEnum = append(protectedObjectPrivilegesTypeProtectedObjectsprivilegesTypePropEnum, v)
	}
}

const (

	// ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKNone captures enum value "kNone"
	ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKNone string = "kNone"

	// ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKAll captures enum value "kAll"
	ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKAll string = "kAll"

	// ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKSpecific captures enum value "kSpecific"
	ProtectedObjectPrivilegesProtectedObjectsprivilegesTypeKSpecific string = "kSpecific"
)

// prop value enum
func (m *ProtectedObjectPrivileges) validateProtectedObjectsprivilegesTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, protectedObjectPrivilegesTypeProtectedObjectsprivilegesTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ProtectedObjectPrivileges) validateProtectedObjectsprivilegesType(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectedObjectsprivilegesType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectedObjectsprivilegesTypeEnum("protectedObjectsprivilegesType", "body", *m.ProtectedObjectsprivilegesType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this protected object privileges based on context it is used
func (m *ProtectedObjectPrivileges) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtectedObjectPrivileges) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectedObjectPrivileges) UnmarshalBinary(b []byte) error {
	var res ProtectedObjectPrivileges
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
