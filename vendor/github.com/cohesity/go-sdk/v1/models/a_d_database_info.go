// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ADDatabaseInfo Information about AD Database (NTDS or ADAM) and their support files. If you
// change this message, update $ADDatabaseInfo in
// magneto/agents/windows/ad/scripts/ad_entityhierarchy.psm1 to maintain JSON
// compatibility.
//
// swagger:model ADDatabaseInfo
type ADDatabaseInfo struct {

	// NTDS.DIT db file path.  Example:C:\Windows\NTDS\ntds.dit.
	DbFilePath *string `json:"dbFilePath,omitempty"`

	// NTDS.DIT database file size on disk file system. -1 if it could not be
	// obtained.
	DbFileSizeBytes *int64 `json:"dbFileSizeBytes,omitempty"`

	// Volume device id where the DB file mount point lives. This should be
	// included in VSS snapshot.
	// Example: 63f6b242-8ec1-11e8-80e0-00505685e2a9
	DbVolumeGUID *string `json:"dbVolumeGuid,omitempty"`

	// LDAP TCP port on which this DB is listening.
	LdapPort *uint32 `json:"ldapPort,omitempty"`

	// LDAP SSL port on which this DB is listening. Note that DC does not enable
	// SSL by default even though a port number is assigned. SSL must be
	// configured.
	LdapSslPort *uint32 `json:"ldapSslPort,omitempty"`

	// Log directory. Example:C:\Windows\NTDS
	LogDirPath *string `json:"logDirPath,omitempty"`

	// Volume device id where the LOG dir mount point lives. This should be
	// included in VSS snapshot.
	// Example: 63f6b242-8ec1-11e8-80e0-00505685e2a9
	LogVolumeGUID *string `json:"logVolumeGuid,omitempty"`

	// Name of database. Example:NTDS , qa01ds1, qa01ds2
	Name *string `json:"name,omitempty"`
}

// Validate validates this a d database info
func (m *ADDatabaseInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this a d database info based on context it is used
func (m *ADDatabaseInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ADDatabaseInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ADDatabaseInfo) UnmarshalBinary(b []byte) error {
	var res ADDatabaseInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
