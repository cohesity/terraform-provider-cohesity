// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NetworkMapping Network Mapping
//
// Specifies the information needed when mapping the source networks to
// target networks during restore and clone actions.
//
// swagger:model NetworkMapping
type NetworkMapping struct {

	// Specifies if the network should be disabled. On restore or clone
	// of the VM, if the network should be kept in disabled state, set this
	// flag to true. The mapped network is enabled by default.
	DisableNetwork *bool `json:"disableNetwork,omitempty"`

	// Specifies if the source mac address should be preserved after restore
	// or clone. In case of collision of mac address on target network the
	// job won't fail. Address collision should be resolved manually.
	PreserveMacAddress *bool `json:"preserveMacAddress,omitempty"`

	// Specifies the id of the source network.
	SourceNetworkID *int64 `json:"sourceNetworkId,omitempty"`

	// Specifies the id of target network.
	TargetNetworkID *int64 `json:"targetNetworkId,omitempty"`
}

// Validate validates this network mapping
func (m *NetworkMapping) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this network mapping based on context it is used
func (m *NetworkMapping) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NetworkMapping) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworkMapping) UnmarshalBinary(b []byte) error {
	var res NetworkMapping
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
