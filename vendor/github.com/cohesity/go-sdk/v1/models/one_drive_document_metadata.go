// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OneDriveDocumentMetadata OneDrive document metadata.
//
// Specifies the metadata for the OneDrive document.
//
// swagger:model OneDriveDocumentMetadata
type OneDriveDocumentMetadata struct {

	// Specifies the type of OneDrive document(file/folder).
	// Specifies the OneDrive document type.
	//
	// 'kFile' specifies a file.
	// 'kFolder' specifies a folder.
	// Enum: ["kFile","kFolder"]
	DocumentType *string `json:"documentType,omitempty"`
}

// Validate validates this one drive document metadata
func (m *OneDriveDocumentMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var oneDriveDocumentMetadataTypeDocumentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kFile","kFolder"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oneDriveDocumentMetadataTypeDocumentTypePropEnum = append(oneDriveDocumentMetadataTypeDocumentTypePropEnum, v)
	}
}

const (

	// OneDriveDocumentMetadataDocumentTypeKFile captures enum value "kFile"
	OneDriveDocumentMetadataDocumentTypeKFile string = "kFile"

	// OneDriveDocumentMetadataDocumentTypeKFolder captures enum value "kFolder"
	OneDriveDocumentMetadataDocumentTypeKFolder string = "kFolder"
)

// prop value enum
func (m *OneDriveDocumentMetadata) validateDocumentTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, oneDriveDocumentMetadataTypeDocumentTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *OneDriveDocumentMetadata) validateDocumentType(formats strfmt.Registry) error {
	if swag.IsZero(m.DocumentType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDocumentTypeEnum("documentType", "body", *m.DocumentType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this one drive document metadata based on context it is used
func (m *OneDriveDocumentMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OneDriveDocumentMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OneDriveDocumentMetadata) UnmarshalBinary(b []byte) error {
	var res OneDriveDocumentMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
