// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetObjectsDetailsResult Specifies the common result structure of the objects response of a job run.
//
// swagger:model GetObjectsDetailsResult
type GetObjectsDetailsResult struct {

	// Specifies the end time of the run.
	EndTimeMsecs *int64 `json:"endTimeMsecs,omitempty"`

	// Specifies the entity environment of the object.
	EntityEnv *int64 `json:"entityEnv,omitempty"`

	// Specifies the entity id of the object.
	EntityID *int64 `json:"entityId,omitempty"`

	// Specifies the name of the entity.
	EntityName *string `json:"entityName,omitempty"`

	// Specifies the job id.
	JobID *string `json:"jobId,omitempty"`

	// Specifies the job run id.
	JobRunID *string `json:"jobRunId,omitempty"`

	// Specifies the job type, protection, replication, archival, apollo,
	// indexing etc.
	JobType *string `json:"jobType,omitempty"`

	// Specifies the start time of the run.
	StartTimeMsecs *int64 `json:"startTimeMsecs,omitempty"`

	// Specifies status of the object run.
	Status *int64 `json:"status,omitempty"`
}

// Validate validates this get objects details result
func (m *GetObjectsDetailsResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get objects details result based on context it is used
func (m *GetObjectsDetailsResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetObjectsDetailsResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetObjectsDetailsResult) UnmarshalBinary(b []byte) error {
	var res GetObjectsDetailsResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
