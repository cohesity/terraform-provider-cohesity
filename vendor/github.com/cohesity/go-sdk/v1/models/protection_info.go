// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtectionInfo Protection Information.
//
// dataLocation defines data location related information.
//
// swagger:model ProtectionInfo
type ProtectionInfo struct {

	// Specifies the end time for object retention.
	EndTimeUsecs *int64 `json:"endTimeUsecs,omitempty"`

	// Specifies the location of the object.
	Location *string `json:"location,omitempty"`

	// Specifies the id of the policy.
	PolicyID *string `json:"policyId,omitempty"`

	// Specifies the id of the protection job.
	ProtectionJobID *int64 `json:"protectionJobId,omitempty"`

	// Specifies the protection job name which protects this object.
	ProtectionJobName *string `json:"protectionJobName,omitempty"`

	// Specifies the retention period.
	RetentionPeriod *int64 `json:"retentionPeriod,omitempty"`

	// Specifies the start time for object retention.
	StartTimeUsecs *int64 `json:"startTimeUsecs,omitempty"`

	// Specifies the storage domain name.
	StorageDomain *string `json:"storageDomain,omitempty"`

	// Specifies the total number of snapshots.
	TotalSnapshots *int64 `json:"totalSnapshots,omitempty"`
}

// Validate validates this protection info
func (m *ProtectionInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this protection info based on context it is used
func (m *ProtectionInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtectionInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectionInfo) UnmarshalBinary(b []byte) error {
	var res ProtectionInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
