// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DiskAttachParams Message contains the params to attach the temp disk for the backup/restore.
//
// swagger:model DiskAttachParams
type DiskAttachParams struct {

	// Type of the disk.
	//
	// Types that are valid to be assigned to Type:
	// DiskAttachParams_AzureDisk
	Type IsDiskAttachParamsType `json:"Type,omitempty"`

	// Size of the disk to be provisioned.
	Size *int64 `json:"size,omitempty"`

	// Instance id of VM where the disk will be attached to.
	// Rigel instance ID in case of Azure SQL backup.
	// This is a optional param, If not set then magneto slave will use the
	// Rigel assigned by permit grant to fetch in instance id.
	VMInstanceIDStr *string `json:"vmInstanceIdStr,omitempty"`
}

// Validate validates this disk attach params
func (m *DiskAttachParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this disk attach params based on context it is used
func (m *DiskAttachParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DiskAttachParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DiskAttachParams) UnmarshalBinary(b []byte) error {
	var res DiskAttachParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
