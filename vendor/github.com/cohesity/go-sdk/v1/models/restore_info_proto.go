// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestoreInfoProto Message that encapsulates information about restore tasks for any of the
// environments we support. Environment specific restore infos are defined as
// extensions to this proto.
//
// Each available extension is listed below along with the location of the
// proto file (relative to magneto/connectors) where it is defined. The
// extension applies to both RestoreInfoProto as well as RestoreEntity.
//
// RestoreInfoProto extension                     Location            Extension
// =============================================================================
// vmware::RestoreInfo::vmware_restore_info     vmware/vmware.proto       100
// sql::RestoreInfo::sql_restore_info           sql/sql.proto             101
// pure::RestoreInfo::pure_restore_info         pure/pure.proto           102
// azure::RestoreInfo::azure_restore_info       azure/azure.proto         103
// file::RestoreInfo::file_restore_info         file/file.proto           104
// hyperv::RestoreInfo::hyperv_restore_info     hyperv/hyperv.proto       105
// acropolis::RestoreInfo::acropolis_restore_info
//
// acropolis/acropolis.proto 106
//
// kvm::RestoreInfo::kvm_restore_info           kvm/kvm.proto             107
// aws::RestoreInfo::aws_restore_info           aws/aws.proto             108
// physical::RestoreInfo::physical_restore_info physical.proto            109
// oracle::RestoreInfo::oracle_restore_info     oracle/oracle.proto       110
// outlook::RestoreInfo::outlook_restore_info   outlook/outlook.proto     111
// gcp::RestoreInfo::gcp_restore_info           gcp/gcp.proto             112
// ad::RestoreInfo::ad_restore_info             ad/ad.proto               113
// kubernetes::RestoreInfo::kubernetes_restore_info
//
// kubernetes/kubernetes.proto
// 114
//
// one_drive::RestoreInfo::one_drive_restore_info
//
// ms_graph/graph.proto      115
//
// cdp::RestoreInfo::cdp_restore_info           cdp.proto                 116
// exchange::RestoreInfo::exchange_restore_info exchange/exchange.proto   117
// imanis::RestoreInfo::nosql_recovery_info     imanis/nosql.proto        118
// o365::RestoreInfo::o365_restore_info
//
// o365/o365.proto      119
//
// o365::RestoreInfo::o365_one_drive_restore_info
//
// o365/o365.proto      120
//
// o365::PublicFolderRestoreInfoProto::public_folder_restore_info
//
// o365/o365.proto            121
//
// uda::RestoreInfo::uda_recovery_info          uda/uda.proto              122
// outlook::RestoreInfo::pst_convert_info       outlook/outlook.proto      123
// o365::GroupRestoreInfo::group_restore_info   o365/o365.proto            124
// o365::TeamsRestoreInfoProto::teams_restore_info
//
// o365/o365.proto            125
//
// sfdc::RestoreInfoProto::sfdc_restore_info
//
// sfdc/sfdc.proto            126
//
// object_store::RestoreInfoProto::object_store_restore_info
//
// object_store/object_store.proto
// 127
//
// san::GroupRestoreInfo::group_restore_info    san/san.proto              128
// o365::RestoreInfo::chats_download_info       o365/o365.proto            130
// o365::RestoreInfo::m365_csm_restore_info     o365/o365.proto            132
// =============================================================================
//
// RestoreInfoProto.RestoreEntity extension       Location            Extension
// =============================================================================
// vmware::RestoreEntityInfo::vmware_restore_entity_info
//
// vmware/vmware.proto        100
//
// azure::CloudDeployEntityInfo::azure_restore_entity_info
//
// azure/azure.proto          101
//
// hyperv::RestoreEntityInfo::hyperv_restore_entity_info
//
// hyperv/hyperv.proto        102
//
// acropolis::RestoreEntityInfo::acropolis_restore_entity_info
//
// acropolis/acropolis.proto  103
//
// kvm::RestoreEntityInfo::kvm_restore_entity_info
//
// kvm/kvm.proto              104
//
// aws::CloudDeployEntityInfo::aws_restore_entity_info
//
// aws/aws.proto              105
//
// outlook::RestoreEntityInfo::outlook_restore_entity_info
//
// outlook/outlook.proto      106
//
// gcp::CloudDeployEntityInfo::gcp_restore_entity_info
//
// gcp/gcp.proto              107
//
// kubernetes::RestoreEntityInfo::kubernetes_restore_entity_info
//
// kuebrnetes/kubernetes.proto
// 108
//
// one_drive::RestoreEntityInfo::one_drive_restore_entity_info
//
// ms_graph/graph.proto       109
//
// imanis::RestoreEntityInfo::nosql_restore_entity_info
//
// imanis/nosql.proto         110
//
// site::RestoreEntityInfo::site_restore_entity_info
//
// ms_graph/graph.proto       111
//
// uda::RestoreEntityInfo::uda_restore_entity_info
//
// uda/uda.proto              112
//
// sfdc::RestoreEntityInfo::sfdc_restore_entity_info
//
// sfdc/sfdc.proto            113
//
// o365::SharepointListsRestoreInfo::sharepoint_lists_restore_info
//
// o365/o365.proto            129
//
// =============================================================================
//
// swagger:model RestoreInfoProto
type RestoreInfoProto struct {

	// Captures the execution status of post script.
	PostScriptStatus *ScriptExecutionStatus `json:"postScriptStatus,omitempty"`

	// Captures the execution status of pre script.
	PreScriptStatus *ScriptExecutionStatus `json:"preScriptStatus,omitempty"`

	// Contains the file paths and the information of the restored entities.
	RestoreEntityVec []*RestoreInfoProtoRestoreEntity `json:"restoreEntityVec"`

	// Specifies the target type for the task. The field is only valid if the
	// task has got a permit.
	TargetType *int32 `json:"targetType,omitempty"`

	// The type of environment this restore info pertains to.
	Type *int32 `json:"type,omitempty"`
}

// Validate validates this restore info proto
func (m *RestoreInfoProto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePostScriptStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreScriptStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestoreEntityVec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreInfoProto) validatePostScriptStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.PostScriptStatus) { // not required
		return nil
	}

	if m.PostScriptStatus != nil {
		if err := m.PostScriptStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postScriptStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postScriptStatus")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreInfoProto) validatePreScriptStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.PreScriptStatus) { // not required
		return nil
	}

	if m.PreScriptStatus != nil {
		if err := m.PreScriptStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preScriptStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preScriptStatus")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreInfoProto) validateRestoreEntityVec(formats strfmt.Registry) error {
	if swag.IsZero(m.RestoreEntityVec) { // not required
		return nil
	}

	for i := 0; i < len(m.RestoreEntityVec); i++ {
		if swag.IsZero(m.RestoreEntityVec[i]) { // not required
			continue
		}

		if m.RestoreEntityVec[i] != nil {
			if err := m.RestoreEntityVec[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restoreEntityVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("restoreEntityVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this restore info proto based on the context it is used
func (m *RestoreInfoProto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePostScriptStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePreScriptStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRestoreEntityVec(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestoreInfoProto) contextValidatePostScriptStatus(ctx context.Context, formats strfmt.Registry) error {

	if m.PostScriptStatus != nil {

		if swag.IsZero(m.PostScriptStatus) { // not required
			return nil
		}

		if err := m.PostScriptStatus.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postScriptStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postScriptStatus")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreInfoProto) contextValidatePreScriptStatus(ctx context.Context, formats strfmt.Registry) error {

	if m.PreScriptStatus != nil {

		if swag.IsZero(m.PreScriptStatus) { // not required
			return nil
		}

		if err := m.PreScriptStatus.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preScriptStatus")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preScriptStatus")
			}
			return err
		}
	}

	return nil
}

func (m *RestoreInfoProto) contextValidateRestoreEntityVec(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RestoreEntityVec); i++ {

		if m.RestoreEntityVec[i] != nil {

			if swag.IsZero(m.RestoreEntityVec[i]) { // not required
				return nil
			}

			if err := m.RestoreEntityVec[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restoreEntityVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("restoreEntityVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestoreInfoProto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestoreInfoProto) UnmarshalBinary(b []byte) error {
	var res RestoreInfoProto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
