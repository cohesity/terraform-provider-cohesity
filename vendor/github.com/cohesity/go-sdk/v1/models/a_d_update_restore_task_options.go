// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ADUpdateRestoreTaskOptions AD specific options to update an AD restore task.
//
// swagger:model ADUpdateRestoreTaskOptions
type ADUpdateRestoreTaskOptions struct {

	// Object attributes restore params with the list of attributes to be
	// restored. This is set only when type is kObjectAttributes.
	ObjectAttributesParam *ADAttributeRestoreParam `json:"objectAttributesParam,omitempty"`

	// Object restore params with info about objects to be restored. This is
	// set only when type is kObjects.
	ObjectParam *ADObjectRestoreParam `json:"objectParam,omitempty"`

	// Specifies the AD restore request type.
	Type *int32 `json:"type,omitempty"`
}

// Validate validates this a d update restore task options
func (m *ADUpdateRestoreTaskOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObjectAttributesParam(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectParam(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ADUpdateRestoreTaskOptions) validateObjectAttributesParam(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectAttributesParam) { // not required
		return nil
	}

	if m.ObjectAttributesParam != nil {
		if err := m.ObjectAttributesParam.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("objectAttributesParam")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("objectAttributesParam")
			}
			return err
		}
	}

	return nil
}

func (m *ADUpdateRestoreTaskOptions) validateObjectParam(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectParam) { // not required
		return nil
	}

	if m.ObjectParam != nil {
		if err := m.ObjectParam.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("objectParam")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("objectParam")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this a d update restore task options based on the context it is used
func (m *ADUpdateRestoreTaskOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObjectAttributesParam(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateObjectParam(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ADUpdateRestoreTaskOptions) contextValidateObjectAttributesParam(ctx context.Context, formats strfmt.Registry) error {

	if m.ObjectAttributesParam != nil {

		if swag.IsZero(m.ObjectAttributesParam) { // not required
			return nil
		}

		if err := m.ObjectAttributesParam.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("objectAttributesParam")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("objectAttributesParam")
			}
			return err
		}
	}

	return nil
}

func (m *ADUpdateRestoreTaskOptions) contextValidateObjectParam(ctx context.Context, formats strfmt.Registry) error {

	if m.ObjectParam != nil {

		if swag.IsZero(m.ObjectParam) { // not required
			return nil
		}

		if err := m.ObjectParam.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("objectParam")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("objectParam")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ADUpdateRestoreTaskOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ADUpdateRestoreTaskOptions) UnmarshalBinary(b []byte) error {
	var res ADUpdateRestoreTaskOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
