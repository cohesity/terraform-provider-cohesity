// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UdaThrottlingParams Capture max resource limits to throttle UDA jobs.
//
// swagger:model UdaThrottlingParams
type UdaThrottlingParams struct {

	// Max source specific resource to use for any job on source.
	// Total resource usage should not exceed this for all jobs on source.
	MaxAnyjobResources *int32 `json:"maxAnyjobResources,omitempty"`

	// Max source specific resource to use for backup on source.
	MaxBackupResources *int32 `json:"maxBackupResources,omitempty"`

	// Max source specific resource to use for log backup on source.
	MaxLogBackupResources *int32 `json:"maxLogBackupResources,omitempty"`

	// Max source specific resource to use for restore on source.
	MaxRestoreResources *int32 `json:"maxRestoreResources,omitempty"`
}

// Validate validates this uda throttling params
func (m *UdaThrottlingParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this uda throttling params based on context it is used
func (m *UdaThrottlingParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UdaThrottlingParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UdaThrottlingParams) UnmarshalBinary(b []byte) error {
	var res UdaThrottlingParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
