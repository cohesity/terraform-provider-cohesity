// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UploadMRJarViewPathWrapper Upload JAR Request.
//
// UploadMRJarViewPathWrapper contains jar name and local mount path where the
// Jars will be uploaded.
//
// swagger:model UploadMRJarViewPathWrapper
type UploadMRJarViewPathWrapper struct {

	// JarName is the name of the uploaded jar.
	JarName *string `json:"jarName,omitempty"`

	// JarPath is the path for the directory where uploaded jar is stored.
	JarPath *string `json:"jarPath,omitempty"`
}

// Validate validates this upload m r jar view path wrapper
func (m *UploadMRJarViewPathWrapper) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this upload m r jar view path wrapper based on context it is used
func (m *UploadMRJarViewPathWrapper) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UploadMRJarViewPathWrapper) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UploadMRJarViewPathWrapper) UnmarshalBinary(b []byte) error {
	var res UploadMRJarViewPathWrapper
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
