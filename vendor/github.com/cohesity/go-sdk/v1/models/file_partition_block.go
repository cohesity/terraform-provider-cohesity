// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FilePartitionBlock File Partition Block.
//
// Defines a leaf node of a device tree. This refers to a logical
// partition in a virtual disk file.
//
// swagger:model FilePartitionBlock
type FilePartitionBlock struct {

	// Specifies the disk file name where the logical partition is.
	DiskFileName *string `json:"diskFileName,omitempty"`

	// Specifies the length of the block in bytes.
	LengthBytes *int64 `json:"lengthBytes,omitempty"`

	// Specifies a unique number of the partition within the linear disk file.
	Number *int64 `json:"number,omitempty"`

	// Specifies the offset of the block (in bytes) from the beginning
	// of the containing object such as a physical disk or a
	// virtual disk file.
	OffsetBytes *int64 `json:"offsetBytes,omitempty"`
}

// Validate validates this file partition block
func (m *FilePartitionBlock) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this file partition block based on context it is used
func (m *FilePartitionBlock) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FilePartitionBlock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FilePartitionBlock) UnmarshalBinary(b []byte) error {
	var res FilePartitionBlock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
