// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VerifyOtpCodeParams Parameters to verify OTP code.
//
// Specifies the parameters to verify OTP code.
//
// swagger:model VerifyOtpCodeParams
type VerifyOtpCodeParams struct {

	// Specifies the OTP code.
	// Required: true
	OtpCode *string `json:"otpCode"`

	// Specifies OTP type.
	// 'Totp' implies the code is TOTP.
	// 'Email' implies the code is email OTP.
	// Enum: ["Totp","Email"]
	OtpType *string `json:"otpType,omitempty"`
}

// Validate validates this verify otp code params
func (m *VerifyOtpCodeParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOtpCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOtpType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VerifyOtpCodeParams) validateOtpCode(formats strfmt.Registry) error {

	if err := validate.Required("otpCode", "body", m.OtpCode); err != nil {
		return err
	}

	return nil
}

var verifyOtpCodeParamsTypeOtpTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Totp","Email"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		verifyOtpCodeParamsTypeOtpTypePropEnum = append(verifyOtpCodeParamsTypeOtpTypePropEnum, v)
	}
}

const (

	// VerifyOtpCodeParamsOtpTypeTotp captures enum value "Totp"
	VerifyOtpCodeParamsOtpTypeTotp string = "Totp"

	// VerifyOtpCodeParamsOtpTypeEmail captures enum value "Email"
	VerifyOtpCodeParamsOtpTypeEmail string = "Email"
)

// prop value enum
func (m *VerifyOtpCodeParams) validateOtpTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, verifyOtpCodeParamsTypeOtpTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VerifyOtpCodeParams) validateOtpType(formats strfmt.Registry) error {
	if swag.IsZero(m.OtpType) { // not required
		return nil
	}

	// value enum
	if err := m.validateOtpTypeEnum("otpType", "body", *m.OtpType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this verify otp code params based on context it is used
func (m *VerifyOtpCodeParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VerifyOtpCodeParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VerifyOtpCodeParams) UnmarshalBinary(b []byte) error {
	var res VerifyOtpCodeParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
