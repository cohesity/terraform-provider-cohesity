// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VolumeInfoDiskInfoPartitionInfo Information about each Partition.
//
// Offset/Length here is relative to the logical range starting at 0,
// formed by mapping the physical ranges of the disk into a linear device.
//
// swagger:model VolumeInfo_DiskInfo_PartitionInfo
type VolumeInfoDiskInfoPartitionInfo struct {

	// Length of partition in bytes.
	Length *int64 `json:"length,omitempty"`

	// Partition number.
	PartitionNumber *int64 `json:"partitionNumber,omitempty"`

	// Partition type uuid.
	// If disk is unpartitioned, this field will not be set.
	// If disk is MBR partitioned, this field will be set to partition type.
	// Example: 83 (from below fdisk output) [This value is in hex]
	// bash$ fdisk -l foobar.vmdk
	// Device        Boot Start   End    Sectors  Size Id Type
	// foobar.vmdk1       2048  1050623  1048576  512M 83 Linux
	// If disk is GPT partitioned, this field will be set to partition type
	// GUID.
	// Example: fc63daf-8483-4772-8e793d69d8477de4 (Linux filesystem data)
	PartitionTypeUUID *string `json:"partitionTypeUuid,omitempty"`

	// Partition uuid.
	// If disk is unpartitioned, this field will not be set.
	// If disk is MBR partitioned, this field will not be set.
	// If disk is GPT partitioned, this field will be set to partition GUID.
	PartitionUUID *string `json:"partitionUuid,omitempty"`

	// Start offset of partition in bytes.
	StartOffset *int64 `json:"startOffset,omitempty"`
}

// Validate validates this volume info disk info partition info
func (m *VolumeInfoDiskInfoPartitionInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this volume info disk info partition info based on context it is used
func (m *VolumeInfoDiskInfoPartitionInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VolumeInfoDiskInfoPartitionInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VolumeInfoDiskInfoPartitionInfo) UnmarshalBinary(b []byte) error {
	var res VolumeInfoDiskInfoPartitionInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
