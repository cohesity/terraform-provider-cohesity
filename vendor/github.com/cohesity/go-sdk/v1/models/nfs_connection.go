// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NfsConnection nfs connection
//
// swagger:model NfsConnection
type NfsConnection struct {

	// Specifies the Client IP address of the connection.
	ClientIP *string `json:"clientIp,omitempty"`

	// Specifies a Node IP address where the connection request is received.
	NodeIP *string `json:"nodeIp,omitempty"`

	// Specifies the Server IP address of the connection.
	// This could be a VIP, VLAN IP, or node IP on the Cluster.
	ServerIP *string `json:"serverIp,omitempty"`

	// Specifies the id of the view.
	ViewID *int64 `json:"viewId,omitempty"`

	// Specifies the name of the view.
	ViewName *string `json:"viewName,omitempty"`
}

// Validate validates this nfs connection
func (m *NfsConnection) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this nfs connection based on context it is used
func (m *NfsConnection) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NfsConnection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NfsConnection) UnmarshalBinary(b []byte) error {
	var res NfsConnection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
