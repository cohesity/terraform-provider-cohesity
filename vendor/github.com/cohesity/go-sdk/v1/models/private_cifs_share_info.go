// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PrivateCifsShareInfo Proto that contains information about a CIFS share of a Netapp volume.
//
// swagger:model PrivateCifsShareInfo
type PrivateCifsShareInfo struct {

	// The ACL strings for this share.
	ACLStringVec []string `json:"aclStringVec"`

	// The CIFS server's name given by the system administrator. It is searchable
	// within the active directory domain. For example, "NETAPP-01".
	CifsServerName *string `json:"cifsServerName,omitempty"`

	// Name of this share. This could be different from the name of the volume
	// that this share belongs to. One volume can export multiple CIFS shares,
	// each of which can have different settings like permission and other
	// options. For more information, please refer to: https://goo.gl/U7Jn8m.
	Name *string `json:"name,omitempty"`

	// Path of this share under the vserver's root.
	Path *string `json:"path,omitempty"`
}

// Validate validates this private cifs share info
func (m *PrivateCifsShareInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this private cifs share info based on context it is used
func (m *PrivateCifsShareInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PrivateCifsShareInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrivateCifsShareInfo) UnmarshalBinary(b []byte) error {
	var res PrivateCifsShareInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
