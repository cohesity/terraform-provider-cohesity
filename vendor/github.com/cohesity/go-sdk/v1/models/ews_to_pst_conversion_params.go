// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EwsToPstConversionParams ews to pst conversion params
//
// swagger:model EwsToPstConversionParams
type EwsToPstConversionParams struct {

	// Create Msg files or Pst.
	// false value indicates only create msg files.
	// Default value is true.
	CreatePst *bool `json:"createPst,omitempty"`

	// Encrypted version of the pst_password above. The plain password should be
	// cleared and the encrypted form should be persisted in the restore task
	// state proto.
	EncryptedPstPassword *string `json:"encryptedPstPassword,omitempty"`

	// ConvertEwsToPst flags of type ConvertEwsToPSTOptionFlags.
	OptionFlags *uint32 `json:"optionFlags,omitempty"`

	// Name prefix for generated PST files.
	PstNamePrefix *string `json:"pstNamePrefix,omitempty"`

	// Optional password to be set for the output PSTs.
	PstPassword *string `json:"pstPassword,omitempty"`

	// PST rotation size in bytes.
	PstSizeThreshold *int64 `json:"pstSizeThreshold,omitempty"`
}

// Validate validates this ews to pst conversion params
func (m *EwsToPstConversionParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ews to pst conversion params based on context it is used
func (m *EwsToPstConversionParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EwsToPstConversionParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EwsToPstConversionParams) UnmarshalBinary(b []byte) error {
	var res EwsToPstConversionParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
