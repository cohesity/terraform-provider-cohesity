// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MfaInfo MfaInfo.
//
// Specifies information about MFA.
//
// swagger:model MfaInfo
type MfaInfo struct {

	// Specifies if email OTP setup is done on the user.
	// Read Only: true
	IsEmailOtpSetupDone *bool `json:"isEmailOtpSetupDone,omitempty"`

	// Specifies if TOTP setup is done on the user.
	// Read Only: true
	IsTotpSetupDone *bool `json:"isTotpSetupDone,omitempty"`

	// Specifies if MFA is disabled on the user.
	IsUserExemptFromMfa *bool `json:"isUserExemptFromMfa,omitempty"`
}

// Validate validates this mfa info
func (m *MfaInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this mfa info based on the context it is used
func (m *MfaInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateIsEmailOtpSetupDone(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateIsTotpSetupDone(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MfaInfo) contextValidateIsEmailOtpSetupDone(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "isEmailOtpSetupDone", "body", m.IsEmailOtpSetupDone); err != nil {
		return err
	}

	return nil
}

func (m *MfaInfo) contextValidateIsTotpSetupDone(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "isTotpSetupDone", "body", m.IsTotpSetupDone); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MfaInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MfaInfo) UnmarshalBinary(b []byte) error {
	var res MfaInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
