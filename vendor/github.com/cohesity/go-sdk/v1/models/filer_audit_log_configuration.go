// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FilerAuditLogConfiguration Filer Audit Log Configuration.
//
// Specifies the settings of the filer audit log configuration.
//
// swagger:model FilerAuditLogConfiguration
type FilerAuditLogConfiguration struct {

	// Specifies if filer audit logging is enabled on the Cohesity Cluster.
	// If 'true', filer audit logging is enabled. Otherwise, it is disabled.
	// Required: true
	Enabled *bool `json:"enabled"`

	// Specifies the number of days to keep (retain) the filer audit logs.
	// Audit logs generated before the period of time specified by
	// retentionPeriodDays are removed from the Cohesity Cluster.
	// Required: true
	RetentionPeriodDays *int32 `json:"retentionPeriodDays"`
}

// Validate validates this filer audit log configuration
func (m *FilerAuditLogConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRetentionPeriodDays(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FilerAuditLogConfiguration) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *FilerAuditLogConfiguration) validateRetentionPeriodDays(formats strfmt.Registry) error {

	if err := validate.Required("retentionPeriodDays", "body", m.RetentionPeriodDays); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this filer audit log configuration based on context it is used
func (m *FilerAuditLogConfiguration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FilerAuditLogConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FilerAuditLogConfiguration) UnmarshalBinary(b []byte) error {
	var res FilerAuditLogConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
