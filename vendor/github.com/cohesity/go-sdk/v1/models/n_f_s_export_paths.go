// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NFSExportPaths NFSExportPaths is the struct containing NFS export paths for this cluster.
//
// swagger:model NFSExportPaths
type NFSExportPaths struct {

	// NFSExportPaths is the list of mount paths that bridge should list as
	// exported filesystems. Typically bridge returns the view box names in the
	// exports list. But some NFS clients (like windows NFS client) require that
	// full path of the mount point to be present in the exports list.
	// Each path in this list is of the form "/view-box-name/view-name/fs" where
	// 'view-box-name' should be a valid external view box name and 'view-name'
	// should be a view in 'view-box-name'. When a view box and/or a view is
	// deleted, the corresponding mount paths should be automatically removed
	// from this list (which will be done by apollo).
	NfsExportPaths []string `json:"nfsExportPaths"`
}

// Validate validates this n f s export paths
func (m *NFSExportPaths) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this n f s export paths based on context it is used
func (m *NFSExportPaths) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NFSExportPaths) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NFSExportPaths) UnmarshalBinary(b []byte) error {
	var res NFSExportPaths
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
