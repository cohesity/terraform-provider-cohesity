// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArchivalExternalTarget Archival Target.
//
// Specifies settings about the Archival External Target (such as Tape or AWS).
//
// swagger:model ArchivalExternalTarget
type ArchivalExternalTarget struct {

	// Specifies the id of Archival Vault assigned by the Cohesity Cluster.
	VaultID *int64 `json:"vaultId,omitempty"`

	// Name of the Archival Vault.
	VaultName *string `json:"vaultName,omitempty"`

	// Specifies the type of the Archival External Target such as 'kCloud',
	// 'kTape' or 'kNas'.
	// 'kCloud' indicates the archival location as Cloud.
	// 'kTape' indicates the archival location as Tape.
	// 'kNas' indicates the archival location as Network Attached Storage (Nas).
	// Enum: ["kCloud","kTape","kNas"]
	VaultType *string `json:"vaultType,omitempty"`
}

// Validate validates this archival external target
func (m *ArchivalExternalTarget) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVaultType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var archivalExternalTargetTypeVaultTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kCloud","kTape","kNas"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		archivalExternalTargetTypeVaultTypePropEnum = append(archivalExternalTargetTypeVaultTypePropEnum, v)
	}
}

const (

	// ArchivalExternalTargetVaultTypeKCloud captures enum value "kCloud"
	ArchivalExternalTargetVaultTypeKCloud string = "kCloud"

	// ArchivalExternalTargetVaultTypeKTape captures enum value "kTape"
	ArchivalExternalTargetVaultTypeKTape string = "kTape"

	// ArchivalExternalTargetVaultTypeKNas captures enum value "kNas"
	ArchivalExternalTargetVaultTypeKNas string = "kNas"
)

// prop value enum
func (m *ArchivalExternalTarget) validateVaultTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, archivalExternalTargetTypeVaultTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ArchivalExternalTarget) validateVaultType(formats strfmt.Registry) error {
	if swag.IsZero(m.VaultType) { // not required
		return nil
	}

	// value enum
	if err := m.validateVaultTypeEnum("vaultType", "body", *m.VaultType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this archival external target based on context it is used
func (m *ArchivalExternalTarget) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ArchivalExternalTarget) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArchivalExternalTarget) UnmarshalBinary(b []byte) error {
	var res ArchivalExternalTarget
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
