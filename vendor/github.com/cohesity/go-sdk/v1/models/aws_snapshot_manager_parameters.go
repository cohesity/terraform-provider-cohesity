// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AwsSnapshotManagerParameters AWS SnapshotManager Parameters.
//
// Protection Job parameters applicable to 'kAWSSnapshotManager' Environment
// type.
// Specifies additional job parameters applicable for 'kAWSSnapshotManager'
// Environment type Protection Sources in a Protection Job.
//
// swagger:model AwsSnapshotManagerParameters
type AwsSnapshotManagerParameters struct {

	// Specifies the frequency of AMI creation. This should be set if the option
	// to create AMI is set. A value of n creates an AMI from the snapshots after
	// every n runs. eg. n = 2 implies every alternate backup run starting from
	// the first will create an AMI.
	AmiCreationFrequency *int32 `json:"amiCreationFrequency,omitempty"`

	// If true, creates an AMI after taking snapshots of the instance. It should
	// be set only while backing up EC2 instances.
	// CreateAmi creates AMI for the protection job.
	CreateAmi *bool `json:"createAmi,omitempty"`
}

// Validate validates this aws snapshot manager parameters
func (m *AwsSnapshotManagerParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws snapshot manager parameters based on context it is used
func (m *AwsSnapshotManagerParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AwsSnapshotManagerParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsSnapshotManagerParameters) UnmarshalBinary(b []byte) error {
	var res AwsSnapshotManagerParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
