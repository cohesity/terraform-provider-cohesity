// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ErasureCodingInfo Erasure Coding Information.
//
// Specifies information for erasure coding.
//
// swagger:model ErasureCodingInfo
type ErasureCodingInfo struct {

	// Specifies whether Erasure coding is enabled on the Storage Domain
	// (View Box).
	ErasureCodingEnabled *bool `json:"erasureCodingEnabled,omitempty"`

	// Specifies if erasure coding should occur inline (as the data is being
	// written). This field is only relevant if erasure coding is enabled.
	InlineErasureCoding *bool `json:"inlineErasureCoding,omitempty"`

	// The number of coded stripes.
	NumCodedStripes *int32 `json:"numCodedStripes,omitempty"`

	// The number of stripes containing data.
	NumDataStripes *int32 `json:"numDataStripes,omitempty"`
}

// Validate validates this erasure coding info
func (m *ErasureCodingInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this erasure coding info based on context it is used
func (m *ErasureCodingInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ErasureCodingInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErasureCodingInfo) UnmarshalBinary(b []byte) error {
	var res ErasureCodingInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
