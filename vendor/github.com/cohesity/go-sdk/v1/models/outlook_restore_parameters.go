// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OutlookRestoreParameters Outlook Restore Parameters.
//
// Specifies information needed for recovering Mailboxes in O365Outlook
// environment.
//
// swagger:model OutlookRestoreParameters
type OutlookRestoreParameters struct {

	// Specifies the list of mailboxes to be restored.
	OutlookMailboxList []*OutlookMailbox `json:"outlookMailboxList"`

	// Specifies the PST conversion specific parameters. This should always be
	// specified when need to convert selected items to PST.
	PstParams *PstParameters `json:"pstParams,omitempty"`

	// Specifies the target folder path to restore the mailboxes. This will
	// always be specified whether the target mailbox is the original or an
	// alternate one.
	TargetFolderPath *string `json:"targetFolderPath,omitempty"`

	// Specifies the destination mailbox where the mailboxes specified within
	// OutlookMailboxes will be restored with their appropriate names.
	TargetMailbox *ProtectionSource `json:"targetMailbox,omitempty"`
}

// Validate validates this outlook restore parameters
func (m *OutlookRestoreParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOutlookMailboxList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePstParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetMailbox(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OutlookRestoreParameters) validateOutlookMailboxList(formats strfmt.Registry) error {
	if swag.IsZero(m.OutlookMailboxList) { // not required
		return nil
	}

	for i := 0; i < len(m.OutlookMailboxList); i++ {
		if swag.IsZero(m.OutlookMailboxList[i]) { // not required
			continue
		}

		if m.OutlookMailboxList[i] != nil {
			if err := m.OutlookMailboxList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("outlookMailboxList" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("outlookMailboxList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OutlookRestoreParameters) validatePstParams(formats strfmt.Registry) error {
	if swag.IsZero(m.PstParams) { // not required
		return nil
	}

	if m.PstParams != nil {
		if err := m.PstParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pstParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pstParams")
			}
			return err
		}
	}

	return nil
}

func (m *OutlookRestoreParameters) validateTargetMailbox(formats strfmt.Registry) error {
	if swag.IsZero(m.TargetMailbox) { // not required
		return nil
	}

	if m.TargetMailbox != nil {
		if err := m.TargetMailbox.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetMailbox")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetMailbox")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this outlook restore parameters based on the context it is used
func (m *OutlookRestoreParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOutlookMailboxList(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePstParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTargetMailbox(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OutlookRestoreParameters) contextValidateOutlookMailboxList(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.OutlookMailboxList); i++ {

		if m.OutlookMailboxList[i] != nil {

			if swag.IsZero(m.OutlookMailboxList[i]) { // not required
				return nil
			}

			if err := m.OutlookMailboxList[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("outlookMailboxList" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("outlookMailboxList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OutlookRestoreParameters) contextValidatePstParams(ctx context.Context, formats strfmt.Registry) error {

	if m.PstParams != nil {

		if swag.IsZero(m.PstParams) { // not required
			return nil
		}

		if err := m.PstParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pstParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pstParams")
			}
			return err
		}
	}

	return nil
}

func (m *OutlookRestoreParameters) contextValidateTargetMailbox(ctx context.Context, formats strfmt.Registry) error {

	if m.TargetMailbox != nil {

		if swag.IsZero(m.TargetMailbox) { // not required
			return nil
		}

		if err := m.TargetMailbox.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("targetMailbox")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("targetMailbox")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OutlookRestoreParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OutlookRestoreParameters) UnmarshalBinary(b []byte) error {
	var res OutlookRestoreParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
