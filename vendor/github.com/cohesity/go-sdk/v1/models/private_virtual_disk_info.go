// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PrivateVirtualDiskInfo Message representing a Virtual Disk within a VM, containing
// basic info about it and its corresponding controller.
//
// swagger:model PrivateVirtualDiskInfo
type PrivateVirtualDiskInfo struct {

	// Controller's bus-id controlling the virtual disk in question.
	ControllerBusNumber *int64 `json:"controllerBusNumber,omitempty"`

	// Controller's type (SCSI, IDE etc).
	ControllerType *string `json:"controllerType,omitempty"`

	// Backing file name for the virtual disk.
	FileName *string `json:"fileName,omitempty"`

	// Size of the disk.
	LogicalSizeBytes *int64 `json:"logicalSizeBytes,omitempty"`

	// Disk unit number to identify the virtual disk within a controller.
	UnitNumber *int64 `json:"unitNumber,omitempty"`

	// UUID of the disk.
	UUID *string `json:"uuid,omitempty"`
}

// Validate validates this private virtual disk info
func (m *PrivateVirtualDiskInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this private virtual disk info based on context it is used
func (m *PrivateVirtualDiskInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PrivateVirtualDiskInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrivateVirtualDiskInfo) UnmarshalBinary(b []byte) error {
	var res PrivateVirtualDiskInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
