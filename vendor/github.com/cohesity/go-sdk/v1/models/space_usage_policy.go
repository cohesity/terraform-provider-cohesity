// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SpaceUsagePolicy Message that specifies the space usage policy for a particular registered
// entity.
// This proto has limitation to extended it for new values in future.
// Adding a Enum and setting the values based on the Enum will give better
// and cleaner proto. Enum not introduced as it has complexity for upgrade
// scenarios. If in future new parameter is needed in this proto add Enum
// and handle the upgrade scenarios.
//
// swagger:model SpaceUsagePolicy
type SpaceUsagePolicy struct {

	// Specifies the min free space (in GB) expected to be available in the
	// datastore where the virtual disks of the VM being backed up reside. If the
	// space available is lower than the value defined in it, backup will be
	// aborted.
	// Note: Currently, this is applicable to VMware type of environments only.
	MinFreeDatastoreSpaceForBackupGb *int64 `json:"minFreeDatastoreSpaceForBackupGb,omitempty"`

	// Specifies the min free space (percentage) expected to be available in the
	// datastore where the virtual disks of the VM being backed up reside. If the
	// space available is lower than the value defined in it, backup will be
	// aborted.
	// Note: Currently, this is applicable to VMware type of environments only.
	MinFreeDatastoreSpaceForBackupPercentage *int64 `json:"minFreeDatastoreSpaceForBackupPercentage,omitempty"`
}

// Validate validates this space usage policy
func (m *SpaceUsagePolicy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this space usage policy based on context it is used
func (m *SpaceUsagePolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SpaceUsagePolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SpaceUsagePolicy) UnmarshalBinary(b []byte) error {
	var res SpaceUsagePolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
