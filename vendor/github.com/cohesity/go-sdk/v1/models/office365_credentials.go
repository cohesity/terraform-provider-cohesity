// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Office365Credentials Office365 Credentials.
//
// Specifies the credentials to authenticate with Office365 account.
//
// swagger:model Office365Credentials
type Office365Credentials struct {

	// Specifies the application ID that the registration portal
	// (apps.dev.microsoft.com) assigned.
	ClientID *string `json:"clientId,omitempty"`

	// Specifies the application secret that was created in app registration
	// portal.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Specifies the application grant type. eg: For client credentials flow, set
	// this to "client_credentials"; For refreshing access-token, set this to
	// "refresh_token".
	GrantType *string `json:"grantType,omitempty"`

	// Specifies a space separated list of scopes/permissions for the user.
	// eg: Incase of MS Graph APIs for Office365, scope is set to default:
	// https://graph.microsoft.com/.default
	Scope *string `json:"scope,omitempty"`

	// This field is deprecated from here and placed in RegisteredSourceInfo
	// and ProtectionSourceParameters.
	// deprecated: true
	UseOAuthForExchangeOnline *bool `json:"useOAuthForExchangeOnline,omitempty"`
}

// Validate validates this office365 credentials
func (m *Office365Credentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this office365 credentials based on context it is used
func (m *Office365Credentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Office365Credentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Office365Credentials) UnmarshalBinary(b []byte) error {
	var res Office365Credentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
