// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LinuxCommandExecuteNodeResp linux command execute node resp
//
// swagger:model LinuxCommandExecuteNodeResp
type LinuxCommandExecuteNodeResp struct {

	// failed reason
	FailedReason *string `json:"failedReason,omitempty"`

	// node Id
	NodeID *int64 `json:"nodeId,omitempty"`

	// node Ip
	NodeIP *string `json:"nodeIp,omitempty"`

	// output
	Output *string `json:"output,omitempty"`

	// success
	Success *bool `json:"success,omitempty"`
}

// Validate validates this linux command execute node resp
func (m *LinuxCommandExecuteNodeResp) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this linux command execute node resp based on context it is used
func (m *LinuxCommandExecuteNodeResp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LinuxCommandExecuteNodeResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinuxCommandExecuteNodeResp) UnmarshalBinary(b []byte) error {
	var res LinuxCommandExecuteNodeResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
