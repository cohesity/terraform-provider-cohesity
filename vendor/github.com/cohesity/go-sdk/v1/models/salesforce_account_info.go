// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SalesforceAccountInfo Salesforce Account Information.
//
// Salesforce Account Information of a Helios user.
//
// swagger:model SalesforceAccountInfo
type SalesforceAccountInfo struct {

	// Specifies the Account Id assigned by Salesforce.
	AccountID *string `json:"accountId,omitempty"`

	// Specifies the status of helios access.
	HeliosAccessGrantStatus *string `json:"heliosAccessGrantStatus,omitempty"`

	// Specifies whether user is a DGaaS licensed user.
	IsDGaaSUser *bool `json:"isDGaaSUser,omitempty"`

	// Specifies whether user is a DMaaS licensed user.
	IsDMaaSUser *bool `json:"isDMaaSUser,omitempty"`

	// Specifies whether user is a DRaaS licensed user.
	IsDRaaSUser *bool `json:"isDRaaSUser,omitempty"`

	// Specifies whether user is a Data Insights aka gaia licensed user.
	IsGaiaUser *bool `json:"isGaiaUser,omitempty"`

	// Specifies whether user is a RPaaS licensed user.
	IsRPaaSUser *bool `json:"isRPaaSUser,omitempty"`

	// Specifies whether user is a Sales person from Cohesity.
	IsSalesUser *bool `json:"isSalesUser,omitempty"`

	// Specifies whether user is a support person from Cohesity.
	IsSupportUser *bool `json:"isSupportUser,omitempty"`

	// Specifies the User Id assigned by Salesforce.
	UserID *string `json:"userId,omitempty"`
}

// Validate validates this salesforce account info
func (m *SalesforceAccountInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this salesforce account info based on context it is used
func (m *SalesforceAccountInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SalesforceAccountInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesforceAccountInfo) UnmarshalBinary(b []byte) error {
	var res SalesforceAccountInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
