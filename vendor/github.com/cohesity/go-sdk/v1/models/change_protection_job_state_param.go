// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ChangeProtectionJobStateParam Change Protection Job State Parameters.
//
// Specifies if the Run state of a Protection Job should change.
//
// swagger:model ChangeProtectionJobStateParam
type ChangeProtectionJobStateParam struct {

	// If true, the specified Protection Job is paused and no new Runs
	// of the Job are started. Any Runs that were executing continue to run.
	// If false and the Protection Job was in a paused state, the
	// Protection Job resumes and new Runs are started according to the
	// schedule defined in the associated Policy.
	Pause *bool `json:"pause,omitempty"`

	// Specifies the reason of pausing the job so that depending on the pause
	// reason, only specific jobs can be resumed. All the jobs paused manually by
	// the user will be identified by nil PauseReason.
	PauseReason *int32 `json:"pauseReason,omitempty"`
}

// Validate validates this change protection job state param
func (m *ChangeProtectionJobStateParam) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this change protection job state param based on context it is used
func (m *ChangeProtectionJobStateParam) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ChangeProtectionJobStateParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangeProtectionJobStateParam) UnmarshalBinary(b []byte) error {
	var res ChangeProtectionJobStateParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
