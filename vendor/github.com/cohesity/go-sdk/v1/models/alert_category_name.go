// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertCategoryName Alert Category Name
//
// AlertCategoryName returns alert category and its public facing string.
//
// swagger:model AlertCategoryName
type AlertCategoryName struct {

	// Specifies alert category.
	// Specifies the category of an Alert.
	// kDisk - Alert associated with the disk.
	// kNode - Alert associated with general hardware on a specific node.
	// kCluster - Alert associated with general hardware in cluster level.
	// kChassis - Alert associated with the Chassis.
	// kPowerSupply - Alert associated with the power supply.
	// kCPU - Alert associated with the CPU usage.
	// kMemory - Alert associated with the RAM/Memory.
	// kTemperature - Alert associated with the temperature.
	// kFan - Alert associated with the fan.
	// kNIC - Alert associated with network chips and interfaces.
	// kFirmware - Alert associated with the firmware.
	// kNodeHealth - Alert associated with node health status.
	// kOperatingSystem - Alert associated with operating systems.
	// kDataPath - Alert associated with data management in the cluster.
	// kMetadata - Alert associated with metadata management.
	// kIndexing - Alert associated with indexing services.
	// kHelios - Alert associated with Helios.
	// kAppMarketPlace - Alert associated with App MarketPlace.
	// kSystemService -Alert associated with System service apps.
	// kLicense - Alert associated with licensing.
	// kSecurity - Alert associated with security.
	// kUpgrade - Alert associated with upgrade activities.
	// kClusterManagement - Alert associated with cluster management activities.
	// kAuditLog - Alert associated with audit log events.
	// kNetworking - Alert associated with networking issue.
	// kConfiguration - Alert associated with cluster or system configurations.
	// kStorageUsage - Alert associated with the disk/domain/cluster storage usage.
	// kFaultTolerance - Alert associated with the fault tolerance in different levels.
	// kBackupRestore - Alert associated with Backup-Restore job.
	// kArchivalRestore - Alert associated with Archival-Restore job.
	// kRemoteReplication - Alert associated with Replication job.
	// kQuota - Alert associated with Quotas.
	// kCDP - Alert associated with Continuous Data Protection.
	// kViewFailover - Alert associated with view Failover.
	// kDisasterRecovery - Alert associated with Disaster Recovery.
	// kStorageDevice - Alert associated with storage hardware(tape drives & libraries, Fiber HBAs used to attach devices, etc).
	// kStoragePool - Alert associated with storage pools -- logical groupings of similar kinds of storage hardware (disk, tape, etc) into which client data is stored.
	// kGeneralSoftwareFailure - Alert associated with general software failures - that don't fall into any known categories.
	// kAgent - Alert associated with agent based protection workloads.
	// Enum: ["kDisk","kNode","kCluster","kChassis","kPowerSupply","kCPU","kMemory","kTemperature","kFan","kNIC","kFirmware","kNodeHealth","kOperatingSystem","kDataPath","kMetadata","kIndexing","kHelios","kAppMarketPlace","kSystemService","kLicense","kSecurity","kUpgrade","kClusterManagement","kAuditLog","kNetworking","kConfiguration","kStorageUsage","kFaultTolerance","kBackupRestore","kArchivalRestore","kRemoteReplication","kQuota","kCDP","kViewFailover","kDisasterRecovery","kStorageDevice","kStoragePool","kGeneralSoftwareFailure","kAgent"]
	Category *string `json:"category,omitempty"`

	// Specifies public facing string for alert enums.
	Name *string `json:"name,omitempty"`
}

// Validate validates this alert category name
func (m *AlertCategoryName) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertCategoryNameTypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kDisk","kNode","kCluster","kChassis","kPowerSupply","kCPU","kMemory","kTemperature","kFan","kNIC","kFirmware","kNodeHealth","kOperatingSystem","kDataPath","kMetadata","kIndexing","kHelios","kAppMarketPlace","kSystemService","kLicense","kSecurity","kUpgrade","kClusterManagement","kAuditLog","kNetworking","kConfiguration","kStorageUsage","kFaultTolerance","kBackupRestore","kArchivalRestore","kRemoteReplication","kQuota","kCDP","kViewFailover","kDisasterRecovery","kStorageDevice","kStoragePool","kGeneralSoftwareFailure","kAgent"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertCategoryNameTypeCategoryPropEnum = append(alertCategoryNameTypeCategoryPropEnum, v)
	}
}

const (

	// AlertCategoryNameCategoryKDisk captures enum value "kDisk"
	AlertCategoryNameCategoryKDisk string = "kDisk"

	// AlertCategoryNameCategoryKNode captures enum value "kNode"
	AlertCategoryNameCategoryKNode string = "kNode"

	// AlertCategoryNameCategoryKCluster captures enum value "kCluster"
	AlertCategoryNameCategoryKCluster string = "kCluster"

	// AlertCategoryNameCategoryKChassis captures enum value "kChassis"
	AlertCategoryNameCategoryKChassis string = "kChassis"

	// AlertCategoryNameCategoryKPowerSupply captures enum value "kPowerSupply"
	AlertCategoryNameCategoryKPowerSupply string = "kPowerSupply"

	// AlertCategoryNameCategoryKCPU captures enum value "kCPU"
	AlertCategoryNameCategoryKCPU string = "kCPU"

	// AlertCategoryNameCategoryKMemory captures enum value "kMemory"
	AlertCategoryNameCategoryKMemory string = "kMemory"

	// AlertCategoryNameCategoryKTemperature captures enum value "kTemperature"
	AlertCategoryNameCategoryKTemperature string = "kTemperature"

	// AlertCategoryNameCategoryKFan captures enum value "kFan"
	AlertCategoryNameCategoryKFan string = "kFan"

	// AlertCategoryNameCategoryKNIC captures enum value "kNIC"
	AlertCategoryNameCategoryKNIC string = "kNIC"

	// AlertCategoryNameCategoryKFirmware captures enum value "kFirmware"
	AlertCategoryNameCategoryKFirmware string = "kFirmware"

	// AlertCategoryNameCategoryKNodeHealth captures enum value "kNodeHealth"
	AlertCategoryNameCategoryKNodeHealth string = "kNodeHealth"

	// AlertCategoryNameCategoryKOperatingSystem captures enum value "kOperatingSystem"
	AlertCategoryNameCategoryKOperatingSystem string = "kOperatingSystem"

	// AlertCategoryNameCategoryKDataPath captures enum value "kDataPath"
	AlertCategoryNameCategoryKDataPath string = "kDataPath"

	// AlertCategoryNameCategoryKMetadata captures enum value "kMetadata"
	AlertCategoryNameCategoryKMetadata string = "kMetadata"

	// AlertCategoryNameCategoryKIndexing captures enum value "kIndexing"
	AlertCategoryNameCategoryKIndexing string = "kIndexing"

	// AlertCategoryNameCategoryKHelios captures enum value "kHelios"
	AlertCategoryNameCategoryKHelios string = "kHelios"

	// AlertCategoryNameCategoryKAppMarketPlace captures enum value "kAppMarketPlace"
	AlertCategoryNameCategoryKAppMarketPlace string = "kAppMarketPlace"

	// AlertCategoryNameCategoryKSystemService captures enum value "kSystemService"
	AlertCategoryNameCategoryKSystemService string = "kSystemService"

	// AlertCategoryNameCategoryKLicense captures enum value "kLicense"
	AlertCategoryNameCategoryKLicense string = "kLicense"

	// AlertCategoryNameCategoryKSecurity captures enum value "kSecurity"
	AlertCategoryNameCategoryKSecurity string = "kSecurity"

	// AlertCategoryNameCategoryKUpgrade captures enum value "kUpgrade"
	AlertCategoryNameCategoryKUpgrade string = "kUpgrade"

	// AlertCategoryNameCategoryKClusterManagement captures enum value "kClusterManagement"
	AlertCategoryNameCategoryKClusterManagement string = "kClusterManagement"

	// AlertCategoryNameCategoryKAuditLog captures enum value "kAuditLog"
	AlertCategoryNameCategoryKAuditLog string = "kAuditLog"

	// AlertCategoryNameCategoryKNetworking captures enum value "kNetworking"
	AlertCategoryNameCategoryKNetworking string = "kNetworking"

	// AlertCategoryNameCategoryKConfiguration captures enum value "kConfiguration"
	AlertCategoryNameCategoryKConfiguration string = "kConfiguration"

	// AlertCategoryNameCategoryKStorageUsage captures enum value "kStorageUsage"
	AlertCategoryNameCategoryKStorageUsage string = "kStorageUsage"

	// AlertCategoryNameCategoryKFaultTolerance captures enum value "kFaultTolerance"
	AlertCategoryNameCategoryKFaultTolerance string = "kFaultTolerance"

	// AlertCategoryNameCategoryKBackupRestore captures enum value "kBackupRestore"
	AlertCategoryNameCategoryKBackupRestore string = "kBackupRestore"

	// AlertCategoryNameCategoryKArchivalRestore captures enum value "kArchivalRestore"
	AlertCategoryNameCategoryKArchivalRestore string = "kArchivalRestore"

	// AlertCategoryNameCategoryKRemoteReplication captures enum value "kRemoteReplication"
	AlertCategoryNameCategoryKRemoteReplication string = "kRemoteReplication"

	// AlertCategoryNameCategoryKQuota captures enum value "kQuota"
	AlertCategoryNameCategoryKQuota string = "kQuota"

	// AlertCategoryNameCategoryKCDP captures enum value "kCDP"
	AlertCategoryNameCategoryKCDP string = "kCDP"

	// AlertCategoryNameCategoryKViewFailover captures enum value "kViewFailover"
	AlertCategoryNameCategoryKViewFailover string = "kViewFailover"

	// AlertCategoryNameCategoryKDisasterRecovery captures enum value "kDisasterRecovery"
	AlertCategoryNameCategoryKDisasterRecovery string = "kDisasterRecovery"

	// AlertCategoryNameCategoryKStorageDevice captures enum value "kStorageDevice"
	AlertCategoryNameCategoryKStorageDevice string = "kStorageDevice"

	// AlertCategoryNameCategoryKStoragePool captures enum value "kStoragePool"
	AlertCategoryNameCategoryKStoragePool string = "kStoragePool"

	// AlertCategoryNameCategoryKGeneralSoftwareFailure captures enum value "kGeneralSoftwareFailure"
	AlertCategoryNameCategoryKGeneralSoftwareFailure string = "kGeneralSoftwareFailure"

	// AlertCategoryNameCategoryKAgent captures enum value "kAgent"
	AlertCategoryNameCategoryKAgent string = "kAgent"
)

// prop value enum
func (m *AlertCategoryName) validateCategoryEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertCategoryNameTypeCategoryPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AlertCategoryName) validateCategory(formats strfmt.Registry) error {
	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", *m.Category); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this alert category name based on context it is used
func (m *AlertCategoryName) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AlertCategoryName) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertCategoryName) UnmarshalBinary(b []byte) error {
	var res AlertCategoryName
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
