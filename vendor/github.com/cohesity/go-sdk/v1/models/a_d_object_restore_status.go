// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ADObjectRestoreStatus AD object restore status for an object such as user, computer, group, etc.
//
// swagger:model ADObjectRestoreStatus
type ADObjectRestoreStatus struct {

	// Destination guid string of the AD object that is newly created on
	// production AD corresponding to 'source_guid'. If the object was restored
	// from production AD recycle Bin, this value can be empty or set to same
	// value as 'source_guid'. If this value is non-empty and is different from
	// source_guid, implying production AD object is a new object created
	// in production AD as part of restore.
	DestGUID *string `json:"destGuid,omitempty"`

	// Object result flags of type ADObjectFlags.
	ObjectFlags *uint32 `json:"objectFlags,omitempty"`

	// AD object attribute(property) restore status vector.
	PropertyStatusVec []*ADObjectRestoreStatusADAttributeRestoreStatus `json:"propertyStatusVec"`

	// Source guid of AD object that was restored. This
	// will not be empty. This is populated from the source of request argument.
	SourceGUID *string `json:"sourceGuid,omitempty"`

	// Error status at object level. Callers should inspect 'property_status_vec'
	// for individual attribute restore failures. The attribute restore failures
	// will not be rolled into this status.
	Status *ErrorProto `json:"status,omitempty"`

	// Time taken in milliseconds to restore the individual object or attribute
	// update. If this object restore was part of a batch, it shows the time
	// taken once the operation was dispatched to AD for the object. This time
	// can be useful in answering why some objects took long time to restore.
	// Note that this time is not the elapsed time when the request was made
	// from Magneto.
	TimetakenMs *uint64 `json:"timetakenMs,omitempty"`
}

// Validate validates this a d object restore status
func (m *ADObjectRestoreStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePropertyStatusVec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ADObjectRestoreStatus) validatePropertyStatusVec(formats strfmt.Registry) error {
	if swag.IsZero(m.PropertyStatusVec) { // not required
		return nil
	}

	for i := 0; i < len(m.PropertyStatusVec); i++ {
		if swag.IsZero(m.PropertyStatusVec[i]) { // not required
			continue
		}

		if m.PropertyStatusVec[i] != nil {
			if err := m.PropertyStatusVec[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("propertyStatusVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("propertyStatusVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ADObjectRestoreStatus) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if m.Status != nil {
		if err := m.Status.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("status")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this a d object restore status based on the context it is used
func (m *ADObjectRestoreStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePropertyStatusVec(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ADObjectRestoreStatus) contextValidatePropertyStatusVec(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.PropertyStatusVec); i++ {

		if m.PropertyStatusVec[i] != nil {

			if swag.IsZero(m.PropertyStatusVec[i]) { // not required
				return nil
			}

			if err := m.PropertyStatusVec[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("propertyStatusVec" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("propertyStatusVec" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ADObjectRestoreStatus) contextValidateStatus(ctx context.Context, formats strfmt.Registry) error {

	if m.Status != nil {

		if swag.IsZero(m.Status) { // not required
			return nil
		}

		if err := m.Status.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("status")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ADObjectRestoreStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ADObjectRestoreStatus) UnmarshalBinary(b []byte) error {
	var res ADObjectRestoreStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
