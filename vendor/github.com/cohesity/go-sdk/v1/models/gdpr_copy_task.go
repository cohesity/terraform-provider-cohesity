// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GdprCopyTask GDPR Copy Task.
//
// CopyTask defines the copy tasks of a job.
//
// swagger:model GdprCopyTask
type GdprCopyTask struct {

	// Specifies the job with which this copy task is tied to.
	// Note: this is only used for internal aggregation.
	JobID *int64 `json:"JobId,omitempty"`

	// Specifies the cloud deploy target type. For example 'kAzure','kAWS',
	// 'kGCP'
	CloudTargetType *string `json:"cloudTargetType,omitempty"`

	// Specifies the expiry of the copy task.
	ExpiryTimeUsecs *int64 `json:"expiryTimeUsecs,omitempty"`

	// Specifies the id for the target.
	TargetID *int64 `json:"targetId,omitempty"`

	// Specifies the target of the replication or archival tasks.
	TargetName *string `json:"targetName,omitempty"`

	// Specifies the total number of snapshots.
	TotalSnapshots *int64 `json:"totalSnapshots,omitempty"`

	// Specifies details about the Copy Run of a Job Run.
	// A Copy task copies snapshots resulted from a backup run to an external
	// target which could be 'kLocal', 'kArchival', or 'kRemote'.
	Type *string `json:"type,omitempty"`
}

// Validate validates this gdpr copy task
func (m *GdprCopyTask) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this gdpr copy task based on context it is used
func (m *GdprCopyTask) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GdprCopyTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GdprCopyTask) UnmarshalBinary(b []byte) error {
	var res GdprCopyTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
