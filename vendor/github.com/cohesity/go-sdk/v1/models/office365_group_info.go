// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Office365GroupInfo M365 Group Info.
//
// Specifies information about a M365 Group.
//
// swagger:model Office365GroupInfo
type Office365GroupInfo struct {

	// Specifies whether the Group is mail enabled. Mail enabled groups are used
	// within Microsoft to distribute messages.
	IsMailEnabled *bool `json:"isMailEnabled,omitempty"`

	// Specifies whether the Group is security enabled. Security enabled groups
	// are used to grant access permissions to resources in Exchange and Active
	// Directory.
	IsSecurityEnabled *bool `json:"isSecurityEnabled,omitempty"`

	// Specifies the count of members within the Group.
	MemberCount *int64 `json:"memberCount,omitempty"`

	// Specifies the visibility of the Group.
	Visibility *string `json:"visibility,omitempty"`
}

// Validate validates this office365 group info
func (m *Office365GroupInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this office365 group info based on context it is used
func (m *Office365GroupInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Office365GroupInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Office365GroupInfo) UnmarshalBinary(b []byte) error {
	var res Office365GroupInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
