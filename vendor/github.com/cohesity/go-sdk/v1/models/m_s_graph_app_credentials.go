// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MSGraphAppCredentials Message that encapsulates the credentials to authenticate with MS Graph API
// endpoint.
//
// swagger:model MSGraphAppCredentials
type MSGraphAppCredentials struct {

	// The application (client) ID that the registration portal
	// (apps.dev.microsoft.com) assigned your app.
	ClientID *string `json:"clientId,omitempty"`

	// The application secret that you created in the app registration portal for
	// your app.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Field to keep track if this app was auto created by Cohesity or not.
	CohesityCreated *bool `json:"cohesityCreated,omitempty"`

	// Display name (appname) corresponding to client_id. This is populated by
	// looking at JWT token returned after connection to handle cases where
	// customer has renamed the application name after creating client_id.
	DisplayName *string `json:"displayName,omitempty"`

	// AES256 encrypted application secret.
	EncryptedClientSecret []uint8 `json:"encryptedClientSecret"`

	// Must be client_credentials for the client credentials flow.
	GrantType *string `json:"grantType,omitempty"`

	// For a task/subtask if this field is set to true, then this client_id and
	// client_secret will be used to generate the token. If none of the
	// client_ids are selected, then a random one will be chosen to generate the
	// token.
	IsSelected *bool `json:"isSelected,omitempty"`

	// A space-separated list of scopes/permissions that you want the user to
	// consent to.
	Scope *string `json:"scope,omitempty"`

	// Mapping from scope to client/application ids.
	ScopeClientIDMap map[string]string `json:"scopeClientIdMap,omitempty"`

	// Mapping from scope to the oauth token for that scope.
	ScopeTokenMap map[string]string `json:"scopeTokenMap,omitempty"`

	// Whether OAuth should be used for authentication with EWS API, applicable
	// only for Exchange Online. This field is deprecated here and moved to
	// message AdditionalConnectorParams in magneto/base/magneto.proto.
	UseOutlookEwsOauth *bool `json:"useOutlookEwsOauth,omitempty"`
}

// Validate validates this m s graph app credentials
func (m *MSGraphAppCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this m s graph app credentials based on context it is used
func (m *MSGraphAppCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MSGraphAppCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MSGraphAppCredentials) UnmarshalBinary(b []byte) error {
	var res MSGraphAppCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
