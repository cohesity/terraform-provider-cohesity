// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureKmsCredentials AzureKmsCredentials specifies the credentials to access Microsoft Azure.
//
// swagger:model AzureKmsCredentials
type AzureKmsCredentials struct {

	// Specifies the client id assigned to the cluster.
	ClientID *string `json:"clientId,omitempty"`

	// Specifies the Secret access key needed to access the cloud account.
	ClientSecretKey *string `json:"clientSecretKey,omitempty"`

	// Specifies Authentication method to be used for API calls.
	// 'kAzureAuthNone' indicates no authentication.
	// 'kAzureClientSecret' indicates a client authentication.
	// 'kAzureManagedIdentity' indicates a Azure based authentication.
	// 'kUseHelios' indicates a Helios authentication.
	// Enum: ["kAzureAuthNone","kAzureClientSecret","kAzureManagedIdentity","kUseHelios"]
	MicrosoftAuthMethod *string `json:"microsoftAuthMethod,omitempty"`

	// Specifies the tenant id assigned to the cluster.
	TenantID *string `json:"tenantId,omitempty"`
}

// Validate validates this azure kms credentials
func (m *AzureKmsCredentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMicrosoftAuthMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureKmsCredentialsTypeMicrosoftAuthMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAzureAuthNone","kAzureClientSecret","kAzureManagedIdentity","kUseHelios"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureKmsCredentialsTypeMicrosoftAuthMethodPropEnum = append(azureKmsCredentialsTypeMicrosoftAuthMethodPropEnum, v)
	}
}

const (

	// AzureKmsCredentialsMicrosoftAuthMethodKAzureAuthNone captures enum value "kAzureAuthNone"
	AzureKmsCredentialsMicrosoftAuthMethodKAzureAuthNone string = "kAzureAuthNone"

	// AzureKmsCredentialsMicrosoftAuthMethodKAzureClientSecret captures enum value "kAzureClientSecret"
	AzureKmsCredentialsMicrosoftAuthMethodKAzureClientSecret string = "kAzureClientSecret"

	// AzureKmsCredentialsMicrosoftAuthMethodKAzureManagedIdentity captures enum value "kAzureManagedIdentity"
	AzureKmsCredentialsMicrosoftAuthMethodKAzureManagedIdentity string = "kAzureManagedIdentity"

	// AzureKmsCredentialsMicrosoftAuthMethodKUseHelios captures enum value "kUseHelios"
	AzureKmsCredentialsMicrosoftAuthMethodKUseHelios string = "kUseHelios"
)

// prop value enum
func (m *AzureKmsCredentials) validateMicrosoftAuthMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureKmsCredentialsTypeMicrosoftAuthMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureKmsCredentials) validateMicrosoftAuthMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.MicrosoftAuthMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateMicrosoftAuthMethodEnum("microsoftAuthMethod", "body", *m.MicrosoftAuthMethod); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure kms credentials based on context it is used
func (m *AzureKmsCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureKmsCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureKmsCredentials) UnmarshalBinary(b []byte) error {
	var res AzureKmsCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
