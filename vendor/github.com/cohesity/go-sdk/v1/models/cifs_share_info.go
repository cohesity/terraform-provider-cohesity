// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CifsShareInfo CIFS Share Information.
//
// Specifies information about a CIFS share of a NetApp volume.
//
// swagger:model CifsShareInfo
type CifsShareInfo struct {

	// Array of Access Control Lists.
	//
	// Specifies the ACLs for this share.
	Acls []string `json:"acls"`

	// Specifies the name of the CIFS share.
	// This can be different from the volume name that this share belongs to.
	// A single volume can export multiple CIFS shares,
	// each with unique settings such as permissions.
	Name *string `json:"name,omitempty"`

	// Specifies the path of this share under the Vserver's root.
	Path *string `json:"path,omitempty"`

	// Specifies the CIFS server name (such as 'NETAPP-01') specified by the
	// system administrator.
	// This name is searchable within the active directory domain.
	ServerName *string `json:"serverName,omitempty"`
}

// Validate validates this cifs share info
func (m *CifsShareInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cifs share info based on context it is used
func (m *CifsShareInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CifsShareInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CifsShareInfo) UnmarshalBinary(b []byte) error {
	var res CifsShareInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
