// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GCPAttributes Message representing a GCP tag/metadata/label that can be used as an
// attribute of a GCP entity.
//
// swagger:model GCPAttributes
type GCPAttributes struct {

	// Entity id corresponding to the tag entity.
	EntityID *int64 `json:"entityId,omitempty"`

	// Deprecated fields below.
	// In case of labels and metadata key-value pairs, this corresponds to the
	// key. In case of network tags, this contains the tag.
	KeyDEPRECATED *string `json:"key_DEPRECATED,omitempty"`

	// Display name of the tag.
	Name *string `json:"name,omitempty"`

	// The type of tag this entity refers to.
	Type *int32 `json:"type,omitempty"`

	// The instance UUID of the tag object.
	UUID *string `json:"uuid,omitempty"`

	// In case of labels and metadata key-value pairs, this corresponds to the
	// value.
	ValueDEPRECATED *string `json:"value_DEPRECATED,omitempty"`
}

// Validate validates this g c p attributes
func (m *GCPAttributes) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this g c p attributes based on context it is used
func (m *GCPAttributes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GCPAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GCPAttributes) UnmarshalBinary(b []byte) error {
	var res GCPAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
