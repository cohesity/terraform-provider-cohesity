// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// K8SFilterParamsLabelVec Represents a list of all Label entity IDs that need to be present to
// create a positive match for the candidate volume to include.
//
// swagger:model K8SFilterParams_LabelVec
type K8SFilterParamsLabelVec struct {

	// Represents a list of all Labels (string 'key:value') that need to be
	// present to create a positive match for the candidate volume to include.
	LabelStrVec []string `json:"labelStrVec"`

	// Represents a list of all Labels that need to be present to
	// create a positive match for the candidate volume to include.
	LabelVec []int64 `json:"labelVec"`
}

// Validate validates this k8 s filter params label vec
func (m *K8SFilterParamsLabelVec) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this k8 s filter params label vec based on context it is used
func (m *K8SFilterParamsLabelVec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *K8SFilterParamsLabelVec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *K8SFilterParamsLabelVec) UnmarshalBinary(b []byte) error {
	var res K8SFilterParamsLabelVec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
