// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ThrottlingPolicyLatencyThresholds Message that encapsulates the latency thresholds that trigger throttling.
//
// swagger:model ThrottlingPolicy_LatencyThresholds
type ThrottlingPolicyLatencyThresholds struct {

	// If the latency of a datastore is above this value, then an existing
	// backup task that uses the datastore will start getting throttled.
	ActiveTaskLatencyThresholdMsecs *int64 `json:"activeTaskLatencyThresholdMsecs,omitempty"`

	// If the latency of a datastore is above this value, then a new backup
	// task that uses the datastore won't be started.
	NewTaskLatencyThresholdMsecs *int64 `json:"newTaskLatencyThresholdMsecs,omitempty"`
}

// Validate validates this throttling policy latency thresholds
func (m *ThrottlingPolicyLatencyThresholds) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this throttling policy latency thresholds based on context it is used
func (m *ThrottlingPolicyLatencyThresholds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThrottlingPolicyLatencyThresholds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThrottlingPolicyLatencyThresholds) UnmarshalBinary(b []byte) error {
	var res ThrottlingPolicyLatencyThresholds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
