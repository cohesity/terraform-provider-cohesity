// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VaultStatsInfo Vault Stats.
//
// Specifies the stats for each vault.
//
// swagger:model VaultStatsInfo
type VaultStatsInfo struct {

	// Specifies the Vault Id.
	ID *int64 `json:"id,omitempty"`

	// Specifies the Vault name.
	Name *string `json:"name,omitempty"`

	// Specifies the Vault type.
	// Enum: ["kNearline","kGlacier","kS3","kAzureStandard","kS3Compatible","kQStarTape","kGoogleStandard","kGoogleDRA","kAmazonS3StandardIA","kAWSGovCloud","kNAS","kColdline","kAzureGovCloud","kAzureArchive","kAzure","kGoogle","kAmazon","kOracle","kOracleTierStandard","kOracleTierArchive","kAmazonC2S"]
	Type *string `json:"type,omitempty"`

	// Specifies the bytes used by the Vault.
	UsageBytes *int64 `json:"usageBytes,omitempty"`
}

// Validate validates this vault stats info
func (m *VaultStatsInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vaultStatsInfoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kNearline","kGlacier","kS3","kAzureStandard","kS3Compatible","kQStarTape","kGoogleStandard","kGoogleDRA","kAmazonS3StandardIA","kAWSGovCloud","kNAS","kColdline","kAzureGovCloud","kAzureArchive","kAzure","kGoogle","kAmazon","kOracle","kOracleTierStandard","kOracleTierArchive","kAmazonC2S"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vaultStatsInfoTypeTypePropEnum = append(vaultStatsInfoTypeTypePropEnum, v)
	}
}

const (

	// VaultStatsInfoTypeKNearline captures enum value "kNearline"
	VaultStatsInfoTypeKNearline string = "kNearline"

	// VaultStatsInfoTypeKGlacier captures enum value "kGlacier"
	VaultStatsInfoTypeKGlacier string = "kGlacier"

	// VaultStatsInfoTypeKS3 captures enum value "kS3"
	VaultStatsInfoTypeKS3 string = "kS3"

	// VaultStatsInfoTypeKAzureStandard captures enum value "kAzureStandard"
	VaultStatsInfoTypeKAzureStandard string = "kAzureStandard"

	// VaultStatsInfoTypeKS3Compatible captures enum value "kS3Compatible"
	VaultStatsInfoTypeKS3Compatible string = "kS3Compatible"

	// VaultStatsInfoTypeKQStarTape captures enum value "kQStarTape"
	VaultStatsInfoTypeKQStarTape string = "kQStarTape"

	// VaultStatsInfoTypeKGoogleStandard captures enum value "kGoogleStandard"
	VaultStatsInfoTypeKGoogleStandard string = "kGoogleStandard"

	// VaultStatsInfoTypeKGoogleDRA captures enum value "kGoogleDRA"
	VaultStatsInfoTypeKGoogleDRA string = "kGoogleDRA"

	// VaultStatsInfoTypeKAmazonS3StandardIA captures enum value "kAmazonS3StandardIA"
	VaultStatsInfoTypeKAmazonS3StandardIA string = "kAmazonS3StandardIA"

	// VaultStatsInfoTypeKAWSGovCloud captures enum value "kAWSGovCloud"
	VaultStatsInfoTypeKAWSGovCloud string = "kAWSGovCloud"

	// VaultStatsInfoTypeKNAS captures enum value "kNAS"
	VaultStatsInfoTypeKNAS string = "kNAS"

	// VaultStatsInfoTypeKColdline captures enum value "kColdline"
	VaultStatsInfoTypeKColdline string = "kColdline"

	// VaultStatsInfoTypeKAzureGovCloud captures enum value "kAzureGovCloud"
	VaultStatsInfoTypeKAzureGovCloud string = "kAzureGovCloud"

	// VaultStatsInfoTypeKAzureArchive captures enum value "kAzureArchive"
	VaultStatsInfoTypeKAzureArchive string = "kAzureArchive"

	// VaultStatsInfoTypeKAzure captures enum value "kAzure"
	VaultStatsInfoTypeKAzure string = "kAzure"

	// VaultStatsInfoTypeKGoogle captures enum value "kGoogle"
	VaultStatsInfoTypeKGoogle string = "kGoogle"

	// VaultStatsInfoTypeKAmazon captures enum value "kAmazon"
	VaultStatsInfoTypeKAmazon string = "kAmazon"

	// VaultStatsInfoTypeKOracle captures enum value "kOracle"
	VaultStatsInfoTypeKOracle string = "kOracle"

	// VaultStatsInfoTypeKOracleTierStandard captures enum value "kOracleTierStandard"
	VaultStatsInfoTypeKOracleTierStandard string = "kOracleTierStandard"

	// VaultStatsInfoTypeKOracleTierArchive captures enum value "kOracleTierArchive"
	VaultStatsInfoTypeKOracleTierArchive string = "kOracleTierArchive"

	// VaultStatsInfoTypeKAmazonC2S captures enum value "kAmazonC2S"
	VaultStatsInfoTypeKAmazonC2S string = "kAmazonC2S"
)

// prop value enum
func (m *VaultStatsInfo) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vaultStatsInfoTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VaultStatsInfo) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vault stats info based on context it is used
func (m *VaultStatsInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VaultStatsInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VaultStatsInfo) UnmarshalBinary(b []byte) error {
	var res VaultStatsInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
