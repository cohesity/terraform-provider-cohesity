// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HostInfo Hosts Information list.
//
// Specifies the list of all hosts on which the certificate is deployed.
//
// swagger:model HostInfo
type HostInfo struct {

	// Specifies the password of the host to establish SSH connection.
	// The certificate is copied to the host after generating the certificate
	// on the cluster.
	Password *string `json:"password,omitempty"`

	// Specifies the servername of the host where certificate is to be deployed.
	ServerName *string `json:"serverName,omitempty"`

	// Specifies the target location on the host where the certificate is
	// deployed.
	Target *string `json:"target,omitempty"`

	// Specifies the username of the host.
	UserName *string `json:"userName,omitempty"`
}

// Validate validates this host info
func (m *HostInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this host info based on context it is used
func (m *HostInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HostInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostInfo) UnmarshalBinary(b []byte) error {
	var res HostInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
