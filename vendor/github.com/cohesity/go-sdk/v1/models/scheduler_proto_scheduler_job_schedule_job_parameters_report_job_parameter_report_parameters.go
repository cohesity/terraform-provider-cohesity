// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters Specifies the report parameters.
//
// swagger:model SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report_Parameters
type SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters struct {

	// Specifies if subtenants of the given tenants should be
	// considered for report generation.
	AllUnderHierarchy *bool `json:"allUnderHierarchy,omitempty"`

	// Specifies the Cohesity Agent software version.
	CompactVersion *string `json:"compactVersion,omitempty"`

	// Specifies the number of consecutive failures.
	ConsecutiveFailures *int32 `json:"consecutiveFailures,omitempty"`

	// Specifies the Environment for the entity being protected.
	Environment *string `json:"environment,omitempty"`

	// User Quotas: Only the list of users who has
	// exceeded the alert threshold will be returned.
	ExcludeUsersWithinAlertThreshold *bool `json:"excludeUsersWithinAlertThreshold,omitempty"`

	// Specifies if the report should be grouped by any field.
	GroupBy *int32 `json:"groupBy,omitempty"`

	// Specifies the Cohesity Agent health status.
	HealthStatus []string `json:"healthStatus"`

	// Specifies the OS type on which Cohesity Agent is installed.
	HostOsType []string `json:"hostOsType"`

	// Specifies the id of the job for which to get the report data.
	JobID *int64 `json:"jobId,omitempty"`

	// Specifies the name of the job for which to get the report data.
	JobName *string `json:"jobName,omitempty"`

	// Specifies the number of days from current date for which the
	// report data is to be fetched.
	LastNDays *int32 `json:"lastNDays,omitempty"`

	// Specifies the object ids for which to get the report data.
	ObjectIds []int64 `json:"objectIds"`

	// Specifies the object type for which to get the report data.
	ObjectType *string `json:"objectType,omitempty"`

	// Specifies the registered source for which
	// to get the report data.
	RegisteredSourceID *int64 `json:"registeredSourceId,omitempty"`

	// Specifies the registered sources for which
	// to get the report data.
	RegisteredSourceIds []int64 `json:"registeredSourceIds"`

	// Specifies the rollup(day/week/month) for protected object trends
	// report.
	Rollup *string `json:"rollup,omitempty"`

	// Specifies the run status for which to get the report data.
	RunStatus []string `json:"runStatus"`

	// Specifies the sid of the user.
	Sid *string `json:"sid,omitempty"`

	// Specifies tenant ids for which report needs to be generated.
	TenantIDVec []string `json:"tenantIdVec"`

	// Specifies the timezone.
	Timezone *string `json:"timezone,omitempty"`

	// Specifies the unix uid of the user.
	UnixUID *uint32 `json:"unixUid,omitempty"`

	// Specifies the vault ids for which to get the report data.
	VaultIds []int64 `json:"vaultIds"`

	// Specifies the view box for which to get the report data.
	ViewBoxID *int64 `json:"viewBoxId,omitempty"`

	// Specifies the view name for which the report is required.
	ViewName *string `json:"viewName,omitempty"`

	// Specifies the viewbox ids to filter by.
	ViewboxIds []int64 `json:"viewboxIds"`

	// Specifies the VM name for which to get the report data.
	VMName *string `json:"vmName,omitempty"`
}

// Validate validates this scheduler proto scheduler job schedule job parameters report job parameter report parameters
func (m *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this scheduler proto scheduler job schedule job parameters report job parameter report parameters based on context it is used
func (m *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters) UnmarshalBinary(b []byte) error {
	var res SchedulerProtoSchedulerJobScheduleJobParametersReportJobParameterReportParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
