// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EntitySiteParams entity site params
//
// swagger:model Entity_SiteParams
type EntitySiteParams struct {

	// Whether the site is associated with a group. This implies the site
	// associated with group which is NOT team and both is_team_site and
	// is_private_channel_site is false
	IsGroupSite *bool `json:"isGroupSite,omitempty"`

	// Whether the site is associted with MS teams private channel. If this is
	// true, then is_team_site is true and is_group_site is false.
	IsPrivateChannelSite *bool `json:"isPrivateChannelSite,omitempty"`

	// Whether the site is associated with a team. This implies is_group_site
	// is also true and is_private_channel_site is false (site associated with
	// group which is team).
	IsTeamSite *bool `json:"isTeamSite,omitempty"`
}

// Validate validates this entity site params
func (m *EntitySiteParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this entity site params based on context it is used
func (m *EntitySiteParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EntitySiteParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EntitySiteParams) UnmarshalBinary(b []byte) error {
	var res EntitySiteParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
