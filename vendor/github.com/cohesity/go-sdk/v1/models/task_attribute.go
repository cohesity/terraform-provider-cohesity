// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaskAttribute Task Attribute.
//
// This contains a string name, a value, and a type for the value.
//
// swagger:model TaskAttribute
type TaskAttribute struct {

	// Specifies the name of this Task Attribute.
	Name *string `json:"name,omitempty"`

	// Specifies the value of this Task Attribute.
	Value *string `json:"value,omitempty"`

	// Specifies the type of the value contained here. All values are returned as
	// pointers to strings, but they can be casted to the type indicated here.
	// 'kInt64' indicates that the value stored in the Task Attribute is
	// a 64-bit integer.
	// 'kDouble' indicates that the value stored in the Task Attribute is
	// a 64 bit floating point number.
	// 'kString' indicates that the value stored in the Task Attribute is
	// a string.
	// 'kBytes' indicates that the value stored in the Task Attribute is
	// an array of bytes.
	// Enum: ["kInt64","kDouble","kString","kBytes"]
	ValueType *string `json:"valueType,omitempty"`
}

// Validate validates this task attribute
func (m *TaskAttribute) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValueType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var taskAttributeTypeValueTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kInt64","kDouble","kString","kBytes"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		taskAttributeTypeValueTypePropEnum = append(taskAttributeTypeValueTypePropEnum, v)
	}
}

const (

	// TaskAttributeValueTypeKInt64 captures enum value "kInt64"
	TaskAttributeValueTypeKInt64 string = "kInt64"

	// TaskAttributeValueTypeKDouble captures enum value "kDouble"
	TaskAttributeValueTypeKDouble string = "kDouble"

	// TaskAttributeValueTypeKString captures enum value "kString"
	TaskAttributeValueTypeKString string = "kString"

	// TaskAttributeValueTypeKBytes captures enum value "kBytes"
	TaskAttributeValueTypeKBytes string = "kBytes"
)

// prop value enum
func (m *TaskAttribute) validateValueTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, taskAttributeTypeValueTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TaskAttribute) validateValueType(formats strfmt.Registry) error {
	if swag.IsZero(m.ValueType) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueTypeEnum("valueType", "body", *m.ValueType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this task attribute based on context it is used
func (m *TaskAttribute) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TaskAttribute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskAttribute) UnmarshalBinary(b []byte) error {
	var res TaskAttribute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
