// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UnprotectObjectParams Unprotect Object Params.
//
// Specifies the parameters to unprotect an object.
//
// swagger:model UnprotectObjectParams
type UnprotectObjectParams struct {

	// Specifies whether to delete the snapshots of the Protection Object.
	DeleteSnapshots *bool `json:"deleteSnapshots,omitempty"`

	// Specifies the id of the Protection Source to be unprotected.
	// Required: true
	ProtectionSourceID *int64 `json:"protectionSourceId"`

	// Specifies the id of the Rpo Policy from which to unprotect the object.
	// Required: true
	RpoPolicyID *string `json:"rpoPolicyId"`
}

// Validate validates this unprotect object params
func (m *UnprotectObjectParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProtectionSourceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRpoPolicyID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UnprotectObjectParams) validateProtectionSourceID(formats strfmt.Registry) error {

	if err := validate.Required("protectionSourceId", "body", m.ProtectionSourceID); err != nil {
		return err
	}

	return nil
}

func (m *UnprotectObjectParams) validateRpoPolicyID(formats strfmt.Registry) error {

	if err := validate.Required("rpoPolicyId", "body", m.RpoPolicyID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this unprotect object params based on context it is used
func (m *UnprotectObjectParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UnprotectObjectParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UnprotectObjectParams) UnmarshalBinary(b []byte) error {
	var res UnprotectObjectParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
