// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharepointDocumentMetadata Sharepoint Site document metadata.
//
// Specifies the metadata for the Sharepoint Site document.
//
// swagger:model SharepointDocumentMetadata
type SharepointDocumentMetadata struct {

	// Specifies the type of site document(file/folder).
	// Specifies the Sharepoint document type.
	//
	// 'kFile' specifies a file.
	// 'kFolder' specifies a folder.
	// Enum: ["kFile","kFolder"]
	DocumentType *string `json:"documentType,omitempty"`
}

// Validate validates this sharepoint document metadata
func (m *SharepointDocumentMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sharepointDocumentMetadataTypeDocumentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kFile","kFolder"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharepointDocumentMetadataTypeDocumentTypePropEnum = append(sharepointDocumentMetadataTypeDocumentTypePropEnum, v)
	}
}

const (

	// SharepointDocumentMetadataDocumentTypeKFile captures enum value "kFile"
	SharepointDocumentMetadataDocumentTypeKFile string = "kFile"

	// SharepointDocumentMetadataDocumentTypeKFolder captures enum value "kFolder"
	SharepointDocumentMetadataDocumentTypeKFolder string = "kFolder"
)

// prop value enum
func (m *SharepointDocumentMetadata) validateDocumentTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, sharepointDocumentMetadataTypeDocumentTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SharepointDocumentMetadata) validateDocumentType(formats strfmt.Registry) error {
	if swag.IsZero(m.DocumentType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDocumentTypeEnum("documentType", "body", *m.DocumentType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sharepoint document metadata based on context it is used
func (m *SharepointDocumentMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SharepointDocumentMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharepointDocumentMetadata) UnmarshalBinary(b []byte) error {
	var res SharepointDocumentMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
