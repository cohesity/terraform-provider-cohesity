// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Route Route.
//
// Specifies the settings of a Static Route.
//
// swagger:model Route
type Route struct {

	// Specifies AdvMss setting per route.
	Advmss *int32 `json:"advmss,omitempty"`

	// Specifies a description of the Static Route.
	Description *string `json:"description,omitempty"`

	// Destination network.
	//
	// Specifies the destination network of the Static Route.
	// overrideDescription: true
	DestNetwork *string `json:"destNetwork,omitempty"`

	// Specifies the network interfaces name to use for communicating with the
	// destination network.
	IfName *string `json:"ifName,omitempty"`

	// Specifies the network interfaces group or interface group with vlan id to
	// use for communicating with the destination network.
	IfaceGroupName *string `json:"ifaceGroupName,omitempty"`

	// Specifies MTU setting per route.
	Mtu *int32 `json:"mtu,omitempty"`

	// Specifies the next hop to the destination network.
	NextHop *string `json:"nextHop,omitempty"`

	// Specifies the network node group to represent a group of nodes.
	NodeGroupName *string `json:"nodeGroupName,omitempty"`
}

// Validate validates this route
func (m *Route) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this route based on context it is used
func (m *Route) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Route) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Route) UnmarshalBinary(b []byte) error {
	var res Route
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
