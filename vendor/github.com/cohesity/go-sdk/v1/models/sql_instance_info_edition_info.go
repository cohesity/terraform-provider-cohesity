// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SQLInstanceInfoEditionInfo Holds information about the SQL Server edition.
//
// swagger:model SQLInstanceInfo_EditionInfo
type SQLInstanceInfoEditionInfo struct {

	// The edition of the SQL instance.
	Edition *int32 `json:"edition,omitempty"`

	// This holds the string value returned by SQL Server for the
	// SERVERPROPERTY('Edition').
	EditionString *string `json:"editionString,omitempty"`

	// Whether the SQL instance is 64-bit.
	Is64Bit *bool `json:"is_64Bit,omitempty"`
}

// Validate validates this SQL instance info edition info
func (m *SQLInstanceInfoEditionInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this SQL instance info edition info based on context it is used
func (m *SQLInstanceInfoEditionInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SQLInstanceInfoEditionInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SQLInstanceInfoEditionInfo) UnmarshalBinary(b []byte) error {
	var res SQLInstanceInfoEditionInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
