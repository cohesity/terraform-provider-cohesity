// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CrackedFileDocumentO365TeamsChannelFilesMetadata Metadata for teams channels files. File category is saved in the
// file_category field. Filepath, channel id and drive id will be part of
// file name.
// If the current item is a doclib, the filename will consist channel-id
// and doclib id only. Doclib name is saved in metadata field drive_name.
//
// swagger:model CrackedFileDocument_O365TeamsChannelFilesMetadata
type CrackedFileDocumentO365TeamsChannelFilesMetadata struct {

	// Seconds from epoch at which the file/folder is created.
	CreationTimeSecs *int64 `json:"creationTimeSecs,omitempty"`

	// doc type
	DocType *int32 `json:"docType,omitempty"`

	// Name of the drive for this item
	DriveName *string `json:"driveName,omitempty"`

	// Id of this item
	ID *string `json:"id,omitempty"`

	// Size of the file/folder in bytes.
	SizeInBytes *int64 `json:"sizeInBytes,omitempty"`
}

// Validate validates this cracked file document o365 teams channel files metadata
func (m *CrackedFileDocumentO365TeamsChannelFilesMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cracked file document o365 teams channel files metadata based on context it is used
func (m *CrackedFileDocumentO365TeamsChannelFilesMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CrackedFileDocumentO365TeamsChannelFilesMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CrackedFileDocumentO365TeamsChannelFilesMetadata) UnmarshalBinary(b []byte) error {
	var res CrackedFileDocumentO365TeamsChannelFilesMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
