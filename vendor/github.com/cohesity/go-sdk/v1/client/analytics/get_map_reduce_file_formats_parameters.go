// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetMapReduceFileFormatsParams creates a new GetMapReduceFileFormatsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetMapReduceFileFormatsParams() *GetMapReduceFileFormatsParams {
	return &GetMapReduceFileFormatsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetMapReduceFileFormatsParamsWithTimeout creates a new GetMapReduceFileFormatsParams object
// with the ability to set a timeout on a request.
func NewGetMapReduceFileFormatsParamsWithTimeout(timeout time.Duration) *GetMapReduceFileFormatsParams {
	return &GetMapReduceFileFormatsParams{
		timeout: timeout,
	}
}

// NewGetMapReduceFileFormatsParamsWithContext creates a new GetMapReduceFileFormatsParams object
// with the ability to set a context for a request.
func NewGetMapReduceFileFormatsParamsWithContext(ctx context.Context) *GetMapReduceFileFormatsParams {
	return &GetMapReduceFileFormatsParams{
		Context: ctx,
	}
}

// NewGetMapReduceFileFormatsParamsWithHTTPClient creates a new GetMapReduceFileFormatsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetMapReduceFileFormatsParamsWithHTTPClient(client *http.Client) *GetMapReduceFileFormatsParams {
	return &GetMapReduceFileFormatsParams{
		HTTPClient: client,
	}
}

/*
GetMapReduceFileFormatsParams contains all the parameters to send to the API endpoint

	for the get map reduce file formats operation.

	Typically these are written to a http.Request.
*/
type GetMapReduceFileFormatsParams struct {

	/* ResultFilePath.

	     Specifies the path where the map reduce instance has the result.
	file generated.
	*/
	ResultFilePath string

	/* StorageDomainID.

	   Specifies the ID of the storage domain.

	   Format: int64
	*/
	StorageDomainID int64

	/* ViewName.

	     Specifies the name of the view inside view box where map reduce instance.
	is run.
	*/
	ViewName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get map reduce file formats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMapReduceFileFormatsParams) WithDefaults() *GetMapReduceFileFormatsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get map reduce file formats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMapReduceFileFormatsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithTimeout(timeout time.Duration) *GetMapReduceFileFormatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithContext(ctx context.Context) *GetMapReduceFileFormatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithHTTPClient(client *http.Client) *GetMapReduceFileFormatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResultFilePath adds the resultFilePath to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithResultFilePath(resultFilePath string) *GetMapReduceFileFormatsParams {
	o.SetResultFilePath(resultFilePath)
	return o
}

// SetResultFilePath adds the resultFilePath to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetResultFilePath(resultFilePath string) {
	o.ResultFilePath = resultFilePath
}

// WithStorageDomainID adds the storageDomainID to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithStorageDomainID(storageDomainID int64) *GetMapReduceFileFormatsParams {
	o.SetStorageDomainID(storageDomainID)
	return o
}

// SetStorageDomainID adds the storageDomainId to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetStorageDomainID(storageDomainID int64) {
	o.StorageDomainID = storageDomainID
}

// WithViewName adds the viewName to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) WithViewName(viewName string) *GetMapReduceFileFormatsParams {
	o.SetViewName(viewName)
	return o
}

// SetViewName adds the viewName to the get map reduce file formats params
func (o *GetMapReduceFileFormatsParams) SetViewName(viewName string) {
	o.ViewName = viewName
}

// WriteToRequest writes these params to a swagger request
func (o *GetMapReduceFileFormatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param resultFilePath
	qrResultFilePath := o.ResultFilePath
	qResultFilePath := qrResultFilePath
	if qResultFilePath != "" {

		if err := r.SetQueryParam("resultFilePath", qResultFilePath); err != nil {
			return err
		}
	}

	// query param storageDomainId
	qrStorageDomainID := o.StorageDomainID
	qStorageDomainID := swag.FormatInt64(qrStorageDomainID)
	if qStorageDomainID != "" {

		if err := r.SetQueryParam("storageDomainId", qStorageDomainID); err != nil {
			return err
		}
	}

	// query param viewName
	qrViewName := o.ViewName
	qViewName := qrViewName
	if qViewName != "" {

		if err := r.SetQueryParam("viewName", qViewName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
