// Code generated by go-swagger; DO NOT EDIT.

package remote_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v1/models"
)

// GetRemoteClusterByIDReader is a Reader for the GetRemoteClusterByID structure.
type GetRemoteClusterByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRemoteClusterByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRemoteClusterByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRemoteClusterByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRemoteClusterByIDOK creates a GetRemoteClusterByIDOK with default headers values
func NewGetRemoteClusterByIDOK() *GetRemoteClusterByIDOK {
	return &GetRemoteClusterByIDOK{}
}

/*
GetRemoteClusterByIDOK describes a response with status code 200, with default header values.

Success
*/
type GetRemoteClusterByIDOK struct {
	Payload []*models.RemoteCluster
}

// IsSuccess returns true when this get remote cluster by Id o k response has a 2xx status code
func (o *GetRemoteClusterByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get remote cluster by Id o k response has a 3xx status code
func (o *GetRemoteClusterByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote cluster by Id o k response has a 4xx status code
func (o *GetRemoteClusterByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get remote cluster by Id o k response has a 5xx status code
func (o *GetRemoteClusterByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote cluster by Id o k response a status code equal to that given
func (o *GetRemoteClusterByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get remote cluster by Id o k response
func (o *GetRemoteClusterByIDOK) Code() int {
	return 200
}

func (o *GetRemoteClusterByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/remoteClusters/{id}][%d] getRemoteClusterByIdOK %s", 200, payload)
}

func (o *GetRemoteClusterByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/remoteClusters/{id}][%d] getRemoteClusterByIdOK %s", 200, payload)
}

func (o *GetRemoteClusterByIDOK) GetPayload() []*models.RemoteCluster {
	return o.Payload
}

func (o *GetRemoteClusterByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteClusterByIDDefault creates a GetRemoteClusterByIDDefault with default headers values
func NewGetRemoteClusterByIDDefault(code int) *GetRemoteClusterByIDDefault {
	return &GetRemoteClusterByIDDefault{
		_statusCode: code,
	}
}

/*
GetRemoteClusterByIDDefault describes a response with status code -1, with default header values.

Error
*/
type GetRemoteClusterByIDDefault struct {
	_statusCode int

	Payload *models.RequestError
}

// IsSuccess returns true when this get remote cluster by Id default response has a 2xx status code
func (o *GetRemoteClusterByIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get remote cluster by Id default response has a 3xx status code
func (o *GetRemoteClusterByIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get remote cluster by Id default response has a 4xx status code
func (o *GetRemoteClusterByIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get remote cluster by Id default response has a 5xx status code
func (o *GetRemoteClusterByIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get remote cluster by Id default response a status code equal to that given
func (o *GetRemoteClusterByIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get remote cluster by Id default response
func (o *GetRemoteClusterByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetRemoteClusterByIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/remoteClusters/{id}][%d] GetRemoteClusterById default %s", o._statusCode, payload)
}

func (o *GetRemoteClusterByIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/remoteClusters/{id}][%d] GetRemoteClusterById default %s", o._statusCode, payload)
}

func (o *GetRemoteClusterByIDDefault) GetPayload() *models.RequestError {
	return o.Payload
}

func (o *GetRemoteClusterByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
