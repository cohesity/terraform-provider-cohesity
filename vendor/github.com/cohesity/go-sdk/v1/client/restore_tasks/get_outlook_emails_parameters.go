// Code generated by go-swagger; DO NOT EDIT.

package restore_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOutlookEmailsParams creates a new GetOutlookEmailsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOutlookEmailsParams() *GetOutlookEmailsParams {
	return &GetOutlookEmailsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOutlookEmailsParamsWithTimeout creates a new GetOutlookEmailsParams object
// with the ability to set a timeout on a request.
func NewGetOutlookEmailsParamsWithTimeout(timeout time.Duration) *GetOutlookEmailsParams {
	return &GetOutlookEmailsParams{
		timeout: timeout,
	}
}

// NewGetOutlookEmailsParamsWithContext creates a new GetOutlookEmailsParams object
// with the ability to set a context for a request.
func NewGetOutlookEmailsParamsWithContext(ctx context.Context) *GetOutlookEmailsParams {
	return &GetOutlookEmailsParams{
		Context: ctx,
	}
}

// NewGetOutlookEmailsParamsWithHTTPClient creates a new GetOutlookEmailsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOutlookEmailsParamsWithHTTPClient(client *http.Client) *GetOutlookEmailsParams {
	return &GetOutlookEmailsParams{
		HTTPClient: client,
	}
}

/*
GetOutlookEmailsParams contains all the parameters to send to the API endpoint

	for the get outlook emails operation.

	Typically these are written to a http.Request.
*/
type GetOutlookEmailsParams struct {

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
	of tenant with id TenantId should be returned.
	*/
	AllUnderHierarchy *bool

	/* BccRecipientAddresses.

	   Specifies the email addresses of the bcc recipients.
	*/
	BccRecipientAddresses []string

	/* CcRecipientAddresses.

	   Specifies the email addresses of the cc recipients.
	*/
	CcRecipientAddresses []string

	/* DomainIds.

	   Specifies the domain Ids in which mailboxes are registered.
	*/
	DomainIds []int64

	/* EmailSubject.

	   Specifies the subject of the email.
	*/
	EmailSubject *string

	/* FolderName.

	   Specifies the parent folder name of the email.
	*/
	FolderName *string

	/* HasAttachments.

	   Specifies whether the emails have any attachments.
	*/
	HasAttachments *bool

	/* MailboxIds.

	   Specifies the mailbox Ids which contains the emails/folders.
	*/
	MailboxIds []int64

	/* ProtectionJobIds.

	     Specifies the protection job Ids which have backed up mailbox(es)
	continaing emails/folders.
	*/
	ProtectionJobIds []int64

	/* ReceivedEndTime.

	   Specifies the unix end time for querying on email's received time.

	   Format: int64
	*/
	ReceivedEndTime *int64

	/* ReceivedStartTime.

	   Specifies the unix start time for querying on email's received time.

	   Format: int64
	*/
	ReceivedStartTime *int64

	/* ReceivedTimeSeconds.

	   Specifies the unix time when the email was received.

	   Format: int64
	*/
	ReceivedTimeSeconds *int64

	/* RecipientAddresses.

	   Specifies the email addresses of the recipients.
	*/
	RecipientAddresses []string

	/* SenderAddress.

	   Specifies the email address of the sender.
	*/
	SenderAddress *string

	/* SentTimeSeconds.

	   Specifies the unix time when the email was sent.

	   Format: int64
	*/
	SentTimeSeconds *int64

	/* ShowOnlyEmailFolders.

	   Specifies whether the query result should include only Email folders.
	*/
	ShowOnlyEmailFolders *bool

	/* TenantID.

	   TenantId specifies the tenant whose action resulted in the audit log.
	*/
	TenantID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get outlook emails params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOutlookEmailsParams) WithDefaults() *GetOutlookEmailsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get outlook emails params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOutlookEmailsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get outlook emails params
func (o *GetOutlookEmailsParams) WithTimeout(timeout time.Duration) *GetOutlookEmailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get outlook emails params
func (o *GetOutlookEmailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get outlook emails params
func (o *GetOutlookEmailsParams) WithContext(ctx context.Context) *GetOutlookEmailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get outlook emails params
func (o *GetOutlookEmailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get outlook emails params
func (o *GetOutlookEmailsParams) WithHTTPClient(client *http.Client) *GetOutlookEmailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get outlook emails params
func (o *GetOutlookEmailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get outlook emails params
func (o *GetOutlookEmailsParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetOutlookEmailsParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get outlook emails params
func (o *GetOutlookEmailsParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithBccRecipientAddresses adds the bccRecipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) WithBccRecipientAddresses(bccRecipientAddresses []string) *GetOutlookEmailsParams {
	o.SetBccRecipientAddresses(bccRecipientAddresses)
	return o
}

// SetBccRecipientAddresses adds the bccRecipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) SetBccRecipientAddresses(bccRecipientAddresses []string) {
	o.BccRecipientAddresses = bccRecipientAddresses
}

// WithCcRecipientAddresses adds the ccRecipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) WithCcRecipientAddresses(ccRecipientAddresses []string) *GetOutlookEmailsParams {
	o.SetCcRecipientAddresses(ccRecipientAddresses)
	return o
}

// SetCcRecipientAddresses adds the ccRecipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) SetCcRecipientAddresses(ccRecipientAddresses []string) {
	o.CcRecipientAddresses = ccRecipientAddresses
}

// WithDomainIds adds the domainIds to the get outlook emails params
func (o *GetOutlookEmailsParams) WithDomainIds(domainIds []int64) *GetOutlookEmailsParams {
	o.SetDomainIds(domainIds)
	return o
}

// SetDomainIds adds the domainIds to the get outlook emails params
func (o *GetOutlookEmailsParams) SetDomainIds(domainIds []int64) {
	o.DomainIds = domainIds
}

// WithEmailSubject adds the emailSubject to the get outlook emails params
func (o *GetOutlookEmailsParams) WithEmailSubject(emailSubject *string) *GetOutlookEmailsParams {
	o.SetEmailSubject(emailSubject)
	return o
}

// SetEmailSubject adds the emailSubject to the get outlook emails params
func (o *GetOutlookEmailsParams) SetEmailSubject(emailSubject *string) {
	o.EmailSubject = emailSubject
}

// WithFolderName adds the folderName to the get outlook emails params
func (o *GetOutlookEmailsParams) WithFolderName(folderName *string) *GetOutlookEmailsParams {
	o.SetFolderName(folderName)
	return o
}

// SetFolderName adds the folderName to the get outlook emails params
func (o *GetOutlookEmailsParams) SetFolderName(folderName *string) {
	o.FolderName = folderName
}

// WithHasAttachments adds the hasAttachments to the get outlook emails params
func (o *GetOutlookEmailsParams) WithHasAttachments(hasAttachments *bool) *GetOutlookEmailsParams {
	o.SetHasAttachments(hasAttachments)
	return o
}

// SetHasAttachments adds the hasAttachments to the get outlook emails params
func (o *GetOutlookEmailsParams) SetHasAttachments(hasAttachments *bool) {
	o.HasAttachments = hasAttachments
}

// WithMailboxIds adds the mailboxIds to the get outlook emails params
func (o *GetOutlookEmailsParams) WithMailboxIds(mailboxIds []int64) *GetOutlookEmailsParams {
	o.SetMailboxIds(mailboxIds)
	return o
}

// SetMailboxIds adds the mailboxIds to the get outlook emails params
func (o *GetOutlookEmailsParams) SetMailboxIds(mailboxIds []int64) {
	o.MailboxIds = mailboxIds
}

// WithProtectionJobIds adds the protectionJobIds to the get outlook emails params
func (o *GetOutlookEmailsParams) WithProtectionJobIds(protectionJobIds []int64) *GetOutlookEmailsParams {
	o.SetProtectionJobIds(protectionJobIds)
	return o
}

// SetProtectionJobIds adds the protectionJobIds to the get outlook emails params
func (o *GetOutlookEmailsParams) SetProtectionJobIds(protectionJobIds []int64) {
	o.ProtectionJobIds = protectionJobIds
}

// WithReceivedEndTime adds the receivedEndTime to the get outlook emails params
func (o *GetOutlookEmailsParams) WithReceivedEndTime(receivedEndTime *int64) *GetOutlookEmailsParams {
	o.SetReceivedEndTime(receivedEndTime)
	return o
}

// SetReceivedEndTime adds the receivedEndTime to the get outlook emails params
func (o *GetOutlookEmailsParams) SetReceivedEndTime(receivedEndTime *int64) {
	o.ReceivedEndTime = receivedEndTime
}

// WithReceivedStartTime adds the receivedStartTime to the get outlook emails params
func (o *GetOutlookEmailsParams) WithReceivedStartTime(receivedStartTime *int64) *GetOutlookEmailsParams {
	o.SetReceivedStartTime(receivedStartTime)
	return o
}

// SetReceivedStartTime adds the receivedStartTime to the get outlook emails params
func (o *GetOutlookEmailsParams) SetReceivedStartTime(receivedStartTime *int64) {
	o.ReceivedStartTime = receivedStartTime
}

// WithReceivedTimeSeconds adds the receivedTimeSeconds to the get outlook emails params
func (o *GetOutlookEmailsParams) WithReceivedTimeSeconds(receivedTimeSeconds *int64) *GetOutlookEmailsParams {
	o.SetReceivedTimeSeconds(receivedTimeSeconds)
	return o
}

// SetReceivedTimeSeconds adds the receivedTimeSeconds to the get outlook emails params
func (o *GetOutlookEmailsParams) SetReceivedTimeSeconds(receivedTimeSeconds *int64) {
	o.ReceivedTimeSeconds = receivedTimeSeconds
}

// WithRecipientAddresses adds the recipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) WithRecipientAddresses(recipientAddresses []string) *GetOutlookEmailsParams {
	o.SetRecipientAddresses(recipientAddresses)
	return o
}

// SetRecipientAddresses adds the recipientAddresses to the get outlook emails params
func (o *GetOutlookEmailsParams) SetRecipientAddresses(recipientAddresses []string) {
	o.RecipientAddresses = recipientAddresses
}

// WithSenderAddress adds the senderAddress to the get outlook emails params
func (o *GetOutlookEmailsParams) WithSenderAddress(senderAddress *string) *GetOutlookEmailsParams {
	o.SetSenderAddress(senderAddress)
	return o
}

// SetSenderAddress adds the senderAddress to the get outlook emails params
func (o *GetOutlookEmailsParams) SetSenderAddress(senderAddress *string) {
	o.SenderAddress = senderAddress
}

// WithSentTimeSeconds adds the sentTimeSeconds to the get outlook emails params
func (o *GetOutlookEmailsParams) WithSentTimeSeconds(sentTimeSeconds *int64) *GetOutlookEmailsParams {
	o.SetSentTimeSeconds(sentTimeSeconds)
	return o
}

// SetSentTimeSeconds adds the sentTimeSeconds to the get outlook emails params
func (o *GetOutlookEmailsParams) SetSentTimeSeconds(sentTimeSeconds *int64) {
	o.SentTimeSeconds = sentTimeSeconds
}

// WithShowOnlyEmailFolders adds the showOnlyEmailFolders to the get outlook emails params
func (o *GetOutlookEmailsParams) WithShowOnlyEmailFolders(showOnlyEmailFolders *bool) *GetOutlookEmailsParams {
	o.SetShowOnlyEmailFolders(showOnlyEmailFolders)
	return o
}

// SetShowOnlyEmailFolders adds the showOnlyEmailFolders to the get outlook emails params
func (o *GetOutlookEmailsParams) SetShowOnlyEmailFolders(showOnlyEmailFolders *bool) {
	o.ShowOnlyEmailFolders = showOnlyEmailFolders
}

// WithTenantID adds the tenantID to the get outlook emails params
func (o *GetOutlookEmailsParams) WithTenantID(tenantID *string) *GetOutlookEmailsParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the get outlook emails params
func (o *GetOutlookEmailsParams) SetTenantID(tenantID *string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOutlookEmailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.BccRecipientAddresses != nil {

		// binding items for bccRecipientAddresses
		joinedBccRecipientAddresses := o.bindParamBccRecipientAddresses(reg)

		// query array param bccRecipientAddresses
		if err := r.SetQueryParam("bccRecipientAddresses", joinedBccRecipientAddresses...); err != nil {
			return err
		}
	}

	if o.CcRecipientAddresses != nil {

		// binding items for ccRecipientAddresses
		joinedCcRecipientAddresses := o.bindParamCcRecipientAddresses(reg)

		// query array param ccRecipientAddresses
		if err := r.SetQueryParam("ccRecipientAddresses", joinedCcRecipientAddresses...); err != nil {
			return err
		}
	}

	if o.DomainIds != nil {

		// binding items for domainIds
		joinedDomainIds := o.bindParamDomainIds(reg)

		// query array param domainIds
		if err := r.SetQueryParam("domainIds", joinedDomainIds...); err != nil {
			return err
		}
	}

	if o.EmailSubject != nil {

		// query param emailSubject
		var qrEmailSubject string

		if o.EmailSubject != nil {
			qrEmailSubject = *o.EmailSubject
		}
		qEmailSubject := qrEmailSubject
		if qEmailSubject != "" {

			if err := r.SetQueryParam("emailSubject", qEmailSubject); err != nil {
				return err
			}
		}
	}

	if o.FolderName != nil {

		// query param folderName
		var qrFolderName string

		if o.FolderName != nil {
			qrFolderName = *o.FolderName
		}
		qFolderName := qrFolderName
		if qFolderName != "" {

			if err := r.SetQueryParam("folderName", qFolderName); err != nil {
				return err
			}
		}
	}

	if o.HasAttachments != nil {

		// query param hasAttachments
		var qrHasAttachments bool

		if o.HasAttachments != nil {
			qrHasAttachments = *o.HasAttachments
		}
		qHasAttachments := swag.FormatBool(qrHasAttachments)
		if qHasAttachments != "" {

			if err := r.SetQueryParam("hasAttachments", qHasAttachments); err != nil {
				return err
			}
		}
	}

	if o.MailboxIds != nil {

		// binding items for mailboxIds
		joinedMailboxIds := o.bindParamMailboxIds(reg)

		// query array param mailboxIds
		if err := r.SetQueryParam("mailboxIds", joinedMailboxIds...); err != nil {
			return err
		}
	}

	if o.ProtectionJobIds != nil {

		// binding items for protectionJobIds
		joinedProtectionJobIds := o.bindParamProtectionJobIds(reg)

		// query array param protectionJobIds
		if err := r.SetQueryParam("protectionJobIds", joinedProtectionJobIds...); err != nil {
			return err
		}
	}

	if o.ReceivedEndTime != nil {

		// query param receivedEndTime
		var qrReceivedEndTime int64

		if o.ReceivedEndTime != nil {
			qrReceivedEndTime = *o.ReceivedEndTime
		}
		qReceivedEndTime := swag.FormatInt64(qrReceivedEndTime)
		if qReceivedEndTime != "" {

			if err := r.SetQueryParam("receivedEndTime", qReceivedEndTime); err != nil {
				return err
			}
		}
	}

	if o.ReceivedStartTime != nil {

		// query param receivedStartTime
		var qrReceivedStartTime int64

		if o.ReceivedStartTime != nil {
			qrReceivedStartTime = *o.ReceivedStartTime
		}
		qReceivedStartTime := swag.FormatInt64(qrReceivedStartTime)
		if qReceivedStartTime != "" {

			if err := r.SetQueryParam("receivedStartTime", qReceivedStartTime); err != nil {
				return err
			}
		}
	}

	if o.ReceivedTimeSeconds != nil {

		// query param receivedTimeSeconds
		var qrReceivedTimeSeconds int64

		if o.ReceivedTimeSeconds != nil {
			qrReceivedTimeSeconds = *o.ReceivedTimeSeconds
		}
		qReceivedTimeSeconds := swag.FormatInt64(qrReceivedTimeSeconds)
		if qReceivedTimeSeconds != "" {

			if err := r.SetQueryParam("receivedTimeSeconds", qReceivedTimeSeconds); err != nil {
				return err
			}
		}
	}

	if o.RecipientAddresses != nil {

		// binding items for recipientAddresses
		joinedRecipientAddresses := o.bindParamRecipientAddresses(reg)

		// query array param recipientAddresses
		if err := r.SetQueryParam("recipientAddresses", joinedRecipientAddresses...); err != nil {
			return err
		}
	}

	if o.SenderAddress != nil {

		// query param senderAddress
		var qrSenderAddress string

		if o.SenderAddress != nil {
			qrSenderAddress = *o.SenderAddress
		}
		qSenderAddress := qrSenderAddress
		if qSenderAddress != "" {

			if err := r.SetQueryParam("senderAddress", qSenderAddress); err != nil {
				return err
			}
		}
	}

	if o.SentTimeSeconds != nil {

		// query param sentTimeSeconds
		var qrSentTimeSeconds int64

		if o.SentTimeSeconds != nil {
			qrSentTimeSeconds = *o.SentTimeSeconds
		}
		qSentTimeSeconds := swag.FormatInt64(qrSentTimeSeconds)
		if qSentTimeSeconds != "" {

			if err := r.SetQueryParam("sentTimeSeconds", qSentTimeSeconds); err != nil {
				return err
			}
		}
	}

	if o.ShowOnlyEmailFolders != nil {

		// query param showOnlyEmailFolders
		var qrShowOnlyEmailFolders bool

		if o.ShowOnlyEmailFolders != nil {
			qrShowOnlyEmailFolders = *o.ShowOnlyEmailFolders
		}
		qShowOnlyEmailFolders := swag.FormatBool(qrShowOnlyEmailFolders)
		if qShowOnlyEmailFolders != "" {

			if err := r.SetQueryParam("showOnlyEmailFolders", qShowOnlyEmailFolders); err != nil {
				return err
			}
		}
	}

	if o.TenantID != nil {

		// query param tenantId
		var qrTenantID string

		if o.TenantID != nil {
			qrTenantID = *o.TenantID
		}
		qTenantID := qrTenantID
		if qTenantID != "" {

			if err := r.SetQueryParam("tenantId", qTenantID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOutlookEmails binds the parameter bccRecipientAddresses
func (o *GetOutlookEmailsParams) bindParamBccRecipientAddresses(formats strfmt.Registry) []string {
	bccRecipientAddressesIR := o.BccRecipientAddresses

	var bccRecipientAddressesIC []string
	for _, bccRecipientAddressesIIR := range bccRecipientAddressesIR { // explode []string

		bccRecipientAddressesIIV := bccRecipientAddressesIIR // string as string
		bccRecipientAddressesIC = append(bccRecipientAddressesIC, bccRecipientAddressesIIV)
	}

	// items.CollectionFormat: ""
	bccRecipientAddressesIS := swag.JoinByFormat(bccRecipientAddressesIC, "")

	return bccRecipientAddressesIS
}

// bindParamGetOutlookEmails binds the parameter ccRecipientAddresses
func (o *GetOutlookEmailsParams) bindParamCcRecipientAddresses(formats strfmt.Registry) []string {
	ccRecipientAddressesIR := o.CcRecipientAddresses

	var ccRecipientAddressesIC []string
	for _, ccRecipientAddressesIIR := range ccRecipientAddressesIR { // explode []string

		ccRecipientAddressesIIV := ccRecipientAddressesIIR // string as string
		ccRecipientAddressesIC = append(ccRecipientAddressesIC, ccRecipientAddressesIIV)
	}

	// items.CollectionFormat: ""
	ccRecipientAddressesIS := swag.JoinByFormat(ccRecipientAddressesIC, "")

	return ccRecipientAddressesIS
}

// bindParamGetOutlookEmails binds the parameter domainIds
func (o *GetOutlookEmailsParams) bindParamDomainIds(formats strfmt.Registry) []string {
	domainIdsIR := o.DomainIds

	var domainIdsIC []string
	for _, domainIdsIIR := range domainIdsIR { // explode []int64

		domainIdsIIV := swag.FormatInt64(domainIdsIIR) // int64 as string
		domainIdsIC = append(domainIdsIC, domainIdsIIV)
	}

	// items.CollectionFormat: ""
	domainIdsIS := swag.JoinByFormat(domainIdsIC, "")

	return domainIdsIS
}

// bindParamGetOutlookEmails binds the parameter mailboxIds
func (o *GetOutlookEmailsParams) bindParamMailboxIds(formats strfmt.Registry) []string {
	mailboxIdsIR := o.MailboxIds

	var mailboxIdsIC []string
	for _, mailboxIdsIIR := range mailboxIdsIR { // explode []int64

		mailboxIdsIIV := swag.FormatInt64(mailboxIdsIIR) // int64 as string
		mailboxIdsIC = append(mailboxIdsIC, mailboxIdsIIV)
	}

	// items.CollectionFormat: ""
	mailboxIdsIS := swag.JoinByFormat(mailboxIdsIC, "")

	return mailboxIdsIS
}

// bindParamGetOutlookEmails binds the parameter protectionJobIds
func (o *GetOutlookEmailsParams) bindParamProtectionJobIds(formats strfmt.Registry) []string {
	protectionJobIdsIR := o.ProtectionJobIds

	var protectionJobIdsIC []string
	for _, protectionJobIdsIIR := range protectionJobIdsIR { // explode []int64

		protectionJobIdsIIV := swag.FormatInt64(protectionJobIdsIIR) // int64 as string
		protectionJobIdsIC = append(protectionJobIdsIC, protectionJobIdsIIV)
	}

	// items.CollectionFormat: ""
	protectionJobIdsIS := swag.JoinByFormat(protectionJobIdsIC, "")

	return protectionJobIdsIS
}

// bindParamGetOutlookEmails binds the parameter recipientAddresses
func (o *GetOutlookEmailsParams) bindParamRecipientAddresses(formats strfmt.Registry) []string {
	recipientAddressesIR := o.RecipientAddresses

	var recipientAddressesIC []string
	for _, recipientAddressesIIR := range recipientAddressesIR { // explode []string

		recipientAddressesIIV := recipientAddressesIIR // string as string
		recipientAddressesIC = append(recipientAddressesIC, recipientAddressesIIV)
	}

	// items.CollectionFormat: ""
	recipientAddressesIS := swag.JoinByFormat(recipientAddressesIC, "")

	return recipientAddressesIS
}
