// Code generated by go-swagger; DO NOT EDIT.

package restore_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchAdObjectsParams creates a new SearchAdObjectsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchAdObjectsParams() *SearchAdObjectsParams {
	return &SearchAdObjectsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchAdObjectsParamsWithTimeout creates a new SearchAdObjectsParams object
// with the ability to set a timeout on a request.
func NewSearchAdObjectsParamsWithTimeout(timeout time.Duration) *SearchAdObjectsParams {
	return &SearchAdObjectsParams{
		timeout: timeout,
	}
}

// NewSearchAdObjectsParamsWithContext creates a new SearchAdObjectsParams object
// with the ability to set a context for a request.
func NewSearchAdObjectsParamsWithContext(ctx context.Context) *SearchAdObjectsParams {
	return &SearchAdObjectsParams{
		Context: ctx,
	}
}

// NewSearchAdObjectsParamsWithHTTPClient creates a new SearchAdObjectsParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchAdObjectsParamsWithHTTPClient(client *http.Client) *SearchAdObjectsParams {
	return &SearchAdObjectsParams{
		HTTPClient: client,
	}
}

/*
SearchAdObjectsParams contains all the parameters to send to the API endpoint

	for the search ad objects operation.

	Typically these are written to a http.Request.
*/
type SearchAdObjectsParams struct {

	/* CompareObjects.

	     Specifies the option to compare the properties from Snapshot AD and
	Production AD if specifed and sets kNotEqual flag in the result when
	there is mismatch.
	*/
	CompareObjects *bool

	/* ExcludeSystemProperties.

	     Specifies the option to exclude the system attributes while comparing the
	the objects from the Production AD and Snapshot AD.
	*/
	ExcludeSystemProperties *bool

	/* Filter.

	     Specifies the filter which can be used for searching the AD Objects from
	given Search Base DN.
	There are two types of filters supported. They are:
	1) If the string does not contain LDAP delimiters '(' and ')', then it is
	assumed to be ANR search "(anr=<ldap_filter>)"
	Eg: "a" will result in query to return all ANR fields with "a" characters
	(case insensitive) in them
	2) Search with OR and AND combination:
	"(|(&(objectClass=user)(distinguishedName=CN=Jone
	Doe,OU=Users,DC=corp,DC=cohesity,DC=com))(&(objectClass=user)
	(sAMAccountName=jdoe)))"
	*/
	Filter *string

	/* NumObjects.

	   Specifies the number of AD Objects to be fetched.

	   Format: uint32
	*/
	NumObjects *uint32

	/* RecordOffset.

	     Specifies the offset from which AD objects should be searched in both
	the Snapshot and Production AD.

	     Format: uint32
	*/
	RecordOffset *uint32

	/* RestoreTaskID.

	     Specifies the restoreTaskId corresponding to which we need to search
	AD objects.

	     Format: int64
	*/
	RestoreTaskID int64

	/* SearchBaseDn.

	     Specifies the search base distinguished name from where the search
	should begin in the hierarchy of the AD in both Production
	and Snapshot AD.
	*/
	SearchBaseDn *string

	/* SubtreeSearchScope.

	     Specifies the search scope for the request.
	If subtree search scope is true all the children of Search Base DN
	are returned from given offset. If subtree search scope is false
	only all objects which are one level from the Search Base DN are returned.
	*/
	SubtreeSearchScope *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search ad objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAdObjectsParams) WithDefaults() *SearchAdObjectsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search ad objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchAdObjectsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search ad objects params
func (o *SearchAdObjectsParams) WithTimeout(timeout time.Duration) *SearchAdObjectsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search ad objects params
func (o *SearchAdObjectsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search ad objects params
func (o *SearchAdObjectsParams) WithContext(ctx context.Context) *SearchAdObjectsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search ad objects params
func (o *SearchAdObjectsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search ad objects params
func (o *SearchAdObjectsParams) WithHTTPClient(client *http.Client) *SearchAdObjectsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search ad objects params
func (o *SearchAdObjectsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompareObjects adds the compareObjects to the search ad objects params
func (o *SearchAdObjectsParams) WithCompareObjects(compareObjects *bool) *SearchAdObjectsParams {
	o.SetCompareObjects(compareObjects)
	return o
}

// SetCompareObjects adds the compareObjects to the search ad objects params
func (o *SearchAdObjectsParams) SetCompareObjects(compareObjects *bool) {
	o.CompareObjects = compareObjects
}

// WithExcludeSystemProperties adds the excludeSystemProperties to the search ad objects params
func (o *SearchAdObjectsParams) WithExcludeSystemProperties(excludeSystemProperties *bool) *SearchAdObjectsParams {
	o.SetExcludeSystemProperties(excludeSystemProperties)
	return o
}

// SetExcludeSystemProperties adds the excludeSystemProperties to the search ad objects params
func (o *SearchAdObjectsParams) SetExcludeSystemProperties(excludeSystemProperties *bool) {
	o.ExcludeSystemProperties = excludeSystemProperties
}

// WithFilter adds the filter to the search ad objects params
func (o *SearchAdObjectsParams) WithFilter(filter *string) *SearchAdObjectsParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the search ad objects params
func (o *SearchAdObjectsParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithNumObjects adds the numObjects to the search ad objects params
func (o *SearchAdObjectsParams) WithNumObjects(numObjects *uint32) *SearchAdObjectsParams {
	o.SetNumObjects(numObjects)
	return o
}

// SetNumObjects adds the numObjects to the search ad objects params
func (o *SearchAdObjectsParams) SetNumObjects(numObjects *uint32) {
	o.NumObjects = numObjects
}

// WithRecordOffset adds the recordOffset to the search ad objects params
func (o *SearchAdObjectsParams) WithRecordOffset(recordOffset *uint32) *SearchAdObjectsParams {
	o.SetRecordOffset(recordOffset)
	return o
}

// SetRecordOffset adds the recordOffset to the search ad objects params
func (o *SearchAdObjectsParams) SetRecordOffset(recordOffset *uint32) {
	o.RecordOffset = recordOffset
}

// WithRestoreTaskID adds the restoreTaskID to the search ad objects params
func (o *SearchAdObjectsParams) WithRestoreTaskID(restoreTaskID int64) *SearchAdObjectsParams {
	o.SetRestoreTaskID(restoreTaskID)
	return o
}

// SetRestoreTaskID adds the restoreTaskId to the search ad objects params
func (o *SearchAdObjectsParams) SetRestoreTaskID(restoreTaskID int64) {
	o.RestoreTaskID = restoreTaskID
}

// WithSearchBaseDn adds the searchBaseDn to the search ad objects params
func (o *SearchAdObjectsParams) WithSearchBaseDn(searchBaseDn *string) *SearchAdObjectsParams {
	o.SetSearchBaseDn(searchBaseDn)
	return o
}

// SetSearchBaseDn adds the searchBaseDn to the search ad objects params
func (o *SearchAdObjectsParams) SetSearchBaseDn(searchBaseDn *string) {
	o.SearchBaseDn = searchBaseDn
}

// WithSubtreeSearchScope adds the subtreeSearchScope to the search ad objects params
func (o *SearchAdObjectsParams) WithSubtreeSearchScope(subtreeSearchScope *bool) *SearchAdObjectsParams {
	o.SetSubtreeSearchScope(subtreeSearchScope)
	return o
}

// SetSubtreeSearchScope adds the subtreeSearchScope to the search ad objects params
func (o *SearchAdObjectsParams) SetSubtreeSearchScope(subtreeSearchScope *bool) {
	o.SubtreeSearchScope = subtreeSearchScope
}

// WriteToRequest writes these params to a swagger request
func (o *SearchAdObjectsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CompareObjects != nil {

		// query param compareObjects
		var qrCompareObjects bool

		if o.CompareObjects != nil {
			qrCompareObjects = *o.CompareObjects
		}
		qCompareObjects := swag.FormatBool(qrCompareObjects)
		if qCompareObjects != "" {

			if err := r.SetQueryParam("compareObjects", qCompareObjects); err != nil {
				return err
			}
		}
	}

	if o.ExcludeSystemProperties != nil {

		// query param excludeSystemProperties
		var qrExcludeSystemProperties bool

		if o.ExcludeSystemProperties != nil {
			qrExcludeSystemProperties = *o.ExcludeSystemProperties
		}
		qExcludeSystemProperties := swag.FormatBool(qrExcludeSystemProperties)
		if qExcludeSystemProperties != "" {

			if err := r.SetQueryParam("excludeSystemProperties", qExcludeSystemProperties); err != nil {
				return err
			}
		}
	}

	if o.Filter != nil {

		// query param filter
		var qrFilter string

		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {

			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}
	}

	if o.NumObjects != nil {

		// query param numObjects
		var qrNumObjects uint32

		if o.NumObjects != nil {
			qrNumObjects = *o.NumObjects
		}
		qNumObjects := swag.FormatUint32(qrNumObjects)
		if qNumObjects != "" {

			if err := r.SetQueryParam("numObjects", qNumObjects); err != nil {
				return err
			}
		}
	}

	if o.RecordOffset != nil {

		// query param recordOffset
		var qrRecordOffset uint32

		if o.RecordOffset != nil {
			qrRecordOffset = *o.RecordOffset
		}
		qRecordOffset := swag.FormatUint32(qrRecordOffset)
		if qRecordOffset != "" {

			if err := r.SetQueryParam("recordOffset", qRecordOffset); err != nil {
				return err
			}
		}
	}

	// query param restoreTaskId
	qrRestoreTaskID := o.RestoreTaskID
	qRestoreTaskID := swag.FormatInt64(qrRestoreTaskID)
	if qRestoreTaskID != "" {

		if err := r.SetQueryParam("restoreTaskId", qRestoreTaskID); err != nil {
			return err
		}
	}

	if o.SearchBaseDn != nil {

		// query param searchBaseDn
		var qrSearchBaseDn string

		if o.SearchBaseDn != nil {
			qrSearchBaseDn = *o.SearchBaseDn
		}
		qSearchBaseDn := qrSearchBaseDn
		if qSearchBaseDn != "" {

			if err := r.SetQueryParam("searchBaseDn", qSearchBaseDn); err != nil {
				return err
			}
		}
	}

	if o.SubtreeSearchScope != nil {

		// query param subtreeSearchScope
		var qrSubtreeSearchScope bool

		if o.SubtreeSearchScope != nil {
			qrSubtreeSearchScope = *o.SubtreeSearchScope
		}
		qSubtreeSearchScope := swag.FormatBool(qrSubtreeSearchScope)
		if qSubtreeSearchScope != "" {

			if err := r.SetQueryParam("subtreeSearchScope", qSubtreeSearchScope); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
