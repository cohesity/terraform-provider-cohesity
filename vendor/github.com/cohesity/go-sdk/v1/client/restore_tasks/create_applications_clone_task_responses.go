// Code generated by go-swagger; DO NOT EDIT.

package restore_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v1/models"
)

// CreateApplicationsCloneTaskReader is a Reader for the CreateApplicationsCloneTask structure.
type CreateApplicationsCloneTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateApplicationsCloneTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateApplicationsCloneTaskCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateApplicationsCloneTaskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateApplicationsCloneTaskCreated creates a CreateApplicationsCloneTaskCreated with default headers values
func NewCreateApplicationsCloneTaskCreated() *CreateApplicationsCloneTaskCreated {
	return &CreateApplicationsCloneTaskCreated{}
}

/*
CreateApplicationsCloneTaskCreated describes a response with status code 201, with default header values.

Success
*/
type CreateApplicationsCloneTaskCreated struct {
	Payload *models.RestoreTask
}

// IsSuccess returns true when this create applications clone task created response has a 2xx status code
func (o *CreateApplicationsCloneTaskCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create applications clone task created response has a 3xx status code
func (o *CreateApplicationsCloneTaskCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create applications clone task created response has a 4xx status code
func (o *CreateApplicationsCloneTaskCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create applications clone task created response has a 5xx status code
func (o *CreateApplicationsCloneTaskCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create applications clone task created response a status code equal to that given
func (o *CreateApplicationsCloneTaskCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create applications clone task created response
func (o *CreateApplicationsCloneTaskCreated) Code() int {
	return 201
}

func (o *CreateApplicationsCloneTaskCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/restore/applicationsClone][%d] createApplicationsCloneTaskCreated %s", 201, payload)
}

func (o *CreateApplicationsCloneTaskCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/restore/applicationsClone][%d] createApplicationsCloneTaskCreated %s", 201, payload)
}

func (o *CreateApplicationsCloneTaskCreated) GetPayload() *models.RestoreTask {
	return o.Payload
}

func (o *CreateApplicationsCloneTaskCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestoreTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateApplicationsCloneTaskDefault creates a CreateApplicationsCloneTaskDefault with default headers values
func NewCreateApplicationsCloneTaskDefault(code int) *CreateApplicationsCloneTaskDefault {
	return &CreateApplicationsCloneTaskDefault{
		_statusCode: code,
	}
}

/*
CreateApplicationsCloneTaskDefault describes a response with status code -1, with default header values.

Error
*/
type CreateApplicationsCloneTaskDefault struct {
	_statusCode int

	Payload *models.RequestError
}

// IsSuccess returns true when this create applications clone task default response has a 2xx status code
func (o *CreateApplicationsCloneTaskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create applications clone task default response has a 3xx status code
func (o *CreateApplicationsCloneTaskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create applications clone task default response has a 4xx status code
func (o *CreateApplicationsCloneTaskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create applications clone task default response has a 5xx status code
func (o *CreateApplicationsCloneTaskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create applications clone task default response a status code equal to that given
func (o *CreateApplicationsCloneTaskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create applications clone task default response
func (o *CreateApplicationsCloneTaskDefault) Code() int {
	return o._statusCode
}

func (o *CreateApplicationsCloneTaskDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/restore/applicationsClone][%d] CreateApplicationsCloneTask default %s", o._statusCode, payload)
}

func (o *CreateApplicationsCloneTaskDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/restore/applicationsClone][%d] CreateApplicationsCloneTask default %s", o._statusCode, payload)
}

func (o *CreateApplicationsCloneTaskDefault) GetPayload() *models.RequestError {
	return o.Payload
}

func (o *CreateApplicationsCloneTaskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
