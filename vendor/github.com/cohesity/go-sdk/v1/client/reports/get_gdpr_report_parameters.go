// Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetGdprReportParams creates a new GetGdprReportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetGdprReportParams() *GetGdprReportParams {
	return &GetGdprReportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetGdprReportParamsWithTimeout creates a new GetGdprReportParams object
// with the ability to set a timeout on a request.
func NewGetGdprReportParamsWithTimeout(timeout time.Duration) *GetGdprReportParams {
	return &GetGdprReportParams{
		timeout: timeout,
	}
}

// NewGetGdprReportParamsWithContext creates a new GetGdprReportParams object
// with the ability to set a context for a request.
func NewGetGdprReportParamsWithContext(ctx context.Context) *GetGdprReportParams {
	return &GetGdprReportParams{
		Context: ctx,
	}
}

// NewGetGdprReportParamsWithHTTPClient creates a new GetGdprReportParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetGdprReportParamsWithHTTPClient(client *http.Client) *GetGdprReportParams {
	return &GetGdprReportParams{
		HTTPClient: client,
	}
}

/*
GetGdprReportParams contains all the parameters to send to the API endpoint

	for the get gdpr report operation.

	Typically these are written to a http.Request.
*/
type GetGdprReportParams struct {

	/* AccessibleUsers.

	   Specifies the users for which to get the accessible objects.
	*/
	AccessibleUsers []string

	/* Actions.

	   Specifies the action for the audit logs.
	*/
	Actions []string

	/* EndTimeUsecs.

	     Specifies the end time for the audit logsas a Unix epoch Timestamp
	(in microseconds).

	     Format: int64
	*/
	EndTimeUsecs *int64

	/* ID.

	   Specifies the objects for which to get the gdpr information.
	*/
	ID []int64

	/* OutputFormat.

	     Specifies the format for the output such as 'csv' or 'json'.
	If not specified, the json format is returned.
	If 'csv' is specified, a comma-separated list with a heading
	row is returned.
	*/
	OutputFormat *string

	/* ParentSourceID.

	   Specifies the parent sources of objects for which to get info for.
	*/
	ParentSourceID []int64

	/* Search.

	   Specifies the search string for the audit logs.
	*/
	Search *string

	/* StartTimeUsecs.

	     Specifies the start time for the audit logs as a Unix epoch Timestamp
	(in microseconds).

	     Format: int64
	*/
	StartTimeUsecs *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get gdpr report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGdprReportParams) WithDefaults() *GetGdprReportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get gdpr report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetGdprReportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get gdpr report params
func (o *GetGdprReportParams) WithTimeout(timeout time.Duration) *GetGdprReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get gdpr report params
func (o *GetGdprReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get gdpr report params
func (o *GetGdprReportParams) WithContext(ctx context.Context) *GetGdprReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get gdpr report params
func (o *GetGdprReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get gdpr report params
func (o *GetGdprReportParams) WithHTTPClient(client *http.Client) *GetGdprReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get gdpr report params
func (o *GetGdprReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessibleUsers adds the accessibleUsers to the get gdpr report params
func (o *GetGdprReportParams) WithAccessibleUsers(accessibleUsers []string) *GetGdprReportParams {
	o.SetAccessibleUsers(accessibleUsers)
	return o
}

// SetAccessibleUsers adds the accessibleUsers to the get gdpr report params
func (o *GetGdprReportParams) SetAccessibleUsers(accessibleUsers []string) {
	o.AccessibleUsers = accessibleUsers
}

// WithActions adds the actions to the get gdpr report params
func (o *GetGdprReportParams) WithActions(actions []string) *GetGdprReportParams {
	o.SetActions(actions)
	return o
}

// SetActions adds the actions to the get gdpr report params
func (o *GetGdprReportParams) SetActions(actions []string) {
	o.Actions = actions
}

// WithEndTimeUsecs adds the endTimeUsecs to the get gdpr report params
func (o *GetGdprReportParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetGdprReportParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get gdpr report params
func (o *GetGdprReportParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithID adds the id to the get gdpr report params
func (o *GetGdprReportParams) WithID(id []int64) *GetGdprReportParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get gdpr report params
func (o *GetGdprReportParams) SetID(id []int64) {
	o.ID = id
}

// WithOutputFormat adds the outputFormat to the get gdpr report params
func (o *GetGdprReportParams) WithOutputFormat(outputFormat *string) *GetGdprReportParams {
	o.SetOutputFormat(outputFormat)
	return o
}

// SetOutputFormat adds the outputFormat to the get gdpr report params
func (o *GetGdprReportParams) SetOutputFormat(outputFormat *string) {
	o.OutputFormat = outputFormat
}

// WithParentSourceID adds the parentSourceID to the get gdpr report params
func (o *GetGdprReportParams) WithParentSourceID(parentSourceID []int64) *GetGdprReportParams {
	o.SetParentSourceID(parentSourceID)
	return o
}

// SetParentSourceID adds the parentSourceId to the get gdpr report params
func (o *GetGdprReportParams) SetParentSourceID(parentSourceID []int64) {
	o.ParentSourceID = parentSourceID
}

// WithSearch adds the search to the get gdpr report params
func (o *GetGdprReportParams) WithSearch(search *string) *GetGdprReportParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the get gdpr report params
func (o *GetGdprReportParams) SetSearch(search *string) {
	o.Search = search
}

// WithStartTimeUsecs adds the startTimeUsecs to the get gdpr report params
func (o *GetGdprReportParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetGdprReportParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get gdpr report params
func (o *GetGdprReportParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WriteToRequest writes these params to a swagger request
func (o *GetGdprReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessibleUsers != nil {

		// binding items for accessibleUsers
		joinedAccessibleUsers := o.bindParamAccessibleUsers(reg)

		// query array param accessibleUsers
		if err := r.SetQueryParam("accessibleUsers", joinedAccessibleUsers...); err != nil {
			return err
		}
	}

	if o.Actions != nil {

		// binding items for actions
		joinedActions := o.bindParamActions(reg)

		// query array param actions
		if err := r.SetQueryParam("actions", joinedActions...); err != nil {
			return err
		}
	}

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if o.OutputFormat != nil {

		// query param outputFormat
		var qrOutputFormat string

		if o.OutputFormat != nil {
			qrOutputFormat = *o.OutputFormat
		}
		qOutputFormat := qrOutputFormat
		if qOutputFormat != "" {

			if err := r.SetQueryParam("outputFormat", qOutputFormat); err != nil {
				return err
			}
		}
	}

	if o.ParentSourceID != nil {

		// binding items for parentSourceId
		joinedParentSourceID := o.bindParamParentSourceID(reg)

		// query array param parentSourceId
		if err := r.SetQueryParam("parentSourceId", joinedParentSourceID...); err != nil {
			return err
		}
	}

	if o.Search != nil {

		// query param search
		var qrSearch string

		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {

			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetGdprReport binds the parameter accessibleUsers
func (o *GetGdprReportParams) bindParamAccessibleUsers(formats strfmt.Registry) []string {
	accessibleUsersIR := o.AccessibleUsers

	var accessibleUsersIC []string
	for _, accessibleUsersIIR := range accessibleUsersIR { // explode []string

		accessibleUsersIIV := accessibleUsersIIR // string as string
		accessibleUsersIC = append(accessibleUsersIC, accessibleUsersIIV)
	}

	// items.CollectionFormat: ""
	accessibleUsersIS := swag.JoinByFormat(accessibleUsersIC, "")

	return accessibleUsersIS
}

// bindParamGetGdprReport binds the parameter actions
func (o *GetGdprReportParams) bindParamActions(formats strfmt.Registry) []string {
	actionsIR := o.Actions

	var actionsIC []string
	for _, actionsIIR := range actionsIR { // explode []string

		actionsIIV := actionsIIR // string as string
		actionsIC = append(actionsIC, actionsIIV)
	}

	// items.CollectionFormat: ""
	actionsIS := swag.JoinByFormat(actionsIC, "")

	return actionsIS
}

// bindParamGetGdprReport binds the parameter id
func (o *GetGdprReportParams) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []int64

		iDIIV := swag.FormatInt64(iDIIR) // int64 as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: ""
	iDIS := swag.JoinByFormat(iDIC, "")

	return iDIS
}

// bindParamGetGdprReport binds the parameter parentSourceId
func (o *GetGdprReportParams) bindParamParentSourceID(formats strfmt.Registry) []string {
	parentSourceIDIR := o.ParentSourceID

	var parentSourceIDIC []string
	for _, parentSourceIDIIR := range parentSourceIDIR { // explode []int64

		parentSourceIDIIV := swag.FormatInt64(parentSourceIDIIR) // int64 as string
		parentSourceIDIC = append(parentSourceIDIC, parentSourceIDIIV)
	}

	// items.CollectionFormat: ""
	parentSourceIDIS := swag.JoinByFormat(parentSourceIDIC, "")

	return parentSourceIDIS
}
