// Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProtectionSourcesJobRunsReportRequestParams creates a new GetProtectionSourcesJobRunsReportRequestParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProtectionSourcesJobRunsReportRequestParams() *GetProtectionSourcesJobRunsReportRequestParams {
	return &GetProtectionSourcesJobRunsReportRequestParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProtectionSourcesJobRunsReportRequestParamsWithTimeout creates a new GetProtectionSourcesJobRunsReportRequestParams object
// with the ability to set a timeout on a request.
func NewGetProtectionSourcesJobRunsReportRequestParamsWithTimeout(timeout time.Duration) *GetProtectionSourcesJobRunsReportRequestParams {
	return &GetProtectionSourcesJobRunsReportRequestParams{
		timeout: timeout,
	}
}

// NewGetProtectionSourcesJobRunsReportRequestParamsWithContext creates a new GetProtectionSourcesJobRunsReportRequestParams object
// with the ability to set a context for a request.
func NewGetProtectionSourcesJobRunsReportRequestParamsWithContext(ctx context.Context) *GetProtectionSourcesJobRunsReportRequestParams {
	return &GetProtectionSourcesJobRunsReportRequestParams{
		Context: ctx,
	}
}

// NewGetProtectionSourcesJobRunsReportRequestParamsWithHTTPClient creates a new GetProtectionSourcesJobRunsReportRequestParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProtectionSourcesJobRunsReportRequestParamsWithHTTPClient(client *http.Client) *GetProtectionSourcesJobRunsReportRequestParams {
	return &GetProtectionSourcesJobRunsReportRequestParams{
		HTTPClient: client,
	}
}

/*
GetProtectionSourcesJobRunsReportRequestParams contains all the parameters to send to the API endpoint

	for the get protection sources job runs report request operation.

	Typically these are written to a http.Request.
*/
type GetProtectionSourcesJobRunsReportRequestParams struct {

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* EndTimeUsecs.

	     Filter by a end time. Snapshots that ended before the
	specified time are returned.
	Specify the end time as a Unix epoch Timestamp (in microseconds).

	     Format: int64
	*/
	EndTimeUsecs *int64

	/* Environments.

	     Filter by a list of environment types such as 'kVMware', 'kView', etc.
	NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	*/
	Environments []string

	/* JobIds.

	     Filter by a list of Job ids. Snapshots for the specified
	Protection Jobs are listed.
	*/
	JobIds []int64

	/* OutputFormat.

	     Specifies the format for the output such as 'cvs' or 'json'.
	If not specified, the json format is returned.
	If 'csv' is specified, a comma-separated list with a heading
	row is returned.
	*/
	OutputFormat *string

	/* PageCount.

	     Specifies the number of Snapshots to return in the response for
	pagination purposes. Used in combination with the paginationCookie in
	the response to return multiple sets of Snapshots.

	     Format: int32
	*/
	PageCount *int32

	/* ProtectionSourceIds.

	     Filter by a list of leaf Protection Sources Objects (such as VMs).
	Snapshots of the specified Protection Source Objects are returned.
	*/
	ProtectionSourceIds []int64

	/* RunStatus.

	     Filter by a list of run statuses such as 'kRunning',
	'kSuccess', 'kFailure' etc.
	Snapshots of Job Runs with the specified run statuses are reported.
	'kSuccess' indicates that the Job Run was successful.
	'kRunning' indicates that the Job Run is currently running.
	'kWarning' indicates that the Job Run was successful but warnings were
	issued.
	'kCancelled' indicates that the Job Run was canceled.
	'kError' indicates the Job Run encountered an error and did not run to
	completion.
	*/
	RunStatus []string

	/* StartTimeUsecs.

	     Filter by a start time. Snapshots that started after the
	specified time are returned.
	Specify the start time as a Unix epoch Timestamp (in microseconds).

	     Format: int64
	*/
	StartTimeUsecs *int64

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get protection sources job runs report request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithDefaults() *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get protection sources job runs report request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithTimeout(timeout time.Duration) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithContext(ctx context.Context) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithHTTPClient(client *http.Client) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithEndTimeUsecs adds the endTimeUsecs to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithEnvironments adds the environments to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithEnvironments(environments []string) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetEnvironments(environments)
	return o
}

// SetEnvironments adds the environments to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetEnvironments(environments []string) {
	o.Environments = environments
}

// WithJobIds adds the jobIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithJobIds(jobIds []int64) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetJobIds(jobIds)
	return o
}

// SetJobIds adds the jobIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetJobIds(jobIds []int64) {
	o.JobIds = jobIds
}

// WithOutputFormat adds the outputFormat to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithOutputFormat(outputFormat *string) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetOutputFormat(outputFormat)
	return o
}

// SetOutputFormat adds the outputFormat to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetOutputFormat(outputFormat *string) {
	o.OutputFormat = outputFormat
}

// WithPageCount adds the pageCount to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithPageCount(pageCount *int32) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetPageCount(pageCount)
	return o
}

// SetPageCount adds the pageCount to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetPageCount(pageCount *int32) {
	o.PageCount = pageCount
}

// WithProtectionSourceIds adds the protectionSourceIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithProtectionSourceIds(protectionSourceIds []int64) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetProtectionSourceIds(protectionSourceIds)
	return o
}

// SetProtectionSourceIds adds the protectionSourceIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetProtectionSourceIds(protectionSourceIds []int64) {
	o.ProtectionSourceIds = protectionSourceIds
}

// WithRunStatus adds the runStatus to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithRunStatus(runStatus []string) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetRunStatus(runStatus)
	return o
}

// SetRunStatus adds the runStatus to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetRunStatus(runStatus []string) {
	o.RunStatus = runStatus
}

// WithStartTimeUsecs adds the startTimeUsecs to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WithTenantIds adds the tenantIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) WithTenantIds(tenantIds []string) *GetProtectionSourcesJobRunsReportRequestParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get protection sources job runs report request params
func (o *GetProtectionSourcesJobRunsReportRequestParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetProtectionSourcesJobRunsReportRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.Environments != nil {

		// binding items for environments
		joinedEnvironments := o.bindParamEnvironments(reg)

		// query array param environments
		if err := r.SetQueryParam("environments", joinedEnvironments...); err != nil {
			return err
		}
	}

	if o.JobIds != nil {

		// binding items for jobIds
		joinedJobIds := o.bindParamJobIds(reg)

		// query array param jobIds
		if err := r.SetQueryParam("jobIds", joinedJobIds...); err != nil {
			return err
		}
	}

	if o.OutputFormat != nil {

		// query param outputFormat
		var qrOutputFormat string

		if o.OutputFormat != nil {
			qrOutputFormat = *o.OutputFormat
		}
		qOutputFormat := qrOutputFormat
		if qOutputFormat != "" {

			if err := r.SetQueryParam("outputFormat", qOutputFormat); err != nil {
				return err
			}
		}
	}

	if o.PageCount != nil {

		// query param pageCount
		var qrPageCount int32

		if o.PageCount != nil {
			qrPageCount = *o.PageCount
		}
		qPageCount := swag.FormatInt32(qrPageCount)
		if qPageCount != "" {

			if err := r.SetQueryParam("pageCount", qPageCount); err != nil {
				return err
			}
		}
	}

	if o.ProtectionSourceIds != nil {

		// binding items for protectionSourceIds
		joinedProtectionSourceIds := o.bindParamProtectionSourceIds(reg)

		// query array param protectionSourceIds
		if err := r.SetQueryParam("protectionSourceIds", joinedProtectionSourceIds...); err != nil {
			return err
		}
	}

	if o.RunStatus != nil {

		// binding items for runStatus
		joinedRunStatus := o.bindParamRunStatus(reg)

		// query array param runStatus
		if err := r.SetQueryParam("runStatus", joinedRunStatus...); err != nil {
			return err
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetProtectionSourcesJobRunsReportRequest binds the parameter environments
func (o *GetProtectionSourcesJobRunsReportRequestParams) bindParamEnvironments(formats strfmt.Registry) []string {
	environmentsIR := o.Environments

	var environmentsIC []string
	for _, environmentsIIR := range environmentsIR { // explode []string

		environmentsIIV := environmentsIIR // string as string
		environmentsIC = append(environmentsIC, environmentsIIV)
	}

	// items.CollectionFormat: ""
	environmentsIS := swag.JoinByFormat(environmentsIC, "")

	return environmentsIS
}

// bindParamGetProtectionSourcesJobRunsReportRequest binds the parameter jobIds
func (o *GetProtectionSourcesJobRunsReportRequestParams) bindParamJobIds(formats strfmt.Registry) []string {
	jobIdsIR := o.JobIds

	var jobIdsIC []string
	for _, jobIdsIIR := range jobIdsIR { // explode []int64

		jobIdsIIV := swag.FormatInt64(jobIdsIIR) // int64 as string
		jobIdsIC = append(jobIdsIC, jobIdsIIV)
	}

	// items.CollectionFormat: ""
	jobIdsIS := swag.JoinByFormat(jobIdsIC, "")

	return jobIdsIS
}

// bindParamGetProtectionSourcesJobRunsReportRequest binds the parameter protectionSourceIds
func (o *GetProtectionSourcesJobRunsReportRequestParams) bindParamProtectionSourceIds(formats strfmt.Registry) []string {
	protectionSourceIdsIR := o.ProtectionSourceIds

	var protectionSourceIdsIC []string
	for _, protectionSourceIdsIIR := range protectionSourceIdsIR { // explode []int64

		protectionSourceIdsIIV := swag.FormatInt64(protectionSourceIdsIIR) // int64 as string
		protectionSourceIdsIC = append(protectionSourceIdsIC, protectionSourceIdsIIV)
	}

	// items.CollectionFormat: ""
	protectionSourceIdsIS := swag.JoinByFormat(protectionSourceIdsIC, "")

	return protectionSourceIdsIS
}

// bindParamGetProtectionSourcesJobRunsReportRequest binds the parameter runStatus
func (o *GetProtectionSourcesJobRunsReportRequestParams) bindParamRunStatus(formats strfmt.Registry) []string {
	runStatusIR := o.RunStatus

	var runStatusIC []string
	for _, runStatusIIR := range runStatusIR { // explode []string

		runStatusIIV := runStatusIIR // string as string
		runStatusIC = append(runStatusIC, runStatusIIV)
	}

	// items.CollectionFormat: ""
	runStatusIS := swag.JoinByFormat(runStatusIC, "")

	return runStatusIS
}

// bindParamGetProtectionSourcesJobRunsReportRequest binds the parameter tenantIds
func (o *GetProtectionSourcesJobRunsReportRequestParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
