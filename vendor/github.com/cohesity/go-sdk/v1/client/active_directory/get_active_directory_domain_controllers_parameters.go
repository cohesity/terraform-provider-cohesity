// Code generated by go-swagger; DO NOT EDIT.

package active_directory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetActiveDirectoryDomainControllersParams creates a new GetActiveDirectoryDomainControllersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetActiveDirectoryDomainControllersParams() *GetActiveDirectoryDomainControllersParams {
	return &GetActiveDirectoryDomainControllersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetActiveDirectoryDomainControllersParamsWithTimeout creates a new GetActiveDirectoryDomainControllersParams object
// with the ability to set a timeout on a request.
func NewGetActiveDirectoryDomainControllersParamsWithTimeout(timeout time.Duration) *GetActiveDirectoryDomainControllersParams {
	return &GetActiveDirectoryDomainControllersParams{
		timeout: timeout,
	}
}

// NewGetActiveDirectoryDomainControllersParamsWithContext creates a new GetActiveDirectoryDomainControllersParams object
// with the ability to set a context for a request.
func NewGetActiveDirectoryDomainControllersParamsWithContext(ctx context.Context) *GetActiveDirectoryDomainControllersParams {
	return &GetActiveDirectoryDomainControllersParams{
		Context: ctx,
	}
}

// NewGetActiveDirectoryDomainControllersParamsWithHTTPClient creates a new GetActiveDirectoryDomainControllersParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetActiveDirectoryDomainControllersParamsWithHTTPClient(client *http.Client) *GetActiveDirectoryDomainControllersParams {
	return &GetActiveDirectoryDomainControllersParams{
		HTTPClient: client,
	}
}

/*
GetActiveDirectoryDomainControllersParams contains all the parameters to send to the API endpoint

	for the get active directory domain controllers operation.

	Typically these are written to a http.Request.
*/
type GetActiveDirectoryDomainControllersParams struct {

	/* DomainName.

	   Specifies the domain name
	*/
	DomainName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get active directory domain controllers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActiveDirectoryDomainControllersParams) WithDefaults() *GetActiveDirectoryDomainControllersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get active directory domain controllers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetActiveDirectoryDomainControllersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) WithTimeout(timeout time.Duration) *GetActiveDirectoryDomainControllersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) WithContext(ctx context.Context) *GetActiveDirectoryDomainControllersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) WithHTTPClient(client *http.Client) *GetActiveDirectoryDomainControllersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomainName adds the domainName to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) WithDomainName(domainName *string) *GetActiveDirectoryDomainControllersParams {
	o.SetDomainName(domainName)
	return o
}

// SetDomainName adds the domainName to the get active directory domain controllers params
func (o *GetActiveDirectoryDomainControllersParams) SetDomainName(domainName *string) {
	o.DomainName = domainName
}

// WriteToRequest writes these params to a swagger request
func (o *GetActiveDirectoryDomainControllersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DomainName != nil {

		// query param domainName
		var qrDomainName string

		if o.DomainName != nil {
			qrDomainName = *o.DomainName
		}
		qDomainName := qrDomainName
		if qDomainName != "" {

			if err := r.SetQueryParam("domainName", qDomainName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
