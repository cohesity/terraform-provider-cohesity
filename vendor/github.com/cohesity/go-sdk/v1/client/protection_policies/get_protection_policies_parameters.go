// Code generated by go-swagger; DO NOT EDIT.

package protection_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProtectionPoliciesParams creates a new GetProtectionPoliciesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProtectionPoliciesParams() *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProtectionPoliciesParamsWithTimeout creates a new GetProtectionPoliciesParams object
// with the ability to set a timeout on a request.
func NewGetProtectionPoliciesParamsWithTimeout(timeout time.Duration) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		timeout: timeout,
	}
}

// NewGetProtectionPoliciesParamsWithContext creates a new GetProtectionPoliciesParams object
// with the ability to set a context for a request.
func NewGetProtectionPoliciesParamsWithContext(ctx context.Context) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		Context: ctx,
	}
}

// NewGetProtectionPoliciesParamsWithHTTPClient creates a new GetProtectionPoliciesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProtectionPoliciesParamsWithHTTPClient(client *http.Client) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		HTTPClient: client,
	}
}

/*
GetProtectionPoliciesParams contains all the parameters to send to the API endpoint

	for the get protection policies operation.

	Typically these are written to a http.Request.
*/
type GetProtectionPoliciesParams struct {

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* Environments.

	     Filter by Environment type such as 'kVMware', 'kView', etc.
	Only Policies protecting the specified environment type are returned.
	NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	*/
	Environments []string

	/* Ids.

	   Filter by a list of Protection Policy ids.
	*/
	Ids []string

	/* Names.

	   Filter by a list of Protection Policy names.
	*/
	Names []string

	/* Origin.

	     Specifies the origin of the protection policy.
	'kHelios' means a global policy which was created on Helios.
	'kLocal' means a local policy which was created on the cluster.
	*/
	Origin *string

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	/* Types.

	     Specifies the type of the protection policy.
	'kRegular' means a regular Protection Policy.
	'kRPO' means an RPO Protection Policy.
	*/
	Types []string

	/* VaultIds.

	     Filter by a list of Vault ids. Policies archiving to any of the
	specified vaults will be returned.
	*/
	VaultIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get protection policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionPoliciesParams) WithDefaults() *GetProtectionPoliciesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get protection policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionPoliciesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTimeout(timeout time.Duration) *GetProtectionPoliciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get protection policies params
func (o *GetProtectionPoliciesParams) WithContext(ctx context.Context) *GetProtectionPoliciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get protection policies params
func (o *GetProtectionPoliciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get protection policies params
func (o *GetProtectionPoliciesParams) WithHTTPClient(client *http.Client) *GetProtectionPoliciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get protection policies params
func (o *GetProtectionPoliciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get protection policies params
func (o *GetProtectionPoliciesParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetProtectionPoliciesParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get protection policies params
func (o *GetProtectionPoliciesParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithEnvironments adds the environments to the get protection policies params
func (o *GetProtectionPoliciesParams) WithEnvironments(environments []string) *GetProtectionPoliciesParams {
	o.SetEnvironments(environments)
	return o
}

// SetEnvironments adds the environments to the get protection policies params
func (o *GetProtectionPoliciesParams) SetEnvironments(environments []string) {
	o.Environments = environments
}

// WithIds adds the ids to the get protection policies params
func (o *GetProtectionPoliciesParams) WithIds(ids []string) *GetProtectionPoliciesParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get protection policies params
func (o *GetProtectionPoliciesParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithNames adds the names to the get protection policies params
func (o *GetProtectionPoliciesParams) WithNames(names []string) *GetProtectionPoliciesParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the get protection policies params
func (o *GetProtectionPoliciesParams) SetNames(names []string) {
	o.Names = names
}

// WithOrigin adds the origin to the get protection policies params
func (o *GetProtectionPoliciesParams) WithOrigin(origin *string) *GetProtectionPoliciesParams {
	o.SetOrigin(origin)
	return o
}

// SetOrigin adds the origin to the get protection policies params
func (o *GetProtectionPoliciesParams) SetOrigin(origin *string) {
	o.Origin = origin
}

// WithTenantIds adds the tenantIds to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTenantIds(tenantIds []string) *GetProtectionPoliciesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithTypes adds the types to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTypes(types []string) *GetProtectionPoliciesParams {
	o.SetTypes(types)
	return o
}

// SetTypes adds the types to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTypes(types []string) {
	o.Types = types
}

// WithVaultIds adds the vaultIds to the get protection policies params
func (o *GetProtectionPoliciesParams) WithVaultIds(vaultIds []int64) *GetProtectionPoliciesParams {
	o.SetVaultIds(vaultIds)
	return o
}

// SetVaultIds adds the vaultIds to the get protection policies params
func (o *GetProtectionPoliciesParams) SetVaultIds(vaultIds []int64) {
	o.VaultIds = vaultIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetProtectionPoliciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.Environments != nil {

		// binding items for environments
		joinedEnvironments := o.bindParamEnvironments(reg)

		// query array param environments
		if err := r.SetQueryParam("environments", joinedEnvironments...); err != nil {
			return err
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if o.Origin != nil {

		// query param origin
		var qrOrigin string

		if o.Origin != nil {
			qrOrigin = *o.Origin
		}
		qOrigin := qrOrigin
		if qOrigin != "" {

			if err := r.SetQueryParam("origin", qOrigin); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.Types != nil {

		// binding items for types
		joinedTypes := o.bindParamTypes(reg)

		// query array param types
		if err := r.SetQueryParam("types", joinedTypes...); err != nil {
			return err
		}
	}

	if o.VaultIds != nil {

		// binding items for vaultIds
		joinedVaultIds := o.bindParamVaultIds(reg)

		// query array param vaultIds
		if err := r.SetQueryParam("vaultIds", joinedVaultIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetProtectionPolicies binds the parameter environments
func (o *GetProtectionPoliciesParams) bindParamEnvironments(formats strfmt.Registry) []string {
	environmentsIR := o.Environments

	var environmentsIC []string
	for _, environmentsIIR := range environmentsIR { // explode []string

		environmentsIIV := environmentsIIR // string as string
		environmentsIC = append(environmentsIC, environmentsIIV)
	}

	// items.CollectionFormat: ""
	environmentsIS := swag.JoinByFormat(environmentsIC, "")

	return environmentsIS
}

// bindParamGetProtectionPolicies binds the parameter ids
func (o *GetProtectionPoliciesParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetProtectionPolicies binds the parameter names
func (o *GetProtectionPoliciesParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: ""
	namesIS := swag.JoinByFormat(namesIC, "")

	return namesIS
}

// bindParamGetProtectionPolicies binds the parameter tenantIds
func (o *GetProtectionPoliciesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}

// bindParamGetProtectionPolicies binds the parameter types
func (o *GetProtectionPoliciesParams) bindParamTypes(formats strfmt.Registry) []string {
	typesIR := o.Types

	var typesIC []string
	for _, typesIIR := range typesIR { // explode []string

		typesIIV := typesIIR // string as string
		typesIC = append(typesIC, typesIIV)
	}

	// items.CollectionFormat: ""
	typesIS := swag.JoinByFormat(typesIC, "")

	return typesIS
}

// bindParamGetProtectionPolicies binds the parameter vaultIds
func (o *GetProtectionPoliciesParams) bindParamVaultIds(formats strfmt.Registry) []string {
	vaultIdsIR := o.VaultIds

	var vaultIdsIC []string
	for _, vaultIdsIIR := range vaultIdsIR { // explode []int64

		vaultIdsIIV := swag.FormatInt64(vaultIdsIIR) // int64 as string
		vaultIdsIC = append(vaultIdsIC, vaultIdsIIV)
	}

	// items.CollectionFormat: ""
	vaultIdsIS := swag.JoinByFormat(vaultIdsIC, "")

	return vaultIdsIS
}
