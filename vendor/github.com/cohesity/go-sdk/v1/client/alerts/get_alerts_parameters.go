// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAlertsParams creates a new GetAlertsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAlertsParams() *GetAlertsParams {
	return &GetAlertsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAlertsParamsWithTimeout creates a new GetAlertsParams object
// with the ability to set a timeout on a request.
func NewGetAlertsParamsWithTimeout(timeout time.Duration) *GetAlertsParams {
	return &GetAlertsParams{
		timeout: timeout,
	}
}

// NewGetAlertsParamsWithContext creates a new GetAlertsParams object
// with the ability to set a context for a request.
func NewGetAlertsParamsWithContext(ctx context.Context) *GetAlertsParams {
	return &GetAlertsParams{
		Context: ctx,
	}
}

// NewGetAlertsParamsWithHTTPClient creates a new GetAlertsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAlertsParamsWithHTTPClient(client *http.Client) *GetAlertsParams {
	return &GetAlertsParams{
		HTTPClient: client,
	}
}

/*
GetAlertsParams contains all the parameters to send to the API endpoint

	for the get alerts operation.

	Typically these are written to a http.Request.
*/
type GetAlertsParams struct {

	/* AlertCategoryList.

	   Specifies list of Alert Categories.
	*/
	AlertCategoryList []string

	/* AlertIDList.

	   Specifies list of Alert ids to filter alerts by.
	*/
	AlertIDList []string

	/* AlertName.

	   Specifies Alert name to filter alerts by.
	*/
	AlertName *string

	/* AlertSeverityList.

	   Specifies list of Alert severity to filter alerts by.
	*/
	AlertSeverityList []string

	/* AlertStateList.

	   Specifies list of Alert States to filter alerts by.
	*/
	AlertStateList []string

	/* AlertTypeBucketList.

	     Specifies the list of Alert type bucket.
	Specifies the Alert type bucket.
	kHardware - Alerts related to hardware on which Cohesity software is running.
	kSoftware - Alerts which are related to software components.
	kDataService - Alerts related to data services.
	kMaintenance - Alerts relates to maintenance activities.
	*/
	AlertTypeBucketList []string

	/* AlertTypeList.

	   Specifies list of Alert Types to filter alerts by.
	*/
	AlertTypeList []int32

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* EndDateUsecs.

	   Specifies end time Unix epoch time in microseconds to filter alerts by.

	   Format: int64
	*/
	EndDateUsecs *int64

	/* MaxAlerts.

	     Specifies the number of returned Alerts to be returned. The newest Alerts
	are returned.

	     Format: int32
	*/
	MaxAlerts int32

	/* PropertyKey.

	   Specifies name of the property to filter alerts by.
	*/
	PropertyKey *string

	/* PropertyValue.

	   Specifies value of the property to filter alerts by.
	*/
	PropertyValue *string

	/* ResolutionIDList.

	   Specifies alert resolution ids to filter alerts by.
	*/
	ResolutionIDList []int64

	/* StartDateUsecs.

	   Specifies start time Unix epoch time in microseconds to filter alerts by.

	   Format: int64
	*/
	StartDateUsecs *int64

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get alerts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAlertsParams) WithDefaults() *GetAlertsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get alerts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAlertsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get alerts params
func (o *GetAlertsParams) WithTimeout(timeout time.Duration) *GetAlertsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get alerts params
func (o *GetAlertsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get alerts params
func (o *GetAlertsParams) WithContext(ctx context.Context) *GetAlertsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get alerts params
func (o *GetAlertsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get alerts params
func (o *GetAlertsParams) WithHTTPClient(client *http.Client) *GetAlertsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get alerts params
func (o *GetAlertsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAlertCategoryList adds the alertCategoryList to the get alerts params
func (o *GetAlertsParams) WithAlertCategoryList(alertCategoryList []string) *GetAlertsParams {
	o.SetAlertCategoryList(alertCategoryList)
	return o
}

// SetAlertCategoryList adds the alertCategoryList to the get alerts params
func (o *GetAlertsParams) SetAlertCategoryList(alertCategoryList []string) {
	o.AlertCategoryList = alertCategoryList
}

// WithAlertIDList adds the alertIDList to the get alerts params
func (o *GetAlertsParams) WithAlertIDList(alertIDList []string) *GetAlertsParams {
	o.SetAlertIDList(alertIDList)
	return o
}

// SetAlertIDList adds the alertIdList to the get alerts params
func (o *GetAlertsParams) SetAlertIDList(alertIDList []string) {
	o.AlertIDList = alertIDList
}

// WithAlertName adds the alertName to the get alerts params
func (o *GetAlertsParams) WithAlertName(alertName *string) *GetAlertsParams {
	o.SetAlertName(alertName)
	return o
}

// SetAlertName adds the alertName to the get alerts params
func (o *GetAlertsParams) SetAlertName(alertName *string) {
	o.AlertName = alertName
}

// WithAlertSeverityList adds the alertSeverityList to the get alerts params
func (o *GetAlertsParams) WithAlertSeverityList(alertSeverityList []string) *GetAlertsParams {
	o.SetAlertSeverityList(alertSeverityList)
	return o
}

// SetAlertSeverityList adds the alertSeverityList to the get alerts params
func (o *GetAlertsParams) SetAlertSeverityList(alertSeverityList []string) {
	o.AlertSeverityList = alertSeverityList
}

// WithAlertStateList adds the alertStateList to the get alerts params
func (o *GetAlertsParams) WithAlertStateList(alertStateList []string) *GetAlertsParams {
	o.SetAlertStateList(alertStateList)
	return o
}

// SetAlertStateList adds the alertStateList to the get alerts params
func (o *GetAlertsParams) SetAlertStateList(alertStateList []string) {
	o.AlertStateList = alertStateList
}

// WithAlertTypeBucketList adds the alertTypeBucketList to the get alerts params
func (o *GetAlertsParams) WithAlertTypeBucketList(alertTypeBucketList []string) *GetAlertsParams {
	o.SetAlertTypeBucketList(alertTypeBucketList)
	return o
}

// SetAlertTypeBucketList adds the alertTypeBucketList to the get alerts params
func (o *GetAlertsParams) SetAlertTypeBucketList(alertTypeBucketList []string) {
	o.AlertTypeBucketList = alertTypeBucketList
}

// WithAlertTypeList adds the alertTypeList to the get alerts params
func (o *GetAlertsParams) WithAlertTypeList(alertTypeList []int32) *GetAlertsParams {
	o.SetAlertTypeList(alertTypeList)
	return o
}

// SetAlertTypeList adds the alertTypeList to the get alerts params
func (o *GetAlertsParams) SetAlertTypeList(alertTypeList []int32) {
	o.AlertTypeList = alertTypeList
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get alerts params
func (o *GetAlertsParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetAlertsParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get alerts params
func (o *GetAlertsParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithEndDateUsecs adds the endDateUsecs to the get alerts params
func (o *GetAlertsParams) WithEndDateUsecs(endDateUsecs *int64) *GetAlertsParams {
	o.SetEndDateUsecs(endDateUsecs)
	return o
}

// SetEndDateUsecs adds the endDateUsecs to the get alerts params
func (o *GetAlertsParams) SetEndDateUsecs(endDateUsecs *int64) {
	o.EndDateUsecs = endDateUsecs
}

// WithMaxAlerts adds the maxAlerts to the get alerts params
func (o *GetAlertsParams) WithMaxAlerts(maxAlerts int32) *GetAlertsParams {
	o.SetMaxAlerts(maxAlerts)
	return o
}

// SetMaxAlerts adds the maxAlerts to the get alerts params
func (o *GetAlertsParams) SetMaxAlerts(maxAlerts int32) {
	o.MaxAlerts = maxAlerts
}

// WithPropertyKey adds the propertyKey to the get alerts params
func (o *GetAlertsParams) WithPropertyKey(propertyKey *string) *GetAlertsParams {
	o.SetPropertyKey(propertyKey)
	return o
}

// SetPropertyKey adds the propertyKey to the get alerts params
func (o *GetAlertsParams) SetPropertyKey(propertyKey *string) {
	o.PropertyKey = propertyKey
}

// WithPropertyValue adds the propertyValue to the get alerts params
func (o *GetAlertsParams) WithPropertyValue(propertyValue *string) *GetAlertsParams {
	o.SetPropertyValue(propertyValue)
	return o
}

// SetPropertyValue adds the propertyValue to the get alerts params
func (o *GetAlertsParams) SetPropertyValue(propertyValue *string) {
	o.PropertyValue = propertyValue
}

// WithResolutionIDList adds the resolutionIDList to the get alerts params
func (o *GetAlertsParams) WithResolutionIDList(resolutionIDList []int64) *GetAlertsParams {
	o.SetResolutionIDList(resolutionIDList)
	return o
}

// SetResolutionIDList adds the resolutionIdList to the get alerts params
func (o *GetAlertsParams) SetResolutionIDList(resolutionIDList []int64) {
	o.ResolutionIDList = resolutionIDList
}

// WithStartDateUsecs adds the startDateUsecs to the get alerts params
func (o *GetAlertsParams) WithStartDateUsecs(startDateUsecs *int64) *GetAlertsParams {
	o.SetStartDateUsecs(startDateUsecs)
	return o
}

// SetStartDateUsecs adds the startDateUsecs to the get alerts params
func (o *GetAlertsParams) SetStartDateUsecs(startDateUsecs *int64) {
	o.StartDateUsecs = startDateUsecs
}

// WithTenantIds adds the tenantIds to the get alerts params
func (o *GetAlertsParams) WithTenantIds(tenantIds []string) *GetAlertsParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get alerts params
func (o *GetAlertsParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetAlertsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AlertCategoryList != nil {

		// binding items for alertCategoryList
		joinedAlertCategoryList := o.bindParamAlertCategoryList(reg)

		// query array param alertCategoryList
		if err := r.SetQueryParam("alertCategoryList", joinedAlertCategoryList...); err != nil {
			return err
		}
	}

	if o.AlertIDList != nil {

		// binding items for alertIdList
		joinedAlertIDList := o.bindParamAlertIDList(reg)

		// query array param alertIdList
		if err := r.SetQueryParam("alertIdList", joinedAlertIDList...); err != nil {
			return err
		}
	}

	if o.AlertName != nil {

		// query param alertName
		var qrAlertName string

		if o.AlertName != nil {
			qrAlertName = *o.AlertName
		}
		qAlertName := qrAlertName
		if qAlertName != "" {

			if err := r.SetQueryParam("alertName", qAlertName); err != nil {
				return err
			}
		}
	}

	if o.AlertSeverityList != nil {

		// binding items for alertSeverityList
		joinedAlertSeverityList := o.bindParamAlertSeverityList(reg)

		// query array param alertSeverityList
		if err := r.SetQueryParam("alertSeverityList", joinedAlertSeverityList...); err != nil {
			return err
		}
	}

	if o.AlertStateList != nil {

		// binding items for alertStateList
		joinedAlertStateList := o.bindParamAlertStateList(reg)

		// query array param alertStateList
		if err := r.SetQueryParam("alertStateList", joinedAlertStateList...); err != nil {
			return err
		}
	}

	if o.AlertTypeBucketList != nil {

		// binding items for alertTypeBucketList
		joinedAlertTypeBucketList := o.bindParamAlertTypeBucketList(reg)

		// query array param alertTypeBucketList
		if err := r.SetQueryParam("alertTypeBucketList", joinedAlertTypeBucketList...); err != nil {
			return err
		}
	}

	if o.AlertTypeList != nil {

		// binding items for alertTypeList
		joinedAlertTypeList := o.bindParamAlertTypeList(reg)

		// query array param alertTypeList
		if err := r.SetQueryParam("alertTypeList", joinedAlertTypeList...); err != nil {
			return err
		}
	}

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.EndDateUsecs != nil {

		// query param endDateUsecs
		var qrEndDateUsecs int64

		if o.EndDateUsecs != nil {
			qrEndDateUsecs = *o.EndDateUsecs
		}
		qEndDateUsecs := swag.FormatInt64(qrEndDateUsecs)
		if qEndDateUsecs != "" {

			if err := r.SetQueryParam("endDateUsecs", qEndDateUsecs); err != nil {
				return err
			}
		}
	}

	// query param maxAlerts
	qrMaxAlerts := o.MaxAlerts
	qMaxAlerts := swag.FormatInt32(qrMaxAlerts)
	if qMaxAlerts != "" {

		if err := r.SetQueryParam("maxAlerts", qMaxAlerts); err != nil {
			return err
		}
	}

	if o.PropertyKey != nil {

		// query param propertyKey
		var qrPropertyKey string

		if o.PropertyKey != nil {
			qrPropertyKey = *o.PropertyKey
		}
		qPropertyKey := qrPropertyKey
		if qPropertyKey != "" {

			if err := r.SetQueryParam("propertyKey", qPropertyKey); err != nil {
				return err
			}
		}
	}

	if o.PropertyValue != nil {

		// query param propertyValue
		var qrPropertyValue string

		if o.PropertyValue != nil {
			qrPropertyValue = *o.PropertyValue
		}
		qPropertyValue := qrPropertyValue
		if qPropertyValue != "" {

			if err := r.SetQueryParam("propertyValue", qPropertyValue); err != nil {
				return err
			}
		}
	}

	if o.ResolutionIDList != nil {

		// binding items for resolutionIdList
		joinedResolutionIDList := o.bindParamResolutionIDList(reg)

		// query array param resolutionIdList
		if err := r.SetQueryParam("resolutionIdList", joinedResolutionIDList...); err != nil {
			return err
		}
	}

	if o.StartDateUsecs != nil {

		// query param startDateUsecs
		var qrStartDateUsecs int64

		if o.StartDateUsecs != nil {
			qrStartDateUsecs = *o.StartDateUsecs
		}
		qStartDateUsecs := swag.FormatInt64(qrStartDateUsecs)
		if qStartDateUsecs != "" {

			if err := r.SetQueryParam("startDateUsecs", qStartDateUsecs); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetAlerts binds the parameter alertCategoryList
func (o *GetAlertsParams) bindParamAlertCategoryList(formats strfmt.Registry) []string {
	alertCategoryListIR := o.AlertCategoryList

	var alertCategoryListIC []string
	for _, alertCategoryListIIR := range alertCategoryListIR { // explode []string

		alertCategoryListIIV := alertCategoryListIIR // string as string
		alertCategoryListIC = append(alertCategoryListIC, alertCategoryListIIV)
	}

	// items.CollectionFormat: ""
	alertCategoryListIS := swag.JoinByFormat(alertCategoryListIC, "")

	return alertCategoryListIS
}

// bindParamGetAlerts binds the parameter alertIdList
func (o *GetAlertsParams) bindParamAlertIDList(formats strfmt.Registry) []string {
	alertIDListIR := o.AlertIDList

	var alertIDListIC []string
	for _, alertIDListIIR := range alertIDListIR { // explode []string

		alertIDListIIV := alertIDListIIR // string as string
		alertIDListIC = append(alertIDListIC, alertIDListIIV)
	}

	// items.CollectionFormat: ""
	alertIDListIS := swag.JoinByFormat(alertIDListIC, "")

	return alertIDListIS
}

// bindParamGetAlerts binds the parameter alertSeverityList
func (o *GetAlertsParams) bindParamAlertSeverityList(formats strfmt.Registry) []string {
	alertSeverityListIR := o.AlertSeverityList

	var alertSeverityListIC []string
	for _, alertSeverityListIIR := range alertSeverityListIR { // explode []string

		alertSeverityListIIV := alertSeverityListIIR // string as string
		alertSeverityListIC = append(alertSeverityListIC, alertSeverityListIIV)
	}

	// items.CollectionFormat: ""
	alertSeverityListIS := swag.JoinByFormat(alertSeverityListIC, "")

	return alertSeverityListIS
}

// bindParamGetAlerts binds the parameter alertStateList
func (o *GetAlertsParams) bindParamAlertStateList(formats strfmt.Registry) []string {
	alertStateListIR := o.AlertStateList

	var alertStateListIC []string
	for _, alertStateListIIR := range alertStateListIR { // explode []string

		alertStateListIIV := alertStateListIIR // string as string
		alertStateListIC = append(alertStateListIC, alertStateListIIV)
	}

	// items.CollectionFormat: ""
	alertStateListIS := swag.JoinByFormat(alertStateListIC, "")

	return alertStateListIS
}

// bindParamGetAlerts binds the parameter alertTypeBucketList
func (o *GetAlertsParams) bindParamAlertTypeBucketList(formats strfmt.Registry) []string {
	alertTypeBucketListIR := o.AlertTypeBucketList

	var alertTypeBucketListIC []string
	for _, alertTypeBucketListIIR := range alertTypeBucketListIR { // explode []string

		alertTypeBucketListIIV := alertTypeBucketListIIR // string as string
		alertTypeBucketListIC = append(alertTypeBucketListIC, alertTypeBucketListIIV)
	}

	// items.CollectionFormat: ""
	alertTypeBucketListIS := swag.JoinByFormat(alertTypeBucketListIC, "")

	return alertTypeBucketListIS
}

// bindParamGetAlerts binds the parameter alertTypeList
func (o *GetAlertsParams) bindParamAlertTypeList(formats strfmt.Registry) []string {
	alertTypeListIR := o.AlertTypeList

	var alertTypeListIC []string
	for _, alertTypeListIIR := range alertTypeListIR { // explode []int32

		alertTypeListIIV := swag.FormatInt32(alertTypeListIIR) // int32 as string
		alertTypeListIC = append(alertTypeListIC, alertTypeListIIV)
	}

	// items.CollectionFormat: ""
	alertTypeListIS := swag.JoinByFormat(alertTypeListIC, "")

	return alertTypeListIS
}

// bindParamGetAlerts binds the parameter resolutionIdList
func (o *GetAlertsParams) bindParamResolutionIDList(formats strfmt.Registry) []string {
	resolutionIDListIR := o.ResolutionIDList

	var resolutionIDListIC []string
	for _, resolutionIDListIIR := range resolutionIDListIR { // explode []int64

		resolutionIDListIIV := swag.FormatInt64(resolutionIDListIIR) // int64 as string
		resolutionIDListIC = append(resolutionIDListIC, resolutionIDListIIV)
	}

	// items.CollectionFormat: ""
	resolutionIDListIS := swag.JoinByFormat(resolutionIDListIC, "")

	return resolutionIDListIS
}

// bindParamGetAlerts binds the parameter tenantIds
func (o *GetAlertsParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
