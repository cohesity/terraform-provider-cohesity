// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v1/models"
)

// GetResolutionsReader is a Reader for the GetResolutions structure.
type GetResolutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResolutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResolutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetResolutionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetResolutionsOK creates a GetResolutionsOK with default headers values
func NewGetResolutionsOK() *GetResolutionsOK {
	return &GetResolutionsOK{}
}

/*
GetResolutionsOK describes a response with status code 200, with default header values.

Success
*/
type GetResolutionsOK struct {
	Payload []*models.AlertResolution
}

// IsSuccess returns true when this get resolutions o k response has a 2xx status code
func (o *GetResolutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resolutions o k response has a 3xx status code
func (o *GetResolutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resolutions o k response has a 4xx status code
func (o *GetResolutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resolutions o k response has a 5xx status code
func (o *GetResolutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resolutions o k response a status code equal to that given
func (o *GetResolutionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resolutions o k response
func (o *GetResolutionsOK) Code() int {
	return 200
}

func (o *GetResolutionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/alertResolutions][%d] getResolutionsOK %s", 200, payload)
}

func (o *GetResolutionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/alertResolutions][%d] getResolutionsOK %s", 200, payload)
}

func (o *GetResolutionsOK) GetPayload() []*models.AlertResolution {
	return o.Payload
}

func (o *GetResolutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResolutionsDefault creates a GetResolutionsDefault with default headers values
func NewGetResolutionsDefault(code int) *GetResolutionsDefault {
	return &GetResolutionsDefault{
		_statusCode: code,
	}
}

/*
GetResolutionsDefault describes a response with status code -1, with default header values.

Error
*/
type GetResolutionsDefault struct {
	_statusCode int

	Payload *models.RequestError
}

// IsSuccess returns true when this get resolutions default response has a 2xx status code
func (o *GetResolutionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get resolutions default response has a 3xx status code
func (o *GetResolutionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get resolutions default response has a 4xx status code
func (o *GetResolutionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get resolutions default response has a 5xx status code
func (o *GetResolutionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get resolutions default response a status code equal to that given
func (o *GetResolutionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get resolutions default response
func (o *GetResolutionsDefault) Code() int {
	return o._statusCode
}

func (o *GetResolutionsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/alertResolutions][%d] GetResolutions default %s", o._statusCode, payload)
}

func (o *GetResolutionsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/alertResolutions][%d] GetResolutions default %s", o._statusCode, payload)
}

func (o *GetResolutionsDefault) GetPayload() *models.RequestError {
	return o.Payload
}

func (o *GetResolutionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
