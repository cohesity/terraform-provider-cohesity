// Code generated by go-swagger; DO NOT EDIT.

package backup_jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetBackupJobsSummaryParams creates a new GetBackupJobsSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBackupJobsSummaryParams() *GetBackupJobsSummaryParams {
	return &GetBackupJobsSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBackupJobsSummaryParamsWithTimeout creates a new GetBackupJobsSummaryParams object
// with the ability to set a timeout on a request.
func NewGetBackupJobsSummaryParamsWithTimeout(timeout time.Duration) *GetBackupJobsSummaryParams {
	return &GetBackupJobsSummaryParams{
		timeout: timeout,
	}
}

// NewGetBackupJobsSummaryParamsWithContext creates a new GetBackupJobsSummaryParams object
// with the ability to set a context for a request.
func NewGetBackupJobsSummaryParamsWithContext(ctx context.Context) *GetBackupJobsSummaryParams {
	return &GetBackupJobsSummaryParams{
		Context: ctx,
	}
}

// NewGetBackupJobsSummaryParamsWithHTTPClient creates a new GetBackupJobsSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBackupJobsSummaryParamsWithHTTPClient(client *http.Client) *GetBackupJobsSummaryParams {
	return &GetBackupJobsSummaryParams{
		HTTPClient: client,
	}
}

/*
GetBackupJobsSummaryParams contains all the parameters to send to the API endpoint

	for the get backup jobs summary operation.

	Typically these are written to a http.Request.
*/
type GetBackupJobsSummaryParams struct {

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* EndTimeUsecs.

	   EndTimeUsecs is the end time in usecs for which to fetch job summary.

	   Format: int64
	*/
	EndTimeUsecs *int64

	/* EnvTypes.

	   EnvTypes are the types of backup jobs to return e.g. VMWare, View etc.
	*/
	EnvTypes []int64

	/* ExcludeTasks.

	     ExcludeTasks is the parameter to exclude tasks from the last run. This will
	make the JSON lighter weight.
	*/
	ExcludeTasks *bool

	/* Ids.

	   Ids are the ids of the backup jobs to filter.
	*/
	Ids []int64

	/* IncludeJobsWithoutRun.

	     IncludeJobsWithoutRun specifies whether to include jobs without any run.
	Aggregate metrics will not exist for jobs without any run.
	*/
	IncludeJobsWithoutRun *bool

	/* IncludeMissingSourceIds.

	     If true, then the missing sources entity ids will also be returned.
	Entities could be missing due to deletion.
	*/
	IncludeMissingSourceIds *bool

	/* IncludeRpoSnapshots.

	     If true, then the Protected Objects protected by RPO policies will also
	be returned.
	*/
	IncludeRpoSnapshots *bool

	/* IsActive.

	     IsActive is the parameter to filter active/inactive jobs. If it is
	specified as true, only active jobs are returned. If it is specified as
	false, only inactive jobs are returned.
	*/
	IsActive *bool

	/* IsDeleted.

	     IsDeleted is the parameter to filter deleted/non-deleted jobs. If it is
	specified as true, only deleted jobs are returned. If it is specified as
	false, only non-deleted jobs are returned.
	*/
	IsDeleted *bool

	/* IsLastRunSLAViolated.

	     IsLastRunSlaViolated is the parameter to filter the Protection Jobs based
	on the SLA violation status of the last Protection Run.
	*/
	IsLastRunSLAViolated *bool

	/* MaxRuns.

	     MaxRuns specifies the maximum number of job runs. If specified, only the
	jobs only the jobs that have run at most MaxRuns times in the provided
	time range will be returned.

	     Format: int64
	*/
	MaxRuns *int64

	/* MinRuns.

	     MinRuns specifies the minimum number of job runs. If specified, only the
	jobs that have run at least MinRuns times in the provided time
	range will be returned.

	     Format: int64
	*/
	MinRuns *int64

	/* Names.

	   Names are the prefixes that can match backup job names as a prefix.
	*/
	Names []string

	/* OnlyReturnBasicSummary.

	     OnlyReturnBasicSummary specifies whether to only return job descriptions
	without any aggregate metrics.
	*/
	OnlyReturnBasicSummary *bool

	/* OnlyReturnDataMigrationJobs.

	     OnlyReturnDataMigrationJobs specifies if only data migration jobs should be
	returned. If not set, no data migration job will be returned.
	*/
	OnlyReturnDataMigrationJobs *bool

	/* OutputFormat.

	     OutputFormat is the Output format for the output. If it is not specified,
	default is json.
	*/
	OutputFormat *string

	/* PolicyIds.

	   PolicyIds are the Ids of policies to filter by.
	*/
	PolicyIds []string

	/* PruneExclusionSources.

	     If true, the list of exclusion sources will be omitted from the response.
	This can be used to improve performance when the exclusion sources are
	not needed.
	*/
	PruneExclusionSources *bool

	/* SourceIds.

	   SourceIds specifies the Ids of parent sources of the backup jobs to filter.
	*/
	SourceIds []int64

	/* StartTimeUsecs.

	   StartTimeUsecs is the start time in usecs for which to fetch job summary.

	   Format: int64
	*/
	StartTimeUsecs *int64

	/* Statuses.

	     Statuses are the statuses of backup jobs to filter. If not specified, jobs
	in all statuses are returned.
	*/
	Statuses []string

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	/* ViewBoxIds.

	   ViewBoxIds are the view box ids to filter by.
	*/
	ViewBoxIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get backup jobs summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBackupJobsSummaryParams) WithDefaults() *GetBackupJobsSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get backup jobs summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBackupJobsSummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithTimeout(timeout time.Duration) *GetBackupJobsSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithContext(ctx context.Context) *GetBackupJobsSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithHTTPClient(client *http.Client) *GetBackupJobsSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetBackupJobsSummaryParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithEndTimeUsecs adds the endTimeUsecs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetBackupJobsSummaryParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithEnvTypes adds the envTypes to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithEnvTypes(envTypes []int64) *GetBackupJobsSummaryParams {
	o.SetEnvTypes(envTypes)
	return o
}

// SetEnvTypes adds the envTypes to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetEnvTypes(envTypes []int64) {
	o.EnvTypes = envTypes
}

// WithExcludeTasks adds the excludeTasks to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithExcludeTasks(excludeTasks *bool) *GetBackupJobsSummaryParams {
	o.SetExcludeTasks(excludeTasks)
	return o
}

// SetExcludeTasks adds the excludeTasks to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetExcludeTasks(excludeTasks *bool) {
	o.ExcludeTasks = excludeTasks
}

// WithIds adds the ids to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIds(ids []int64) *GetBackupJobsSummaryParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIds(ids []int64) {
	o.Ids = ids
}

// WithIncludeJobsWithoutRun adds the includeJobsWithoutRun to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIncludeJobsWithoutRun(includeJobsWithoutRun *bool) *GetBackupJobsSummaryParams {
	o.SetIncludeJobsWithoutRun(includeJobsWithoutRun)
	return o
}

// SetIncludeJobsWithoutRun adds the includeJobsWithoutRun to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIncludeJobsWithoutRun(includeJobsWithoutRun *bool) {
	o.IncludeJobsWithoutRun = includeJobsWithoutRun
}

// WithIncludeMissingSourceIds adds the includeMissingSourceIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIncludeMissingSourceIds(includeMissingSourceIds *bool) *GetBackupJobsSummaryParams {
	o.SetIncludeMissingSourceIds(includeMissingSourceIds)
	return o
}

// SetIncludeMissingSourceIds adds the includeMissingSourceIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIncludeMissingSourceIds(includeMissingSourceIds *bool) {
	o.IncludeMissingSourceIds = includeMissingSourceIds
}

// WithIncludeRpoSnapshots adds the includeRpoSnapshots to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIncludeRpoSnapshots(includeRpoSnapshots *bool) *GetBackupJobsSummaryParams {
	o.SetIncludeRpoSnapshots(includeRpoSnapshots)
	return o
}

// SetIncludeRpoSnapshots adds the includeRpoSnapshots to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIncludeRpoSnapshots(includeRpoSnapshots *bool) {
	o.IncludeRpoSnapshots = includeRpoSnapshots
}

// WithIsActive adds the isActive to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIsActive(isActive *bool) *GetBackupJobsSummaryParams {
	o.SetIsActive(isActive)
	return o
}

// SetIsActive adds the isActive to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIsActive(isActive *bool) {
	o.IsActive = isActive
}

// WithIsDeleted adds the isDeleted to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIsDeleted(isDeleted *bool) *GetBackupJobsSummaryParams {
	o.SetIsDeleted(isDeleted)
	return o
}

// SetIsDeleted adds the isDeleted to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIsDeleted(isDeleted *bool) {
	o.IsDeleted = isDeleted
}

// WithIsLastRunSLAViolated adds the isLastRunSLAViolated to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithIsLastRunSLAViolated(isLastRunSLAViolated *bool) *GetBackupJobsSummaryParams {
	o.SetIsLastRunSLAViolated(isLastRunSLAViolated)
	return o
}

// SetIsLastRunSLAViolated adds the isLastRunSlaViolated to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetIsLastRunSLAViolated(isLastRunSLAViolated *bool) {
	o.IsLastRunSLAViolated = isLastRunSLAViolated
}

// WithMaxRuns adds the maxRuns to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithMaxRuns(maxRuns *int64) *GetBackupJobsSummaryParams {
	o.SetMaxRuns(maxRuns)
	return o
}

// SetMaxRuns adds the maxRuns to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetMaxRuns(maxRuns *int64) {
	o.MaxRuns = maxRuns
}

// WithMinRuns adds the minRuns to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithMinRuns(minRuns *int64) *GetBackupJobsSummaryParams {
	o.SetMinRuns(minRuns)
	return o
}

// SetMinRuns adds the minRuns to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetMinRuns(minRuns *int64) {
	o.MinRuns = minRuns
}

// WithNames adds the names to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithNames(names []string) *GetBackupJobsSummaryParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetNames(names []string) {
	o.Names = names
}

// WithOnlyReturnBasicSummary adds the onlyReturnBasicSummary to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithOnlyReturnBasicSummary(onlyReturnBasicSummary *bool) *GetBackupJobsSummaryParams {
	o.SetOnlyReturnBasicSummary(onlyReturnBasicSummary)
	return o
}

// SetOnlyReturnBasicSummary adds the onlyReturnBasicSummary to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetOnlyReturnBasicSummary(onlyReturnBasicSummary *bool) {
	o.OnlyReturnBasicSummary = onlyReturnBasicSummary
}

// WithOnlyReturnDataMigrationJobs adds the onlyReturnDataMigrationJobs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithOnlyReturnDataMigrationJobs(onlyReturnDataMigrationJobs *bool) *GetBackupJobsSummaryParams {
	o.SetOnlyReturnDataMigrationJobs(onlyReturnDataMigrationJobs)
	return o
}

// SetOnlyReturnDataMigrationJobs adds the onlyReturnDataMigrationJobs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetOnlyReturnDataMigrationJobs(onlyReturnDataMigrationJobs *bool) {
	o.OnlyReturnDataMigrationJobs = onlyReturnDataMigrationJobs
}

// WithOutputFormat adds the outputFormat to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithOutputFormat(outputFormat *string) *GetBackupJobsSummaryParams {
	o.SetOutputFormat(outputFormat)
	return o
}

// SetOutputFormat adds the outputFormat to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetOutputFormat(outputFormat *string) {
	o.OutputFormat = outputFormat
}

// WithPolicyIds adds the policyIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithPolicyIds(policyIds []string) *GetBackupJobsSummaryParams {
	o.SetPolicyIds(policyIds)
	return o
}

// SetPolicyIds adds the policyIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetPolicyIds(policyIds []string) {
	o.PolicyIds = policyIds
}

// WithPruneExclusionSources adds the pruneExclusionSources to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithPruneExclusionSources(pruneExclusionSources *bool) *GetBackupJobsSummaryParams {
	o.SetPruneExclusionSources(pruneExclusionSources)
	return o
}

// SetPruneExclusionSources adds the pruneExclusionSources to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetPruneExclusionSources(pruneExclusionSources *bool) {
	o.PruneExclusionSources = pruneExclusionSources
}

// WithSourceIds adds the sourceIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithSourceIds(sourceIds []int64) *GetBackupJobsSummaryParams {
	o.SetSourceIds(sourceIds)
	return o
}

// SetSourceIds adds the sourceIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetSourceIds(sourceIds []int64) {
	o.SourceIds = sourceIds
}

// WithStartTimeUsecs adds the startTimeUsecs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetBackupJobsSummaryParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WithStatuses adds the statuses to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithStatuses(statuses []string) *GetBackupJobsSummaryParams {
	o.SetStatuses(statuses)
	return o
}

// SetStatuses adds the statuses to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetStatuses(statuses []string) {
	o.Statuses = statuses
}

// WithTenantIds adds the tenantIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithTenantIds(tenantIds []string) *GetBackupJobsSummaryParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithViewBoxIds adds the viewBoxIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) WithViewBoxIds(viewBoxIds []int64) *GetBackupJobsSummaryParams {
	o.SetViewBoxIds(viewBoxIds)
	return o
}

// SetViewBoxIds adds the viewBoxIds to the get backup jobs summary params
func (o *GetBackupJobsSummaryParams) SetViewBoxIds(viewBoxIds []int64) {
	o.ViewBoxIds = viewBoxIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetBackupJobsSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.EnvTypes != nil {

		// binding items for envTypes
		joinedEnvTypes := o.bindParamEnvTypes(reg)

		// query array param envTypes
		if err := r.SetQueryParam("envTypes", joinedEnvTypes...); err != nil {
			return err
		}
	}

	if o.ExcludeTasks != nil {

		// query param excludeTasks
		var qrExcludeTasks bool

		if o.ExcludeTasks != nil {
			qrExcludeTasks = *o.ExcludeTasks
		}
		qExcludeTasks := swag.FormatBool(qrExcludeTasks)
		if qExcludeTasks != "" {

			if err := r.SetQueryParam("excludeTasks", qExcludeTasks); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeJobsWithoutRun != nil {

		// query param includeJobsWithoutRun
		var qrIncludeJobsWithoutRun bool

		if o.IncludeJobsWithoutRun != nil {
			qrIncludeJobsWithoutRun = *o.IncludeJobsWithoutRun
		}
		qIncludeJobsWithoutRun := swag.FormatBool(qrIncludeJobsWithoutRun)
		if qIncludeJobsWithoutRun != "" {

			if err := r.SetQueryParam("includeJobsWithoutRun", qIncludeJobsWithoutRun); err != nil {
				return err
			}
		}
	}

	if o.IncludeMissingSourceIds != nil {

		// query param includeMissingSourceIds
		var qrIncludeMissingSourceIds bool

		if o.IncludeMissingSourceIds != nil {
			qrIncludeMissingSourceIds = *o.IncludeMissingSourceIds
		}
		qIncludeMissingSourceIds := swag.FormatBool(qrIncludeMissingSourceIds)
		if qIncludeMissingSourceIds != "" {

			if err := r.SetQueryParam("includeMissingSourceIds", qIncludeMissingSourceIds); err != nil {
				return err
			}
		}
	}

	if o.IncludeRpoSnapshots != nil {

		// query param includeRpoSnapshots
		var qrIncludeRpoSnapshots bool

		if o.IncludeRpoSnapshots != nil {
			qrIncludeRpoSnapshots = *o.IncludeRpoSnapshots
		}
		qIncludeRpoSnapshots := swag.FormatBool(qrIncludeRpoSnapshots)
		if qIncludeRpoSnapshots != "" {

			if err := r.SetQueryParam("includeRpoSnapshots", qIncludeRpoSnapshots); err != nil {
				return err
			}
		}
	}

	if o.IsActive != nil {

		// query param isActive
		var qrIsActive bool

		if o.IsActive != nil {
			qrIsActive = *o.IsActive
		}
		qIsActive := swag.FormatBool(qrIsActive)
		if qIsActive != "" {

			if err := r.SetQueryParam("isActive", qIsActive); err != nil {
				return err
			}
		}
	}

	if o.IsDeleted != nil {

		// query param isDeleted
		var qrIsDeleted bool

		if o.IsDeleted != nil {
			qrIsDeleted = *o.IsDeleted
		}
		qIsDeleted := swag.FormatBool(qrIsDeleted)
		if qIsDeleted != "" {

			if err := r.SetQueryParam("isDeleted", qIsDeleted); err != nil {
				return err
			}
		}
	}

	if o.IsLastRunSLAViolated != nil {

		// query param isLastRunSlaViolated
		var qrIsLastRunSLAViolated bool

		if o.IsLastRunSLAViolated != nil {
			qrIsLastRunSLAViolated = *o.IsLastRunSLAViolated
		}
		qIsLastRunSLAViolated := swag.FormatBool(qrIsLastRunSLAViolated)
		if qIsLastRunSLAViolated != "" {

			if err := r.SetQueryParam("isLastRunSlaViolated", qIsLastRunSLAViolated); err != nil {
				return err
			}
		}
	}

	if o.MaxRuns != nil {

		// query param maxRuns
		var qrMaxRuns int64

		if o.MaxRuns != nil {
			qrMaxRuns = *o.MaxRuns
		}
		qMaxRuns := swag.FormatInt64(qrMaxRuns)
		if qMaxRuns != "" {

			if err := r.SetQueryParam("maxRuns", qMaxRuns); err != nil {
				return err
			}
		}
	}

	if o.MinRuns != nil {

		// query param minRuns
		var qrMinRuns int64

		if o.MinRuns != nil {
			qrMinRuns = *o.MinRuns
		}
		qMinRuns := swag.FormatInt64(qrMinRuns)
		if qMinRuns != "" {

			if err := r.SetQueryParam("minRuns", qMinRuns); err != nil {
				return err
			}
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if o.OnlyReturnBasicSummary != nil {

		// query param onlyReturnBasicSummary
		var qrOnlyReturnBasicSummary bool

		if o.OnlyReturnBasicSummary != nil {
			qrOnlyReturnBasicSummary = *o.OnlyReturnBasicSummary
		}
		qOnlyReturnBasicSummary := swag.FormatBool(qrOnlyReturnBasicSummary)
		if qOnlyReturnBasicSummary != "" {

			if err := r.SetQueryParam("onlyReturnBasicSummary", qOnlyReturnBasicSummary); err != nil {
				return err
			}
		}
	}

	if o.OnlyReturnDataMigrationJobs != nil {

		// query param onlyReturnDataMigrationJobs
		var qrOnlyReturnDataMigrationJobs bool

		if o.OnlyReturnDataMigrationJobs != nil {
			qrOnlyReturnDataMigrationJobs = *o.OnlyReturnDataMigrationJobs
		}
		qOnlyReturnDataMigrationJobs := swag.FormatBool(qrOnlyReturnDataMigrationJobs)
		if qOnlyReturnDataMigrationJobs != "" {

			if err := r.SetQueryParam("onlyReturnDataMigrationJobs", qOnlyReturnDataMigrationJobs); err != nil {
				return err
			}
		}
	}

	if o.OutputFormat != nil {

		// query param outputFormat
		var qrOutputFormat string

		if o.OutputFormat != nil {
			qrOutputFormat = *o.OutputFormat
		}
		qOutputFormat := qrOutputFormat
		if qOutputFormat != "" {

			if err := r.SetQueryParam("outputFormat", qOutputFormat); err != nil {
				return err
			}
		}
	}

	if o.PolicyIds != nil {

		// binding items for policyIds
		joinedPolicyIds := o.bindParamPolicyIds(reg)

		// query array param policyIds
		if err := r.SetQueryParam("policyIds", joinedPolicyIds...); err != nil {
			return err
		}
	}

	if o.PruneExclusionSources != nil {

		// query param pruneExclusionSources
		var qrPruneExclusionSources bool

		if o.PruneExclusionSources != nil {
			qrPruneExclusionSources = *o.PruneExclusionSources
		}
		qPruneExclusionSources := swag.FormatBool(qrPruneExclusionSources)
		if qPruneExclusionSources != "" {

			if err := r.SetQueryParam("pruneExclusionSources", qPruneExclusionSources); err != nil {
				return err
			}
		}
	}

	if o.SourceIds != nil {

		// binding items for sourceIds
		joinedSourceIds := o.bindParamSourceIds(reg)

		// query array param sourceIds
		if err := r.SetQueryParam("sourceIds", joinedSourceIds...); err != nil {
			return err
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.Statuses != nil {

		// binding items for statuses
		joinedStatuses := o.bindParamStatuses(reg)

		// query array param statuses
		if err := r.SetQueryParam("statuses", joinedStatuses...); err != nil {
			return err
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.ViewBoxIds != nil {

		// binding items for viewBoxIds
		joinedViewBoxIds := o.bindParamViewBoxIds(reg)

		// query array param viewBoxIds
		if err := r.SetQueryParam("viewBoxIds", joinedViewBoxIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetBackupJobsSummary binds the parameter envTypes
func (o *GetBackupJobsSummaryParams) bindParamEnvTypes(formats strfmt.Registry) []string {
	envTypesIR := o.EnvTypes

	var envTypesIC []string
	for _, envTypesIIR := range envTypesIR { // explode []int64

		envTypesIIV := swag.FormatInt64(envTypesIIR) // int64 as string
		envTypesIC = append(envTypesIC, envTypesIIV)
	}

	// items.CollectionFormat: ""
	envTypesIS := swag.JoinByFormat(envTypesIC, "")

	return envTypesIS
}

// bindParamGetBackupJobsSummary binds the parameter ids
func (o *GetBackupJobsSummaryParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []int64

		idsIIV := swag.FormatInt64(idsIIR) // int64 as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetBackupJobsSummary binds the parameter names
func (o *GetBackupJobsSummaryParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: ""
	namesIS := swag.JoinByFormat(namesIC, "")

	return namesIS
}

// bindParamGetBackupJobsSummary binds the parameter policyIds
func (o *GetBackupJobsSummaryParams) bindParamPolicyIds(formats strfmt.Registry) []string {
	policyIdsIR := o.PolicyIds

	var policyIdsIC []string
	for _, policyIdsIIR := range policyIdsIR { // explode []string

		policyIdsIIV := policyIdsIIR // string as string
		policyIdsIC = append(policyIdsIC, policyIdsIIV)
	}

	// items.CollectionFormat: ""
	policyIdsIS := swag.JoinByFormat(policyIdsIC, "")

	return policyIdsIS
}

// bindParamGetBackupJobsSummary binds the parameter sourceIds
func (o *GetBackupJobsSummaryParams) bindParamSourceIds(formats strfmt.Registry) []string {
	sourceIdsIR := o.SourceIds

	var sourceIdsIC []string
	for _, sourceIdsIIR := range sourceIdsIR { // explode []int64

		sourceIdsIIV := swag.FormatInt64(sourceIdsIIR) // int64 as string
		sourceIdsIC = append(sourceIdsIC, sourceIdsIIV)
	}

	// items.CollectionFormat: ""
	sourceIdsIS := swag.JoinByFormat(sourceIdsIC, "")

	return sourceIdsIS
}

// bindParamGetBackupJobsSummary binds the parameter statuses
func (o *GetBackupJobsSummaryParams) bindParamStatuses(formats strfmt.Registry) []string {
	statusesIR := o.Statuses

	var statusesIC []string
	for _, statusesIIR := range statusesIR { // explode []string

		statusesIIV := statusesIIR // string as string
		statusesIC = append(statusesIC, statusesIIV)
	}

	// items.CollectionFormat: ""
	statusesIS := swag.JoinByFormat(statusesIC, "")

	return statusesIS
}

// bindParamGetBackupJobsSummary binds the parameter tenantIds
func (o *GetBackupJobsSummaryParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}

// bindParamGetBackupJobsSummary binds the parameter viewBoxIds
func (o *GetBackupJobsSummaryParams) bindParamViewBoxIds(formats strfmt.Registry) []string {
	viewBoxIdsIR := o.ViewBoxIds

	var viewBoxIdsIC []string
	for _, viewBoxIdsIIR := range viewBoxIdsIR { // explode []int64

		viewBoxIdsIIV := swag.FormatInt64(viewBoxIdsIIR) // int64 as string
		viewBoxIdsIC = append(viewBoxIdsIC, viewBoxIdsIIV)
	}

	// items.CollectionFormat: ""
	viewBoxIdsIS := swag.JoinByFormat(viewBoxIdsIC, "")

	return viewBoxIdsIS
}
