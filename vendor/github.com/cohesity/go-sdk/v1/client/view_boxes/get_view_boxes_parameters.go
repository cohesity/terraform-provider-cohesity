// Code generated by go-swagger; DO NOT EDIT.

package view_boxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetViewBoxesParams creates a new GetViewBoxesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetViewBoxesParams() *GetViewBoxesParams {
	return &GetViewBoxesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetViewBoxesParamsWithTimeout creates a new GetViewBoxesParams object
// with the ability to set a timeout on a request.
func NewGetViewBoxesParamsWithTimeout(timeout time.Duration) *GetViewBoxesParams {
	return &GetViewBoxesParams{
		timeout: timeout,
	}
}

// NewGetViewBoxesParamsWithContext creates a new GetViewBoxesParams object
// with the ability to set a context for a request.
func NewGetViewBoxesParamsWithContext(ctx context.Context) *GetViewBoxesParams {
	return &GetViewBoxesParams{
		Context: ctx,
	}
}

// NewGetViewBoxesParamsWithHTTPClient creates a new GetViewBoxesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetViewBoxesParamsWithHTTPClient(client *http.Client) *GetViewBoxesParams {
	return &GetViewBoxesParams{
		HTTPClient: client,
	}
}

/*
GetViewBoxesParams contains all the parameters to send to the API endpoint

	for the get view boxes operation.

	Typically these are written to a http.Request.
*/
type GetViewBoxesParams struct {

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* ClusterPartitionIds.

	   Filter by a list of Cluster Partition Ids.
	*/
	ClusterPartitionIds []int64

	/* FetchStats.

	   Specifies whether to include usage and performance statistics.
	*/
	FetchStats *bool

	/* FetchTimeSeriesSchema.

	   Specifies whether to get time series schema info of the view box.
	*/
	FetchTimeSeriesSchema *bool

	/* Ids.

	     Filter by a list of Storage Domain (View Box) ids.
	If empty, View Boxes are not filtered by id.
	*/
	Ids []int64

	/* MatchPartialNames.

	     If true, the names in 'names' field are matched by prefix rather than
	exactly matched.
	*/
	MatchPartialNames *bool

	/* Names.

	     Filter by a list of Storage Domain (View Box) Names.
	If empty, Storage Domains (View Boxes) are not filtered by Name.
	*/
	Names []string

	/* TemplateID.

	     Filter list of Storage Domain (View Box) by the properties of the template
	like dedup, compression.
	If empty, Storage Domains (View Boxes) are not filtered.

	     Format: int64
	*/
	TemplateID *int64

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get view boxes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetViewBoxesParams) WithDefaults() *GetViewBoxesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get view boxes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetViewBoxesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get view boxes params
func (o *GetViewBoxesParams) WithTimeout(timeout time.Duration) *GetViewBoxesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get view boxes params
func (o *GetViewBoxesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get view boxes params
func (o *GetViewBoxesParams) WithContext(ctx context.Context) *GetViewBoxesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get view boxes params
func (o *GetViewBoxesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get view boxes params
func (o *GetViewBoxesParams) WithHTTPClient(client *http.Client) *GetViewBoxesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get view boxes params
func (o *GetViewBoxesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get view boxes params
func (o *GetViewBoxesParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetViewBoxesParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get view boxes params
func (o *GetViewBoxesParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithClusterPartitionIds adds the clusterPartitionIds to the get view boxes params
func (o *GetViewBoxesParams) WithClusterPartitionIds(clusterPartitionIds []int64) *GetViewBoxesParams {
	o.SetClusterPartitionIds(clusterPartitionIds)
	return o
}

// SetClusterPartitionIds adds the clusterPartitionIds to the get view boxes params
func (o *GetViewBoxesParams) SetClusterPartitionIds(clusterPartitionIds []int64) {
	o.ClusterPartitionIds = clusterPartitionIds
}

// WithFetchStats adds the fetchStats to the get view boxes params
func (o *GetViewBoxesParams) WithFetchStats(fetchStats *bool) *GetViewBoxesParams {
	o.SetFetchStats(fetchStats)
	return o
}

// SetFetchStats adds the fetchStats to the get view boxes params
func (o *GetViewBoxesParams) SetFetchStats(fetchStats *bool) {
	o.FetchStats = fetchStats
}

// WithFetchTimeSeriesSchema adds the fetchTimeSeriesSchema to the get view boxes params
func (o *GetViewBoxesParams) WithFetchTimeSeriesSchema(fetchTimeSeriesSchema *bool) *GetViewBoxesParams {
	o.SetFetchTimeSeriesSchema(fetchTimeSeriesSchema)
	return o
}

// SetFetchTimeSeriesSchema adds the fetchTimeSeriesSchema to the get view boxes params
func (o *GetViewBoxesParams) SetFetchTimeSeriesSchema(fetchTimeSeriesSchema *bool) {
	o.FetchTimeSeriesSchema = fetchTimeSeriesSchema
}

// WithIds adds the ids to the get view boxes params
func (o *GetViewBoxesParams) WithIds(ids []int64) *GetViewBoxesParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get view boxes params
func (o *GetViewBoxesParams) SetIds(ids []int64) {
	o.Ids = ids
}

// WithMatchPartialNames adds the matchPartialNames to the get view boxes params
func (o *GetViewBoxesParams) WithMatchPartialNames(matchPartialNames *bool) *GetViewBoxesParams {
	o.SetMatchPartialNames(matchPartialNames)
	return o
}

// SetMatchPartialNames adds the matchPartialNames to the get view boxes params
func (o *GetViewBoxesParams) SetMatchPartialNames(matchPartialNames *bool) {
	o.MatchPartialNames = matchPartialNames
}

// WithNames adds the names to the get view boxes params
func (o *GetViewBoxesParams) WithNames(names []string) *GetViewBoxesParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the get view boxes params
func (o *GetViewBoxesParams) SetNames(names []string) {
	o.Names = names
}

// WithTemplateID adds the templateID to the get view boxes params
func (o *GetViewBoxesParams) WithTemplateID(templateID *int64) *GetViewBoxesParams {
	o.SetTemplateID(templateID)
	return o
}

// SetTemplateID adds the templateId to the get view boxes params
func (o *GetViewBoxesParams) SetTemplateID(templateID *int64) {
	o.TemplateID = templateID
}

// WithTenantIds adds the tenantIds to the get view boxes params
func (o *GetViewBoxesParams) WithTenantIds(tenantIds []string) *GetViewBoxesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get view boxes params
func (o *GetViewBoxesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetViewBoxesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.ClusterPartitionIds != nil {

		// binding items for clusterPartitionIds
		joinedClusterPartitionIds := o.bindParamClusterPartitionIds(reg)

		// query array param clusterPartitionIds
		if err := r.SetQueryParam("clusterPartitionIds", joinedClusterPartitionIds...); err != nil {
			return err
		}
	}

	if o.FetchStats != nil {

		// query param fetchStats
		var qrFetchStats bool

		if o.FetchStats != nil {
			qrFetchStats = *o.FetchStats
		}
		qFetchStats := swag.FormatBool(qrFetchStats)
		if qFetchStats != "" {

			if err := r.SetQueryParam("fetchStats", qFetchStats); err != nil {
				return err
			}
		}
	}

	if o.FetchTimeSeriesSchema != nil {

		// query param fetchTimeSeriesSchema
		var qrFetchTimeSeriesSchema bool

		if o.FetchTimeSeriesSchema != nil {
			qrFetchTimeSeriesSchema = *o.FetchTimeSeriesSchema
		}
		qFetchTimeSeriesSchema := swag.FormatBool(qrFetchTimeSeriesSchema)
		if qFetchTimeSeriesSchema != "" {

			if err := r.SetQueryParam("fetchTimeSeriesSchema", qFetchTimeSeriesSchema); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.MatchPartialNames != nil {

		// query param matchPartialNames
		var qrMatchPartialNames bool

		if o.MatchPartialNames != nil {
			qrMatchPartialNames = *o.MatchPartialNames
		}
		qMatchPartialNames := swag.FormatBool(qrMatchPartialNames)
		if qMatchPartialNames != "" {

			if err := r.SetQueryParam("matchPartialNames", qMatchPartialNames); err != nil {
				return err
			}
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if o.TemplateID != nil {

		// query param templateId
		var qrTemplateID int64

		if o.TemplateID != nil {
			qrTemplateID = *o.TemplateID
		}
		qTemplateID := swag.FormatInt64(qrTemplateID)
		if qTemplateID != "" {

			if err := r.SetQueryParam("templateId", qTemplateID); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetViewBoxes binds the parameter clusterPartitionIds
func (o *GetViewBoxesParams) bindParamClusterPartitionIds(formats strfmt.Registry) []string {
	clusterPartitionIdsIR := o.ClusterPartitionIds

	var clusterPartitionIdsIC []string
	for _, clusterPartitionIdsIIR := range clusterPartitionIdsIR { // explode []int64

		clusterPartitionIdsIIV := swag.FormatInt64(clusterPartitionIdsIIR) // int64 as string
		clusterPartitionIdsIC = append(clusterPartitionIdsIC, clusterPartitionIdsIIV)
	}

	// items.CollectionFormat: ""
	clusterPartitionIdsIS := swag.JoinByFormat(clusterPartitionIdsIC, "")

	return clusterPartitionIdsIS
}

// bindParamGetViewBoxes binds the parameter ids
func (o *GetViewBoxesParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []int64

		idsIIV := swag.FormatInt64(idsIIR) // int64 as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetViewBoxes binds the parameter names
func (o *GetViewBoxesParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: ""
	namesIS := swag.JoinByFormat(namesIC, "")

	return namesIS
}

// bindParamGetViewBoxes binds the parameter tenantIds
func (o *GetViewBoxesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
