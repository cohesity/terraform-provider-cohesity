// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v1/models"
)

// UpdateIdpReader is a Reader for the UpdateIdp structure.
type UpdateIdpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIdpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIdpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateIdpDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateIdpOK creates a UpdateIdpOK with default headers values
func NewUpdateIdpOK() *UpdateIdpOK {
	return &UpdateIdpOK{}
}

/*
UpdateIdpOK describes a response with status code 200, with default header values.

Success
*/
type UpdateIdpOK struct {
	Payload *models.IdpServiceConfiguration
}

// IsSuccess returns true when this update idp o k response has a 2xx status code
func (o *UpdateIdpOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update idp o k response has a 3xx status code
func (o *UpdateIdpOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update idp o k response has a 4xx status code
func (o *UpdateIdpOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update idp o k response has a 5xx status code
func (o *UpdateIdpOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update idp o k response a status code equal to that given
func (o *UpdateIdpOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update idp o k response
func (o *UpdateIdpOK) Code() int {
	return 200
}

func (o *UpdateIdpOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /public/idps/{id}][%d] updateIdpOK %s", 200, payload)
}

func (o *UpdateIdpOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /public/idps/{id}][%d] updateIdpOK %s", 200, payload)
}

func (o *UpdateIdpOK) GetPayload() *models.IdpServiceConfiguration {
	return o.Payload
}

func (o *UpdateIdpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdpServiceConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdpDefault creates a UpdateIdpDefault with default headers values
func NewUpdateIdpDefault(code int) *UpdateIdpDefault {
	return &UpdateIdpDefault{
		_statusCode: code,
	}
}

/*
UpdateIdpDefault describes a response with status code -1, with default header values.

Error
*/
type UpdateIdpDefault struct {
	_statusCode int

	Payload *models.RequestError
}

// IsSuccess returns true when this update idp default response has a 2xx status code
func (o *UpdateIdpDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update idp default response has a 3xx status code
func (o *UpdateIdpDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update idp default response has a 4xx status code
func (o *UpdateIdpDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update idp default response has a 5xx status code
func (o *UpdateIdpDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update idp default response a status code equal to that given
func (o *UpdateIdpDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update idp default response
func (o *UpdateIdpDefault) Code() int {
	return o._statusCode
}

func (o *UpdateIdpDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /public/idps/{id}][%d] UpdateIdp default %s", o._statusCode, payload)
}

func (o *UpdateIdpDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /public/idps/{id}][%d] UpdateIdp default %s", o._statusCode, payload)
}

func (o *UpdateIdpDefault) GetPayload() *models.RequestError {
	return o.Payload
}

func (o *UpdateIdpDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
