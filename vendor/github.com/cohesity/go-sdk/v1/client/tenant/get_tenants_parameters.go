// Code generated by go-swagger; DO NOT EDIT.

package tenant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTenantsParams creates a new GetTenantsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTenantsParams() *GetTenantsParams {
	return &GetTenantsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTenantsParamsWithTimeout creates a new GetTenantsParams object
// with the ability to set a timeout on a request.
func NewGetTenantsParamsWithTimeout(timeout time.Duration) *GetTenantsParams {
	return &GetTenantsParams{
		timeout: timeout,
	}
}

// NewGetTenantsParamsWithContext creates a new GetTenantsParams object
// with the ability to set a context for a request.
func NewGetTenantsParamsWithContext(ctx context.Context) *GetTenantsParams {
	return &GetTenantsParams{
		Context: ctx,
	}
}

// NewGetTenantsParamsWithHTTPClient creates a new GetTenantsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTenantsParamsWithHTTPClient(client *http.Client) *GetTenantsParams {
	return &GetTenantsParams{
		HTTPClient: client,
	}
}

/*
GetTenantsParams contains all the parameters to send to the API endpoint

	for the get tenants operation.

	Typically these are written to a http.Request.
*/
type GetTenantsParams struct {

	// Hierarchy.
	Hierarchy *bool

	// Ids.
	Ids []string

	// IncludeSelf.
	IncludeSelf *bool

	/* Properties.

	     'ViewBox' indicates view box data for tenant.
	'Vlan' indicates vlan data for tenant.
	'ProtectionPolicy' indicates protection policy for tenant.
	'ProtectionJob' indicates protection job for tenant.
	'Entity' indicates entity data for tenant.
	'Views' indicates view data for tenant.
	'ActiveDirectory' indicates active directory for tenant.
	'LdapProvider' indicates ldap provider for tenant.
	'SwiftConfig' indicates Swift configuration for tenant.
	*/
	Properties []string

	// SkipInvalidIds.
	SkipInvalidIds *bool

	/* Status.

	   Filter by tenant status.
	*/
	Status []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get tenants params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTenantsParams) WithDefaults() *GetTenantsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get tenants params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTenantsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get tenants params
func (o *GetTenantsParams) WithTimeout(timeout time.Duration) *GetTenantsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tenants params
func (o *GetTenantsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tenants params
func (o *GetTenantsParams) WithContext(ctx context.Context) *GetTenantsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tenants params
func (o *GetTenantsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tenants params
func (o *GetTenantsParams) WithHTTPClient(client *http.Client) *GetTenantsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tenants params
func (o *GetTenantsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHierarchy adds the hierarchy to the get tenants params
func (o *GetTenantsParams) WithHierarchy(hierarchy *bool) *GetTenantsParams {
	o.SetHierarchy(hierarchy)
	return o
}

// SetHierarchy adds the hierarchy to the get tenants params
func (o *GetTenantsParams) SetHierarchy(hierarchy *bool) {
	o.Hierarchy = hierarchy
}

// WithIds adds the ids to the get tenants params
func (o *GetTenantsParams) WithIds(ids []string) *GetTenantsParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get tenants params
func (o *GetTenantsParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithIncludeSelf adds the includeSelf to the get tenants params
func (o *GetTenantsParams) WithIncludeSelf(includeSelf *bool) *GetTenantsParams {
	o.SetIncludeSelf(includeSelf)
	return o
}

// SetIncludeSelf adds the includeSelf to the get tenants params
func (o *GetTenantsParams) SetIncludeSelf(includeSelf *bool) {
	o.IncludeSelf = includeSelf
}

// WithProperties adds the properties to the get tenants params
func (o *GetTenantsParams) WithProperties(properties []string) *GetTenantsParams {
	o.SetProperties(properties)
	return o
}

// SetProperties adds the properties to the get tenants params
func (o *GetTenantsParams) SetProperties(properties []string) {
	o.Properties = properties
}

// WithSkipInvalidIds adds the skipInvalidIds to the get tenants params
func (o *GetTenantsParams) WithSkipInvalidIds(skipInvalidIds *bool) *GetTenantsParams {
	o.SetSkipInvalidIds(skipInvalidIds)
	return o
}

// SetSkipInvalidIds adds the skipInvalidIds to the get tenants params
func (o *GetTenantsParams) SetSkipInvalidIds(skipInvalidIds *bool) {
	o.SkipInvalidIds = skipInvalidIds
}

// WithStatus adds the status to the get tenants params
func (o *GetTenantsParams) WithStatus(status []string) *GetTenantsParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get tenants params
func (o *GetTenantsParams) SetStatus(status []string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetTenantsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Hierarchy != nil {

		// query param hierarchy
		var qrHierarchy bool

		if o.Hierarchy != nil {
			qrHierarchy = *o.Hierarchy
		}
		qHierarchy := swag.FormatBool(qrHierarchy)
		if qHierarchy != "" {

			if err := r.SetQueryParam("hierarchy", qHierarchy); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeSelf != nil {

		// query param includeSelf
		var qrIncludeSelf bool

		if o.IncludeSelf != nil {
			qrIncludeSelf = *o.IncludeSelf
		}
		qIncludeSelf := swag.FormatBool(qrIncludeSelf)
		if qIncludeSelf != "" {

			if err := r.SetQueryParam("includeSelf", qIncludeSelf); err != nil {
				return err
			}
		}
	}

	if o.Properties != nil {

		// binding items for properties
		joinedProperties := o.bindParamProperties(reg)

		// query array param properties
		if err := r.SetQueryParam("properties", joinedProperties...); err != nil {
			return err
		}
	}

	if o.SkipInvalidIds != nil {

		// query param skipInvalidIds
		var qrSkipInvalidIds bool

		if o.SkipInvalidIds != nil {
			qrSkipInvalidIds = *o.SkipInvalidIds
		}
		qSkipInvalidIds := swag.FormatBool(qrSkipInvalidIds)
		if qSkipInvalidIds != "" {

			if err := r.SetQueryParam("skipInvalidIds", qSkipInvalidIds); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// binding items for status
		joinedStatus := o.bindParamStatus(reg)

		// query array param status
		if err := r.SetQueryParam("status", joinedStatus...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetTenants binds the parameter ids
func (o *GetTenantsParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetTenants binds the parameter properties
func (o *GetTenantsParams) bindParamProperties(formats strfmt.Registry) []string {
	propertiesIR := o.Properties

	var propertiesIC []string
	for _, propertiesIIR := range propertiesIR { // explode []string

		propertiesIIV := propertiesIIR // string as string
		propertiesIC = append(propertiesIC, propertiesIIV)
	}

	// items.CollectionFormat: ""
	propertiesIS := swag.JoinByFormat(propertiesIC, "")

	return propertiesIS
}

// bindParamGetTenants binds the parameter status
func (o *GetTenantsParams) bindParamStatus(formats strfmt.Registry) []string {
	statusIR := o.Status

	var statusIC []string
	for _, statusIIR := range statusIR { // explode []string

		statusIIV := statusIIR // string as string
		statusIC = append(statusIC, statusIIV)
	}

	// items.CollectionFormat: ""
	statusIS := swag.JoinByFormat(statusIC, "")

	return statusIS
}
