// Code generated by go-swagger; DO NOT EDIT.

package principals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAllUserAPIKeysParams creates a new GetAllUserAPIKeysParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllUserAPIKeysParams() *GetAllUserAPIKeysParams {
	return &GetAllUserAPIKeysParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllUserAPIKeysParamsWithTimeout creates a new GetAllUserAPIKeysParams object
// with the ability to set a timeout on a request.
func NewGetAllUserAPIKeysParamsWithTimeout(timeout time.Duration) *GetAllUserAPIKeysParams {
	return &GetAllUserAPIKeysParams{
		timeout: timeout,
	}
}

// NewGetAllUserAPIKeysParamsWithContext creates a new GetAllUserAPIKeysParams object
// with the ability to set a context for a request.
func NewGetAllUserAPIKeysParamsWithContext(ctx context.Context) *GetAllUserAPIKeysParams {
	return &GetAllUserAPIKeysParams{
		Context: ctx,
	}
}

// NewGetAllUserAPIKeysParamsWithHTTPClient creates a new GetAllUserAPIKeysParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllUserAPIKeysParamsWithHTTPClient(client *http.Client) *GetAllUserAPIKeysParams {
	return &GetAllUserAPIKeysParams{
		HTTPClient: client,
	}
}

/*
GetAllUserAPIKeysParams contains all the parameters to send to the API endpoint

	for the get all user Api keys operation.

	Typically these are written to a http.Request.
*/
type GetAllUserAPIKeysParams struct {

	/* UserSids.

	   Specifies a list of user sids.
	*/
	UserSids []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all user Api keys params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllUserAPIKeysParams) WithDefaults() *GetAllUserAPIKeysParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all user Api keys params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllUserAPIKeysParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) WithTimeout(timeout time.Duration) *GetAllUserAPIKeysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) WithContext(ctx context.Context) *GetAllUserAPIKeysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) WithHTTPClient(client *http.Client) *GetAllUserAPIKeysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserSids adds the userSids to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) WithUserSids(userSids []string) *GetAllUserAPIKeysParams {
	o.SetUserSids(userSids)
	return o
}

// SetUserSids adds the userSids to the get all user Api keys params
func (o *GetAllUserAPIKeysParams) SetUserSids(userSids []string) {
	o.UserSids = userSids
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllUserAPIKeysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserSids != nil {

		// binding items for userSids
		joinedUserSids := o.bindParamUserSids(reg)

		// query array param userSids
		if err := r.SetQueryParam("userSids", joinedUserSids...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetAllUserAPIKeys binds the parameter userSids
func (o *GetAllUserAPIKeysParams) bindParamUserSids(formats strfmt.Registry) []string {
	userSidsIR := o.UserSids

	var userSidsIC []string
	for _, userSidsIIR := range userSidsIR { // explode []string

		userSidsIIV := userSidsIIR // string as string
		userSidsIC = append(userSidsIC, userSidsIIV)
	}

	// items.CollectionFormat: ""
	userSidsIS := swag.JoinByFormat(userSidsIC, "")

	return userSidsIS
}
