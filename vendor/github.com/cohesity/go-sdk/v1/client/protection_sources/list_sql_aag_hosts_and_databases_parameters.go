// Code generated by go-swagger; DO NOT EDIT.

package protection_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListSQLAagHostsAndDatabasesParams creates a new ListSQLAagHostsAndDatabasesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListSQLAagHostsAndDatabasesParams() *ListSQLAagHostsAndDatabasesParams {
	return &ListSQLAagHostsAndDatabasesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListSQLAagHostsAndDatabasesParamsWithTimeout creates a new ListSQLAagHostsAndDatabasesParams object
// with the ability to set a timeout on a request.
func NewListSQLAagHostsAndDatabasesParamsWithTimeout(timeout time.Duration) *ListSQLAagHostsAndDatabasesParams {
	return &ListSQLAagHostsAndDatabasesParams{
		timeout: timeout,
	}
}

// NewListSQLAagHostsAndDatabasesParamsWithContext creates a new ListSQLAagHostsAndDatabasesParams object
// with the ability to set a context for a request.
func NewListSQLAagHostsAndDatabasesParamsWithContext(ctx context.Context) *ListSQLAagHostsAndDatabasesParams {
	return &ListSQLAagHostsAndDatabasesParams{
		Context: ctx,
	}
}

// NewListSQLAagHostsAndDatabasesParamsWithHTTPClient creates a new ListSQLAagHostsAndDatabasesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListSQLAagHostsAndDatabasesParamsWithHTTPClient(client *http.Client) *ListSQLAagHostsAndDatabasesParams {
	return &ListSQLAagHostsAndDatabasesParams{
		HTTPClient: client,
	}
}

/*
ListSQLAagHostsAndDatabasesParams contains all the parameters to send to the API endpoint

	for the list Sql aag hosts and databases operation.

	Typically these are written to a http.Request.
*/
type ListSQLAagHostsAndDatabasesParams struct {

	/* SQLProtectionSourceIds.

	     Specifies a list of Ids of Protection Sources registered as SQL servers.
	These sources may have one or more SQL databases in them. Some of them
	may be part of AAGs(Always on Availability Group).
	*/
	SQLProtectionSourceIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list Sql aag hosts and databases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListSQLAagHostsAndDatabasesParams) WithDefaults() *ListSQLAagHostsAndDatabasesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list Sql aag hosts and databases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListSQLAagHostsAndDatabasesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) WithTimeout(timeout time.Duration) *ListSQLAagHostsAndDatabasesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) WithContext(ctx context.Context) *ListSQLAagHostsAndDatabasesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) WithHTTPClient(client *http.Client) *ListSQLAagHostsAndDatabasesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSQLProtectionSourceIds adds the sQLProtectionSourceIds to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) WithSQLProtectionSourceIds(sQLProtectionSourceIds []int64) *ListSQLAagHostsAndDatabasesParams {
	o.SetSQLProtectionSourceIds(sQLProtectionSourceIds)
	return o
}

// SetSQLProtectionSourceIds adds the sqlProtectionSourceIds to the list Sql aag hosts and databases params
func (o *ListSQLAagHostsAndDatabasesParams) SetSQLProtectionSourceIds(sQLProtectionSourceIds []int64) {
	o.SQLProtectionSourceIds = sQLProtectionSourceIds
}

// WriteToRequest writes these params to a swagger request
func (o *ListSQLAagHostsAndDatabasesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SQLProtectionSourceIds != nil {

		// binding items for sqlProtectionSourceIds
		joinedSQLProtectionSourceIds := o.bindParamSQLProtectionSourceIds(reg)

		// query array param sqlProtectionSourceIds
		if err := r.SetQueryParam("sqlProtectionSourceIds", joinedSQLProtectionSourceIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamListSQLAagHostsAndDatabases binds the parameter sqlProtectionSourceIds
func (o *ListSQLAagHostsAndDatabasesParams) bindParamSQLProtectionSourceIds(formats strfmt.Registry) []string {
	sQLProtectionSourceIdsIR := o.SQLProtectionSourceIds

	var sQLProtectionSourceIdsIC []string
	for _, sQLProtectionSourceIdsIIR := range sQLProtectionSourceIdsIR { // explode []int64

		sQLProtectionSourceIdsIIV := swag.FormatInt64(sQLProtectionSourceIdsIIR) // int64 as string
		sQLProtectionSourceIdsIC = append(sQLProtectionSourceIdsIC, sQLProtectionSourceIdsIIV)
	}

	// items.CollectionFormat: ""
	sQLProtectionSourceIdsIS := swag.JoinByFormat(sQLProtectionSourceIdsIC, "")

	return sQLProtectionSourceIdsIS
}
