// Code generated by go-swagger; DO NOT EDIT.

package protection_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListProtectionSourcesParams creates a new ListProtectionSourcesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProtectionSourcesParams() *ListProtectionSourcesParams {
	return &ListProtectionSourcesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProtectionSourcesParamsWithTimeout creates a new ListProtectionSourcesParams object
// with the ability to set a timeout on a request.
func NewListProtectionSourcesParamsWithTimeout(timeout time.Duration) *ListProtectionSourcesParams {
	return &ListProtectionSourcesParams{
		timeout: timeout,
	}
}

// NewListProtectionSourcesParamsWithContext creates a new ListProtectionSourcesParams object
// with the ability to set a context for a request.
func NewListProtectionSourcesParamsWithContext(ctx context.Context) *ListProtectionSourcesParams {
	return &ListProtectionSourcesParams{
		Context: ctx,
	}
}

// NewListProtectionSourcesParamsWithHTTPClient creates a new ListProtectionSourcesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProtectionSourcesParamsWithHTTPClient(client *http.Client) *ListProtectionSourcesParams {
	return &ListProtectionSourcesParams{
		HTTPClient: client,
	}
}

/*
ListProtectionSourcesParams contains all the parameters to send to the API endpoint

	for the list protection sources operation.

	Typically these are written to a http.Request.
*/
type ListProtectionSourcesParams struct {

	/* AfterCursorEntityID.

	   Specifies the entity id starting from which the items are to be returned.

	   Format: int64
	*/
	AfterCursorEntityID *int64

	/* AllUnderHierarchy.

	     AllUnderHierarchy specifies if objects of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	*/
	AllUnderHierarchy *bool

	/* BeforeCursorEntityID.

	   Specifies the entity id upto which the items are to be returned.

	   Format: int64
	*/
	BeforeCursorEntityID *int64

	/* EncryptionKey.

	     Key to be used to encrypt the source credential. If
	include_source_credentials is set to true this key must be specified.
	*/
	EncryptionKey *string

	/* Environment.

	     This field is deprecated. Use environments instead.
	deprecated: true
	*/
	Environment *string

	/* Environments.

	     Return only Protection Sources that match the passed in environment type
	such as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',
	'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.
	For example, set this parameter to 'kVMware' to only return the Sources
	(and their Object subtrees) found in the 'kVMware'
	(VMware vCenter Server) environment.

	NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
	*/
	Environments []string

	/* ExcludeAwsTypes.

	     Specifies the Object types to be filtered out for AWS that match the
	passed in types such as 'kEC2Instance', 'kRDSInstance', 'kAuroraCluster',
	'kTag', 'kAuroraTag', 'kRDSTag', kS3Bucket, kS3Tag.
	For example, set this parameter to 'kEC2Instance' to exclude ec2 instance
	from being returned.
	*/
	ExcludeAwsTypes []string

	/* ExcludeAzureTypes.

	     Specifies the Object types to be filtered out for Azure that match the
	passed in types such as 'kVirtualMachine', 'kSQLDatabase'.
	For example, set this parameter to 'kVirtualMachine' to exclude azure VMs
	from being returned.
	*/
	ExcludeAzureTypes []string

	/* ExcludeKubernetesTypes.

	     Specifies the Object types to be filtered out for Kubernetes that match
	the passed in types such as 'kService'.
	For example, set this parameter to 'kService' to exclude services
	from being returned.
	*/
	ExcludeKubernetesTypes []string

	/* ExcludeOffice365Types.

	     Specifies the Object types to be filtered out for Office 365 that match
	the passed in types such as 'kDomain', 'kOutlook', 'kMailbox', etc.
	For example, set this parameter to 'kMailbox' to exclude Mailbox Objects
	from being returned.
	*/
	ExcludeOffice365Types []string

	/* ExcludeTypes.

	     Filter out the Object types (and their subtrees) that match the passed
	in types such as 'kVCenter', 'kFolder', 'kDatacenter',
	'kComputeResource', 'kResourcePool', 'kDatastore', 'kHostSystem',
	'kVirtualMachine', etc.
	For example, set this parameter to 'kResourcePool' to
	exclude Resource Pool Objects from being returned.
	*/
	ExcludeTypes []string

	/* GetTeamsChannels.

	     Specifies whether to get the list of the channels for a given M365 Teams
	object.
	This should be set to true only when a single Id belonging to M365 Teams
	object is provided in the query params.
	*/
	GetTeamsChannels *bool

	/* HasValidMailbox.

	   If set to true, users with valid mailbox will be returned.
	*/
	HasValidMailbox *bool

	/* HasValidOnedrive.

	   If set to true, users with valid onedrive will be returned.
	*/
	HasValidOnedrive *bool

	/* ID.

	   Return the Object subtree for the passed in Protection Source id.

	   Format: int64
	*/
	ID *int64

	/* IncludeDatastores.

	     Set this parameter to true to also return kDatastore object types found in
	the Source in addition to their Object subtrees.
	By default, datastores are not returned.
	*/
	IncludeDatastores *bool

	/* IncludeEntityPermissionInfo.

	     If specified, then a list of entites with permissions assigned to them are
	returned.
	*/
	IncludeEntityPermissionInfo *bool

	/* IncludeExternalMetadata.

	     Specifies if entity external metadata should be included within the
	response to get entity hierarchy call.
	*/
	IncludeExternalMetadata *bool

	/* IncludeNetworks.

	     Set this parameter to true to also return kNetwork object types found in
	the Source in addition to their Object subtrees.
	By default, network objects are not returned.
	*/
	IncludeNetworks *bool

	/* IncludeObjectProtectionInfo.

	   If specified, the object protection of entities(if any) will be returned.
	*/
	IncludeObjectProtectionInfo *bool

	/* IncludeSfdcFields.

	     Set this parameter to true to also return fields of the object found
	in the Source in addition to their Object subtrees.
	By default, Sfdc object fields are not returned.
	*/
	IncludeSfdcFields *bool

	/* IncludeSourceCredentials.

	     If specified, then crednetial for the registered sources will be included.
	Credential is first encrypted with internal key and then reencrypted with
	user supplied 'encryption_key'.
	*/
	IncludeSourceCredentials *bool

	/* IncludeSystemVApps.

	     Set this parameter to true to also return system VApp object types found
	in the Source in addition to their Object subtrees.
	By default, VM folder objects are not returned.
	*/
	IncludeSystemVApps *bool

	/* IncludeVMFolders.

	     Set this parameter to true to also return kVMFolder object types found in
	the Source in addition to their Object subtrees.
	By default, VM folder objects are not returned.
	*/
	IncludeVMFolders *bool

	/* IsSecurityGroup.

	   If set to true, Groups which are security enabled will be returned.
	*/
	IsSecurityGroup *bool

	/* NodeID.

	     Specifies the entity id for the Node at any level within the Source entity
	hierarchy whose children are to be paginated.

	     Format: int64
	*/
	NodeID *int64

	/* NumLevels.

	     Specifies the expected number of levels from the root node to be returned
	in the entity hierarchy response.

	     Format: int32
	*/
	NumLevels *int32

	/* PageSize.

	   Specifies the maximum number of entities to be returned within the page.

	   Format: int64
	*/
	PageSize *int64

	/* PruneAggregationInfo.

	     Specifies whether to prune the aggregation information about the number
	of entities protected/unprotected.
	*/
	PruneAggregationInfo *bool

	/* PruneMembershipInfo.

	     Specifies whether to prune membershipInfo while fetching security groups.
	IsSecurityGroup should be true for pruning.
	*/
	PruneMembershipInfo *bool

	/* PruneNonCriticalInfo.

	     Specifies whether to prune non critical info within entities.
	Incase of VMs, virtual disk information will be pruned.
	Incase of Office365, metadata about user entities will be pruned.
	This can be used to limit the size of the response by caller.
	*/
	PruneNonCriticalInfo *bool

	/* RequestInitiatorType.

	     Specifies the type of the request. Possible values are UIUser and UIAuto,
	which means the request is triggered by user or is an auto refresh
	request. Services like magneto will use this to determine the priority
	of the requests, so that it can more intelligently handle overload
	situations by prioritizing higher priority requests.
	*/
	RequestInitiatorType *string

	/* Sids.

	   Filter the object subtree for the sids given in the list.
	*/
	Sids []string

	/* TenantIds.

	     TenantIds contains ids of the tenants for which objects are to be
	returned.
	*/
	TenantIds []string

	/* UseCachedData.

	     Specifies whether we can serve the GET request to the read replica cache.
	setting this to true ensures that the API request is served
	to the read replica. setting this to false will serve the request to
	the master.
	*/
	UseCachedData *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list protection sources params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProtectionSourcesParams) WithDefaults() *ListProtectionSourcesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list protection sources params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProtectionSourcesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list protection sources params
func (o *ListProtectionSourcesParams) WithTimeout(timeout time.Duration) *ListProtectionSourcesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list protection sources params
func (o *ListProtectionSourcesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list protection sources params
func (o *ListProtectionSourcesParams) WithContext(ctx context.Context) *ListProtectionSourcesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list protection sources params
func (o *ListProtectionSourcesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list protection sources params
func (o *ListProtectionSourcesParams) WithHTTPClient(client *http.Client) *ListProtectionSourcesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list protection sources params
func (o *ListProtectionSourcesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAfterCursorEntityID adds the afterCursorEntityID to the list protection sources params
func (o *ListProtectionSourcesParams) WithAfterCursorEntityID(afterCursorEntityID *int64) *ListProtectionSourcesParams {
	o.SetAfterCursorEntityID(afterCursorEntityID)
	return o
}

// SetAfterCursorEntityID adds the afterCursorEntityId to the list protection sources params
func (o *ListProtectionSourcesParams) SetAfterCursorEntityID(afterCursorEntityID *int64) {
	o.AfterCursorEntityID = afterCursorEntityID
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the list protection sources params
func (o *ListProtectionSourcesParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *ListProtectionSourcesParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the list protection sources params
func (o *ListProtectionSourcesParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithBeforeCursorEntityID adds the beforeCursorEntityID to the list protection sources params
func (o *ListProtectionSourcesParams) WithBeforeCursorEntityID(beforeCursorEntityID *int64) *ListProtectionSourcesParams {
	o.SetBeforeCursorEntityID(beforeCursorEntityID)
	return o
}

// SetBeforeCursorEntityID adds the beforeCursorEntityId to the list protection sources params
func (o *ListProtectionSourcesParams) SetBeforeCursorEntityID(beforeCursorEntityID *int64) {
	o.BeforeCursorEntityID = beforeCursorEntityID
}

// WithEncryptionKey adds the encryptionKey to the list protection sources params
func (o *ListProtectionSourcesParams) WithEncryptionKey(encryptionKey *string) *ListProtectionSourcesParams {
	o.SetEncryptionKey(encryptionKey)
	return o
}

// SetEncryptionKey adds the encryptionKey to the list protection sources params
func (o *ListProtectionSourcesParams) SetEncryptionKey(encryptionKey *string) {
	o.EncryptionKey = encryptionKey
}

// WithEnvironment adds the environment to the list protection sources params
func (o *ListProtectionSourcesParams) WithEnvironment(environment *string) *ListProtectionSourcesParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the list protection sources params
func (o *ListProtectionSourcesParams) SetEnvironment(environment *string) {
	o.Environment = environment
}

// WithEnvironments adds the environments to the list protection sources params
func (o *ListProtectionSourcesParams) WithEnvironments(environments []string) *ListProtectionSourcesParams {
	o.SetEnvironments(environments)
	return o
}

// SetEnvironments adds the environments to the list protection sources params
func (o *ListProtectionSourcesParams) SetEnvironments(environments []string) {
	o.Environments = environments
}

// WithExcludeAwsTypes adds the excludeAwsTypes to the list protection sources params
func (o *ListProtectionSourcesParams) WithExcludeAwsTypes(excludeAwsTypes []string) *ListProtectionSourcesParams {
	o.SetExcludeAwsTypes(excludeAwsTypes)
	return o
}

// SetExcludeAwsTypes adds the excludeAwsTypes to the list protection sources params
func (o *ListProtectionSourcesParams) SetExcludeAwsTypes(excludeAwsTypes []string) {
	o.ExcludeAwsTypes = excludeAwsTypes
}

// WithExcludeAzureTypes adds the excludeAzureTypes to the list protection sources params
func (o *ListProtectionSourcesParams) WithExcludeAzureTypes(excludeAzureTypes []string) *ListProtectionSourcesParams {
	o.SetExcludeAzureTypes(excludeAzureTypes)
	return o
}

// SetExcludeAzureTypes adds the excludeAzureTypes to the list protection sources params
func (o *ListProtectionSourcesParams) SetExcludeAzureTypes(excludeAzureTypes []string) {
	o.ExcludeAzureTypes = excludeAzureTypes
}

// WithExcludeKubernetesTypes adds the excludeKubernetesTypes to the list protection sources params
func (o *ListProtectionSourcesParams) WithExcludeKubernetesTypes(excludeKubernetesTypes []string) *ListProtectionSourcesParams {
	o.SetExcludeKubernetesTypes(excludeKubernetesTypes)
	return o
}

// SetExcludeKubernetesTypes adds the excludeKubernetesTypes to the list protection sources params
func (o *ListProtectionSourcesParams) SetExcludeKubernetesTypes(excludeKubernetesTypes []string) {
	o.ExcludeKubernetesTypes = excludeKubernetesTypes
}

// WithExcludeOffice365Types adds the excludeOffice365Types to the list protection sources params
func (o *ListProtectionSourcesParams) WithExcludeOffice365Types(excludeOffice365Types []string) *ListProtectionSourcesParams {
	o.SetExcludeOffice365Types(excludeOffice365Types)
	return o
}

// SetExcludeOffice365Types adds the excludeOffice365Types to the list protection sources params
func (o *ListProtectionSourcesParams) SetExcludeOffice365Types(excludeOffice365Types []string) {
	o.ExcludeOffice365Types = excludeOffice365Types
}

// WithExcludeTypes adds the excludeTypes to the list protection sources params
func (o *ListProtectionSourcesParams) WithExcludeTypes(excludeTypes []string) *ListProtectionSourcesParams {
	o.SetExcludeTypes(excludeTypes)
	return o
}

// SetExcludeTypes adds the excludeTypes to the list protection sources params
func (o *ListProtectionSourcesParams) SetExcludeTypes(excludeTypes []string) {
	o.ExcludeTypes = excludeTypes
}

// WithGetTeamsChannels adds the getTeamsChannels to the list protection sources params
func (o *ListProtectionSourcesParams) WithGetTeamsChannels(getTeamsChannels *bool) *ListProtectionSourcesParams {
	o.SetGetTeamsChannels(getTeamsChannels)
	return o
}

// SetGetTeamsChannels adds the getTeamsChannels to the list protection sources params
func (o *ListProtectionSourcesParams) SetGetTeamsChannels(getTeamsChannels *bool) {
	o.GetTeamsChannels = getTeamsChannels
}

// WithHasValidMailbox adds the hasValidMailbox to the list protection sources params
func (o *ListProtectionSourcesParams) WithHasValidMailbox(hasValidMailbox *bool) *ListProtectionSourcesParams {
	o.SetHasValidMailbox(hasValidMailbox)
	return o
}

// SetHasValidMailbox adds the hasValidMailbox to the list protection sources params
func (o *ListProtectionSourcesParams) SetHasValidMailbox(hasValidMailbox *bool) {
	o.HasValidMailbox = hasValidMailbox
}

// WithHasValidOnedrive adds the hasValidOnedrive to the list protection sources params
func (o *ListProtectionSourcesParams) WithHasValidOnedrive(hasValidOnedrive *bool) *ListProtectionSourcesParams {
	o.SetHasValidOnedrive(hasValidOnedrive)
	return o
}

// SetHasValidOnedrive adds the hasValidOnedrive to the list protection sources params
func (o *ListProtectionSourcesParams) SetHasValidOnedrive(hasValidOnedrive *bool) {
	o.HasValidOnedrive = hasValidOnedrive
}

// WithID adds the id to the list protection sources params
func (o *ListProtectionSourcesParams) WithID(id *int64) *ListProtectionSourcesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the list protection sources params
func (o *ListProtectionSourcesParams) SetID(id *int64) {
	o.ID = id
}

// WithIncludeDatastores adds the includeDatastores to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeDatastores(includeDatastores *bool) *ListProtectionSourcesParams {
	o.SetIncludeDatastores(includeDatastores)
	return o
}

// SetIncludeDatastores adds the includeDatastores to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeDatastores(includeDatastores *bool) {
	o.IncludeDatastores = includeDatastores
}

// WithIncludeEntityPermissionInfo adds the includeEntityPermissionInfo to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeEntityPermissionInfo(includeEntityPermissionInfo *bool) *ListProtectionSourcesParams {
	o.SetIncludeEntityPermissionInfo(includeEntityPermissionInfo)
	return o
}

// SetIncludeEntityPermissionInfo adds the includeEntityPermissionInfo to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeEntityPermissionInfo(includeEntityPermissionInfo *bool) {
	o.IncludeEntityPermissionInfo = includeEntityPermissionInfo
}

// WithIncludeExternalMetadata adds the includeExternalMetadata to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeExternalMetadata(includeExternalMetadata *bool) *ListProtectionSourcesParams {
	o.SetIncludeExternalMetadata(includeExternalMetadata)
	return o
}

// SetIncludeExternalMetadata adds the includeExternalMetadata to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeExternalMetadata(includeExternalMetadata *bool) {
	o.IncludeExternalMetadata = includeExternalMetadata
}

// WithIncludeNetworks adds the includeNetworks to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeNetworks(includeNetworks *bool) *ListProtectionSourcesParams {
	o.SetIncludeNetworks(includeNetworks)
	return o
}

// SetIncludeNetworks adds the includeNetworks to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeNetworks(includeNetworks *bool) {
	o.IncludeNetworks = includeNetworks
}

// WithIncludeObjectProtectionInfo adds the includeObjectProtectionInfo to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeObjectProtectionInfo(includeObjectProtectionInfo *bool) *ListProtectionSourcesParams {
	o.SetIncludeObjectProtectionInfo(includeObjectProtectionInfo)
	return o
}

// SetIncludeObjectProtectionInfo adds the includeObjectProtectionInfo to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeObjectProtectionInfo(includeObjectProtectionInfo *bool) {
	o.IncludeObjectProtectionInfo = includeObjectProtectionInfo
}

// WithIncludeSfdcFields adds the includeSfdcFields to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeSfdcFields(includeSfdcFields *bool) *ListProtectionSourcesParams {
	o.SetIncludeSfdcFields(includeSfdcFields)
	return o
}

// SetIncludeSfdcFields adds the includeSfdcFields to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeSfdcFields(includeSfdcFields *bool) {
	o.IncludeSfdcFields = includeSfdcFields
}

// WithIncludeSourceCredentials adds the includeSourceCredentials to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeSourceCredentials(includeSourceCredentials *bool) *ListProtectionSourcesParams {
	o.SetIncludeSourceCredentials(includeSourceCredentials)
	return o
}

// SetIncludeSourceCredentials adds the includeSourceCredentials to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeSourceCredentials(includeSourceCredentials *bool) {
	o.IncludeSourceCredentials = includeSourceCredentials
}

// WithIncludeSystemVApps adds the includeSystemVApps to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeSystemVApps(includeSystemVApps *bool) *ListProtectionSourcesParams {
	o.SetIncludeSystemVApps(includeSystemVApps)
	return o
}

// SetIncludeSystemVApps adds the includeSystemVApps to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeSystemVApps(includeSystemVApps *bool) {
	o.IncludeSystemVApps = includeSystemVApps
}

// WithIncludeVMFolders adds the includeVMFolders to the list protection sources params
func (o *ListProtectionSourcesParams) WithIncludeVMFolders(includeVMFolders *bool) *ListProtectionSourcesParams {
	o.SetIncludeVMFolders(includeVMFolders)
	return o
}

// SetIncludeVMFolders adds the includeVmFolders to the list protection sources params
func (o *ListProtectionSourcesParams) SetIncludeVMFolders(includeVMFolders *bool) {
	o.IncludeVMFolders = includeVMFolders
}

// WithIsSecurityGroup adds the isSecurityGroup to the list protection sources params
func (o *ListProtectionSourcesParams) WithIsSecurityGroup(isSecurityGroup *bool) *ListProtectionSourcesParams {
	o.SetIsSecurityGroup(isSecurityGroup)
	return o
}

// SetIsSecurityGroup adds the isSecurityGroup to the list protection sources params
func (o *ListProtectionSourcesParams) SetIsSecurityGroup(isSecurityGroup *bool) {
	o.IsSecurityGroup = isSecurityGroup
}

// WithNodeID adds the nodeID to the list protection sources params
func (o *ListProtectionSourcesParams) WithNodeID(nodeID *int64) *ListProtectionSourcesParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the list protection sources params
func (o *ListProtectionSourcesParams) SetNodeID(nodeID *int64) {
	o.NodeID = nodeID
}

// WithNumLevels adds the numLevels to the list protection sources params
func (o *ListProtectionSourcesParams) WithNumLevels(numLevels *int32) *ListProtectionSourcesParams {
	o.SetNumLevels(numLevels)
	return o
}

// SetNumLevels adds the numLevels to the list protection sources params
func (o *ListProtectionSourcesParams) SetNumLevels(numLevels *int32) {
	o.NumLevels = numLevels
}

// WithPageSize adds the pageSize to the list protection sources params
func (o *ListProtectionSourcesParams) WithPageSize(pageSize *int64) *ListProtectionSourcesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the list protection sources params
func (o *ListProtectionSourcesParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithPruneAggregationInfo adds the pruneAggregationInfo to the list protection sources params
func (o *ListProtectionSourcesParams) WithPruneAggregationInfo(pruneAggregationInfo *bool) *ListProtectionSourcesParams {
	o.SetPruneAggregationInfo(pruneAggregationInfo)
	return o
}

// SetPruneAggregationInfo adds the pruneAggregationInfo to the list protection sources params
func (o *ListProtectionSourcesParams) SetPruneAggregationInfo(pruneAggregationInfo *bool) {
	o.PruneAggregationInfo = pruneAggregationInfo
}

// WithPruneMembershipInfo adds the pruneMembershipInfo to the list protection sources params
func (o *ListProtectionSourcesParams) WithPruneMembershipInfo(pruneMembershipInfo *bool) *ListProtectionSourcesParams {
	o.SetPruneMembershipInfo(pruneMembershipInfo)
	return o
}

// SetPruneMembershipInfo adds the pruneMembershipInfo to the list protection sources params
func (o *ListProtectionSourcesParams) SetPruneMembershipInfo(pruneMembershipInfo *bool) {
	o.PruneMembershipInfo = pruneMembershipInfo
}

// WithPruneNonCriticalInfo adds the pruneNonCriticalInfo to the list protection sources params
func (o *ListProtectionSourcesParams) WithPruneNonCriticalInfo(pruneNonCriticalInfo *bool) *ListProtectionSourcesParams {
	o.SetPruneNonCriticalInfo(pruneNonCriticalInfo)
	return o
}

// SetPruneNonCriticalInfo adds the pruneNonCriticalInfo to the list protection sources params
func (o *ListProtectionSourcesParams) SetPruneNonCriticalInfo(pruneNonCriticalInfo *bool) {
	o.PruneNonCriticalInfo = pruneNonCriticalInfo
}

// WithRequestInitiatorType adds the requestInitiatorType to the list protection sources params
func (o *ListProtectionSourcesParams) WithRequestInitiatorType(requestInitiatorType *string) *ListProtectionSourcesParams {
	o.SetRequestInitiatorType(requestInitiatorType)
	return o
}

// SetRequestInitiatorType adds the requestInitiatorType to the list protection sources params
func (o *ListProtectionSourcesParams) SetRequestInitiatorType(requestInitiatorType *string) {
	o.RequestInitiatorType = requestInitiatorType
}

// WithSids adds the sids to the list protection sources params
func (o *ListProtectionSourcesParams) WithSids(sids []string) *ListProtectionSourcesParams {
	o.SetSids(sids)
	return o
}

// SetSids adds the sids to the list protection sources params
func (o *ListProtectionSourcesParams) SetSids(sids []string) {
	o.Sids = sids
}

// WithTenantIds adds the tenantIds to the list protection sources params
func (o *ListProtectionSourcesParams) WithTenantIds(tenantIds []string) *ListProtectionSourcesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the list protection sources params
func (o *ListProtectionSourcesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithUseCachedData adds the useCachedData to the list protection sources params
func (o *ListProtectionSourcesParams) WithUseCachedData(useCachedData *bool) *ListProtectionSourcesParams {
	o.SetUseCachedData(useCachedData)
	return o
}

// SetUseCachedData adds the useCachedData to the list protection sources params
func (o *ListProtectionSourcesParams) SetUseCachedData(useCachedData *bool) {
	o.UseCachedData = useCachedData
}

// WriteToRequest writes these params to a swagger request
func (o *ListProtectionSourcesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AfterCursorEntityID != nil {

		// query param afterCursorEntityId
		var qrAfterCursorEntityID int64

		if o.AfterCursorEntityID != nil {
			qrAfterCursorEntityID = *o.AfterCursorEntityID
		}
		qAfterCursorEntityID := swag.FormatInt64(qrAfterCursorEntityID)
		if qAfterCursorEntityID != "" {

			if err := r.SetQueryParam("afterCursorEntityId", qAfterCursorEntityID); err != nil {
				return err
			}
		}
	}

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.BeforeCursorEntityID != nil {

		// query param beforeCursorEntityId
		var qrBeforeCursorEntityID int64

		if o.BeforeCursorEntityID != nil {
			qrBeforeCursorEntityID = *o.BeforeCursorEntityID
		}
		qBeforeCursorEntityID := swag.FormatInt64(qrBeforeCursorEntityID)
		if qBeforeCursorEntityID != "" {

			if err := r.SetQueryParam("beforeCursorEntityId", qBeforeCursorEntityID); err != nil {
				return err
			}
		}
	}

	if o.EncryptionKey != nil {

		// query param encryptionKey
		var qrEncryptionKey string

		if o.EncryptionKey != nil {
			qrEncryptionKey = *o.EncryptionKey
		}
		qEncryptionKey := qrEncryptionKey
		if qEncryptionKey != "" {

			if err := r.SetQueryParam("encryptionKey", qEncryptionKey); err != nil {
				return err
			}
		}
	}

	if o.Environment != nil {

		// query param environment
		var qrEnvironment string

		if o.Environment != nil {
			qrEnvironment = *o.Environment
		}
		qEnvironment := qrEnvironment
		if qEnvironment != "" {

			if err := r.SetQueryParam("environment", qEnvironment); err != nil {
				return err
			}
		}
	}

	if o.Environments != nil {

		// binding items for environments
		joinedEnvironments := o.bindParamEnvironments(reg)

		// query array param environments
		if err := r.SetQueryParam("environments", joinedEnvironments...); err != nil {
			return err
		}
	}

	if o.ExcludeAwsTypes != nil {

		// binding items for excludeAwsTypes
		joinedExcludeAwsTypes := o.bindParamExcludeAwsTypes(reg)

		// query array param excludeAwsTypes
		if err := r.SetQueryParam("excludeAwsTypes", joinedExcludeAwsTypes...); err != nil {
			return err
		}
	}

	if o.ExcludeAzureTypes != nil {

		// binding items for excludeAzureTypes
		joinedExcludeAzureTypes := o.bindParamExcludeAzureTypes(reg)

		// query array param excludeAzureTypes
		if err := r.SetQueryParam("excludeAzureTypes", joinedExcludeAzureTypes...); err != nil {
			return err
		}
	}

	if o.ExcludeKubernetesTypes != nil {

		// binding items for excludeKubernetesTypes
		joinedExcludeKubernetesTypes := o.bindParamExcludeKubernetesTypes(reg)

		// query array param excludeKubernetesTypes
		if err := r.SetQueryParam("excludeKubernetesTypes", joinedExcludeKubernetesTypes...); err != nil {
			return err
		}
	}

	if o.ExcludeOffice365Types != nil {

		// binding items for excludeOffice365Types
		joinedExcludeOffice365Types := o.bindParamExcludeOffice365Types(reg)

		// query array param excludeOffice365Types
		if err := r.SetQueryParam("excludeOffice365Types", joinedExcludeOffice365Types...); err != nil {
			return err
		}
	}

	if o.ExcludeTypes != nil {

		// binding items for excludeTypes
		joinedExcludeTypes := o.bindParamExcludeTypes(reg)

		// query array param excludeTypes
		if err := r.SetQueryParam("excludeTypes", joinedExcludeTypes...); err != nil {
			return err
		}
	}

	if o.GetTeamsChannels != nil {

		// query param getTeamsChannels
		var qrGetTeamsChannels bool

		if o.GetTeamsChannels != nil {
			qrGetTeamsChannels = *o.GetTeamsChannels
		}
		qGetTeamsChannels := swag.FormatBool(qrGetTeamsChannels)
		if qGetTeamsChannels != "" {

			if err := r.SetQueryParam("getTeamsChannels", qGetTeamsChannels); err != nil {
				return err
			}
		}
	}

	if o.HasValidMailbox != nil {

		// query param hasValidMailbox
		var qrHasValidMailbox bool

		if o.HasValidMailbox != nil {
			qrHasValidMailbox = *o.HasValidMailbox
		}
		qHasValidMailbox := swag.FormatBool(qrHasValidMailbox)
		if qHasValidMailbox != "" {

			if err := r.SetQueryParam("hasValidMailbox", qHasValidMailbox); err != nil {
				return err
			}
		}
	}

	if o.HasValidOnedrive != nil {

		// query param hasValidOnedrive
		var qrHasValidOnedrive bool

		if o.HasValidOnedrive != nil {
			qrHasValidOnedrive = *o.HasValidOnedrive
		}
		qHasValidOnedrive := swag.FormatBool(qrHasValidOnedrive)
		if qHasValidOnedrive != "" {

			if err := r.SetQueryParam("hasValidOnedrive", qHasValidOnedrive); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID int64

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := swag.FormatInt64(qrID)
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IncludeDatastores != nil {

		// query param includeDatastores
		var qrIncludeDatastores bool

		if o.IncludeDatastores != nil {
			qrIncludeDatastores = *o.IncludeDatastores
		}
		qIncludeDatastores := swag.FormatBool(qrIncludeDatastores)
		if qIncludeDatastores != "" {

			if err := r.SetQueryParam("includeDatastores", qIncludeDatastores); err != nil {
				return err
			}
		}
	}

	if o.IncludeEntityPermissionInfo != nil {

		// query param includeEntityPermissionInfo
		var qrIncludeEntityPermissionInfo bool

		if o.IncludeEntityPermissionInfo != nil {
			qrIncludeEntityPermissionInfo = *o.IncludeEntityPermissionInfo
		}
		qIncludeEntityPermissionInfo := swag.FormatBool(qrIncludeEntityPermissionInfo)
		if qIncludeEntityPermissionInfo != "" {

			if err := r.SetQueryParam("includeEntityPermissionInfo", qIncludeEntityPermissionInfo); err != nil {
				return err
			}
		}
	}

	if o.IncludeExternalMetadata != nil {

		// query param includeExternalMetadata
		var qrIncludeExternalMetadata bool

		if o.IncludeExternalMetadata != nil {
			qrIncludeExternalMetadata = *o.IncludeExternalMetadata
		}
		qIncludeExternalMetadata := swag.FormatBool(qrIncludeExternalMetadata)
		if qIncludeExternalMetadata != "" {

			if err := r.SetQueryParam("includeExternalMetadata", qIncludeExternalMetadata); err != nil {
				return err
			}
		}
	}

	if o.IncludeNetworks != nil {

		// query param includeNetworks
		var qrIncludeNetworks bool

		if o.IncludeNetworks != nil {
			qrIncludeNetworks = *o.IncludeNetworks
		}
		qIncludeNetworks := swag.FormatBool(qrIncludeNetworks)
		if qIncludeNetworks != "" {

			if err := r.SetQueryParam("includeNetworks", qIncludeNetworks); err != nil {
				return err
			}
		}
	}

	if o.IncludeObjectProtectionInfo != nil {

		// query param includeObjectProtectionInfo
		var qrIncludeObjectProtectionInfo bool

		if o.IncludeObjectProtectionInfo != nil {
			qrIncludeObjectProtectionInfo = *o.IncludeObjectProtectionInfo
		}
		qIncludeObjectProtectionInfo := swag.FormatBool(qrIncludeObjectProtectionInfo)
		if qIncludeObjectProtectionInfo != "" {

			if err := r.SetQueryParam("includeObjectProtectionInfo", qIncludeObjectProtectionInfo); err != nil {
				return err
			}
		}
	}

	if o.IncludeSfdcFields != nil {

		// query param includeSfdcFields
		var qrIncludeSfdcFields bool

		if o.IncludeSfdcFields != nil {
			qrIncludeSfdcFields = *o.IncludeSfdcFields
		}
		qIncludeSfdcFields := swag.FormatBool(qrIncludeSfdcFields)
		if qIncludeSfdcFields != "" {

			if err := r.SetQueryParam("includeSfdcFields", qIncludeSfdcFields); err != nil {
				return err
			}
		}
	}

	if o.IncludeSourceCredentials != nil {

		// query param includeSourceCredentials
		var qrIncludeSourceCredentials bool

		if o.IncludeSourceCredentials != nil {
			qrIncludeSourceCredentials = *o.IncludeSourceCredentials
		}
		qIncludeSourceCredentials := swag.FormatBool(qrIncludeSourceCredentials)
		if qIncludeSourceCredentials != "" {

			if err := r.SetQueryParam("includeSourceCredentials", qIncludeSourceCredentials); err != nil {
				return err
			}
		}
	}

	if o.IncludeSystemVApps != nil {

		// query param includeSystemVApps
		var qrIncludeSystemVApps bool

		if o.IncludeSystemVApps != nil {
			qrIncludeSystemVApps = *o.IncludeSystemVApps
		}
		qIncludeSystemVApps := swag.FormatBool(qrIncludeSystemVApps)
		if qIncludeSystemVApps != "" {

			if err := r.SetQueryParam("includeSystemVApps", qIncludeSystemVApps); err != nil {
				return err
			}
		}
	}

	if o.IncludeVMFolders != nil {

		// query param includeVMFolders
		var qrIncludeVMFolders bool

		if o.IncludeVMFolders != nil {
			qrIncludeVMFolders = *o.IncludeVMFolders
		}
		qIncludeVMFolders := swag.FormatBool(qrIncludeVMFolders)
		if qIncludeVMFolders != "" {

			if err := r.SetQueryParam("includeVMFolders", qIncludeVMFolders); err != nil {
				return err
			}
		}
	}

	if o.IsSecurityGroup != nil {

		// query param isSecurityGroup
		var qrIsSecurityGroup bool

		if o.IsSecurityGroup != nil {
			qrIsSecurityGroup = *o.IsSecurityGroup
		}
		qIsSecurityGroup := swag.FormatBool(qrIsSecurityGroup)
		if qIsSecurityGroup != "" {

			if err := r.SetQueryParam("isSecurityGroup", qIsSecurityGroup); err != nil {
				return err
			}
		}
	}

	if o.NodeID != nil {

		// query param nodeId
		var qrNodeID int64

		if o.NodeID != nil {
			qrNodeID = *o.NodeID
		}
		qNodeID := swag.FormatInt64(qrNodeID)
		if qNodeID != "" {

			if err := r.SetQueryParam("nodeId", qNodeID); err != nil {
				return err
			}
		}
	}

	if o.NumLevels != nil {

		// query param numLevels
		var qrNumLevels int32

		if o.NumLevels != nil {
			qrNumLevels = *o.NumLevels
		}
		qNumLevels := swag.FormatInt32(qrNumLevels)
		if qNumLevels != "" {

			if err := r.SetQueryParam("numLevels", qNumLevels); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.PruneAggregationInfo != nil {

		// query param pruneAggregationInfo
		var qrPruneAggregationInfo bool

		if o.PruneAggregationInfo != nil {
			qrPruneAggregationInfo = *o.PruneAggregationInfo
		}
		qPruneAggregationInfo := swag.FormatBool(qrPruneAggregationInfo)
		if qPruneAggregationInfo != "" {

			if err := r.SetQueryParam("pruneAggregationInfo", qPruneAggregationInfo); err != nil {
				return err
			}
		}
	}

	if o.PruneMembershipInfo != nil {

		// query param pruneMembershipInfo
		var qrPruneMembershipInfo bool

		if o.PruneMembershipInfo != nil {
			qrPruneMembershipInfo = *o.PruneMembershipInfo
		}
		qPruneMembershipInfo := swag.FormatBool(qrPruneMembershipInfo)
		if qPruneMembershipInfo != "" {

			if err := r.SetQueryParam("pruneMembershipInfo", qPruneMembershipInfo); err != nil {
				return err
			}
		}
	}

	if o.PruneNonCriticalInfo != nil {

		// query param pruneNonCriticalInfo
		var qrPruneNonCriticalInfo bool

		if o.PruneNonCriticalInfo != nil {
			qrPruneNonCriticalInfo = *o.PruneNonCriticalInfo
		}
		qPruneNonCriticalInfo := swag.FormatBool(qrPruneNonCriticalInfo)
		if qPruneNonCriticalInfo != "" {

			if err := r.SetQueryParam("pruneNonCriticalInfo", qPruneNonCriticalInfo); err != nil {
				return err
			}
		}
	}

	if o.RequestInitiatorType != nil {

		// header param requestInitiatorType
		if err := r.SetHeaderParam("requestInitiatorType", *o.RequestInitiatorType); err != nil {
			return err
		}
	}

	if o.Sids != nil {

		// binding items for sids
		joinedSids := o.bindParamSids(reg)

		// query array param sids
		if err := r.SetQueryParam("sids", joinedSids...); err != nil {
			return err
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.UseCachedData != nil {

		// query param useCachedData
		var qrUseCachedData bool

		if o.UseCachedData != nil {
			qrUseCachedData = *o.UseCachedData
		}
		qUseCachedData := swag.FormatBool(qrUseCachedData)
		if qUseCachedData != "" {

			if err := r.SetQueryParam("useCachedData", qUseCachedData); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamListProtectionSources binds the parameter environments
func (o *ListProtectionSourcesParams) bindParamEnvironments(formats strfmt.Registry) []string {
	environmentsIR := o.Environments

	var environmentsIC []string
	for _, environmentsIIR := range environmentsIR { // explode []string

		environmentsIIV := environmentsIIR // string as string
		environmentsIC = append(environmentsIC, environmentsIIV)
	}

	// items.CollectionFormat: ""
	environmentsIS := swag.JoinByFormat(environmentsIC, "")

	return environmentsIS
}

// bindParamListProtectionSources binds the parameter excludeAwsTypes
func (o *ListProtectionSourcesParams) bindParamExcludeAwsTypes(formats strfmt.Registry) []string {
	excludeAwsTypesIR := o.ExcludeAwsTypes

	var excludeAwsTypesIC []string
	for _, excludeAwsTypesIIR := range excludeAwsTypesIR { // explode []string

		excludeAwsTypesIIV := excludeAwsTypesIIR // string as string
		excludeAwsTypesIC = append(excludeAwsTypesIC, excludeAwsTypesIIV)
	}

	// items.CollectionFormat: ""
	excludeAwsTypesIS := swag.JoinByFormat(excludeAwsTypesIC, "")

	return excludeAwsTypesIS
}

// bindParamListProtectionSources binds the parameter excludeAzureTypes
func (o *ListProtectionSourcesParams) bindParamExcludeAzureTypes(formats strfmt.Registry) []string {
	excludeAzureTypesIR := o.ExcludeAzureTypes

	var excludeAzureTypesIC []string
	for _, excludeAzureTypesIIR := range excludeAzureTypesIR { // explode []string

		excludeAzureTypesIIV := excludeAzureTypesIIR // string as string
		excludeAzureTypesIC = append(excludeAzureTypesIC, excludeAzureTypesIIV)
	}

	// items.CollectionFormat: ""
	excludeAzureTypesIS := swag.JoinByFormat(excludeAzureTypesIC, "")

	return excludeAzureTypesIS
}

// bindParamListProtectionSources binds the parameter excludeKubernetesTypes
func (o *ListProtectionSourcesParams) bindParamExcludeKubernetesTypes(formats strfmt.Registry) []string {
	excludeKubernetesTypesIR := o.ExcludeKubernetesTypes

	var excludeKubernetesTypesIC []string
	for _, excludeKubernetesTypesIIR := range excludeKubernetesTypesIR { // explode []string

		excludeKubernetesTypesIIV := excludeKubernetesTypesIIR // string as string
		excludeKubernetesTypesIC = append(excludeKubernetesTypesIC, excludeKubernetesTypesIIV)
	}

	// items.CollectionFormat: ""
	excludeKubernetesTypesIS := swag.JoinByFormat(excludeKubernetesTypesIC, "")

	return excludeKubernetesTypesIS
}

// bindParamListProtectionSources binds the parameter excludeOffice365Types
func (o *ListProtectionSourcesParams) bindParamExcludeOffice365Types(formats strfmt.Registry) []string {
	excludeOffice365TypesIR := o.ExcludeOffice365Types

	var excludeOffice365TypesIC []string
	for _, excludeOffice365TypesIIR := range excludeOffice365TypesIR { // explode []string

		excludeOffice365TypesIIV := excludeOffice365TypesIIR // string as string
		excludeOffice365TypesIC = append(excludeOffice365TypesIC, excludeOffice365TypesIIV)
	}

	// items.CollectionFormat: ""
	excludeOffice365TypesIS := swag.JoinByFormat(excludeOffice365TypesIC, "")

	return excludeOffice365TypesIS
}

// bindParamListProtectionSources binds the parameter excludeTypes
func (o *ListProtectionSourcesParams) bindParamExcludeTypes(formats strfmt.Registry) []string {
	excludeTypesIR := o.ExcludeTypes

	var excludeTypesIC []string
	for _, excludeTypesIIR := range excludeTypesIR { // explode []string

		excludeTypesIIV := excludeTypesIIR // string as string
		excludeTypesIC = append(excludeTypesIC, excludeTypesIIV)
	}

	// items.CollectionFormat: ""
	excludeTypesIS := swag.JoinByFormat(excludeTypesIC, "")

	return excludeTypesIS
}

// bindParamListProtectionSources binds the parameter sids
func (o *ListProtectionSourcesParams) bindParamSids(formats strfmt.Registry) []string {
	sidsIR := o.Sids

	var sidsIC []string
	for _, sidsIIR := range sidsIR { // explode []string

		sidsIIV := sidsIIR // string as string
		sidsIC = append(sidsIC, sidsIIV)
	}

	// items.CollectionFormat: ""
	sidsIS := swag.JoinByFormat(sidsIC, "")

	return sidsIS
}

// bindParamListProtectionSources binds the parameter tenantIds
func (o *ListProtectionSourcesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
