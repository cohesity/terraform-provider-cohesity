// Code generated by go-swagger; DO NOT EDIT.

package protection_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProtectionSourcesObjectsParams creates a new GetProtectionSourcesObjectsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProtectionSourcesObjectsParams() *GetProtectionSourcesObjectsParams {
	return &GetProtectionSourcesObjectsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProtectionSourcesObjectsParamsWithTimeout creates a new GetProtectionSourcesObjectsParams object
// with the ability to set a timeout on a request.
func NewGetProtectionSourcesObjectsParamsWithTimeout(timeout time.Duration) *GetProtectionSourcesObjectsParams {
	return &GetProtectionSourcesObjectsParams{
		timeout: timeout,
	}
}

// NewGetProtectionSourcesObjectsParamsWithContext creates a new GetProtectionSourcesObjectsParams object
// with the ability to set a context for a request.
func NewGetProtectionSourcesObjectsParamsWithContext(ctx context.Context) *GetProtectionSourcesObjectsParams {
	return &GetProtectionSourcesObjectsParams{
		Context: ctx,
	}
}

// NewGetProtectionSourcesObjectsParamsWithHTTPClient creates a new GetProtectionSourcesObjectsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProtectionSourcesObjectsParamsWithHTTPClient(client *http.Client) *GetProtectionSourcesObjectsParams {
	return &GetProtectionSourcesObjectsParams{
		HTTPClient: client,
	}
}

/*
GetProtectionSourcesObjectsParams contains all the parameters to send to the API endpoint

	for the get protection sources objects operation.

	Typically these are written to a http.Request.
*/
type GetProtectionSourcesObjectsParams struct {

	/* ObjectIds.

	   Specifies the ids of the Protection Source objects to return.
	*/
	ObjectIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get protection sources objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionSourcesObjectsParams) WithDefaults() *GetProtectionSourcesObjectsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get protection sources objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionSourcesObjectsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) WithTimeout(timeout time.Duration) *GetProtectionSourcesObjectsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) WithContext(ctx context.Context) *GetProtectionSourcesObjectsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) WithHTTPClient(client *http.Client) *GetProtectionSourcesObjectsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithObjectIds adds the objectIds to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) WithObjectIds(objectIds []int64) *GetProtectionSourcesObjectsParams {
	o.SetObjectIds(objectIds)
	return o
}

// SetObjectIds adds the objectIds to the get protection sources objects params
func (o *GetProtectionSourcesObjectsParams) SetObjectIds(objectIds []int64) {
	o.ObjectIds = objectIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetProtectionSourcesObjectsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ObjectIds != nil {

		// binding items for objectIds
		joinedObjectIds := o.bindParamObjectIds(reg)

		// query array param objectIds
		if err := r.SetQueryParam("objectIds", joinedObjectIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetProtectionSourcesObjects binds the parameter objectIds
func (o *GetProtectionSourcesObjectsParams) bindParamObjectIds(formats strfmt.Registry) []string {
	objectIdsIR := o.ObjectIds

	var objectIdsIC []string
	for _, objectIdsIIR := range objectIdsIR { // explode []int64

		objectIdsIIV := swag.FormatInt64(objectIdsIIR) // int64 as string
		objectIdsIC = append(objectIdsIC, objectIdsIIV)
	}

	// items.CollectionFormat: ""
	objectIdsIS := swag.JoinByFormat(objectIdsIC, "")

	return objectIdsIS
}
