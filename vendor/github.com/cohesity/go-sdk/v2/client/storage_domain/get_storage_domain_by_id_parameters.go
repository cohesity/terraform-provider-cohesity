// Code generated by go-swagger; DO NOT EDIT.

package storage_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetStorageDomainByIDParams creates a new GetStorageDomainByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetStorageDomainByIDParams() *GetStorageDomainByIDParams {
	return &GetStorageDomainByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetStorageDomainByIDParamsWithTimeout creates a new GetStorageDomainByIDParams object
// with the ability to set a timeout on a request.
func NewGetStorageDomainByIDParamsWithTimeout(timeout time.Duration) *GetStorageDomainByIDParams {
	return &GetStorageDomainByIDParams{
		timeout: timeout,
	}
}

// NewGetStorageDomainByIDParamsWithContext creates a new GetStorageDomainByIDParams object
// with the ability to set a context for a request.
func NewGetStorageDomainByIDParamsWithContext(ctx context.Context) *GetStorageDomainByIDParams {
	return &GetStorageDomainByIDParams{
		Context: ctx,
	}
}

// NewGetStorageDomainByIDParamsWithHTTPClient creates a new GetStorageDomainByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetStorageDomainByIDParamsWithHTTPClient(client *http.Client) *GetStorageDomainByIDParams {
	return &GetStorageDomainByIDParams{
		HTTPClient: client,
	}
}

/*
GetStorageDomainByIDParams contains all the parameters to send to the API endpoint

	for the get storage domain by Id operation.

	Typically these are written to a http.Request.
*/
type GetStorageDomainByIDParams struct {

	/* ID.

	   Specified the Storage Domain id to fetch.

	   Format: int64
	*/
	ID int64

	/* IncludeFileCountBySize.

	   Whether to include Storage Domain file count by size.
	*/
	IncludeFileCountBySize *bool

	/* IncludeStats.

	   Whether to include Storage Domain stats in response.
	*/
	IncludeStats *bool

	/* IncludeTenants.

	   Whether to include Storage Domains that belong to Tenants. This param is only effective when the User has privilege to view Storage Domain details of a tenant.
	*/
	IncludeTenants *bool

	/* IncludeTimeSeriesSchema.

	   Whether to include Storage Domain time series schema in response.
	*/
	IncludeTimeSeriesSchema *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get storage domain by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetStorageDomainByIDParams) WithDefaults() *GetStorageDomainByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get storage domain by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetStorageDomainByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithTimeout(timeout time.Duration) *GetStorageDomainByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithContext(ctx context.Context) *GetStorageDomainByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithHTTPClient(client *http.Client) *GetStorageDomainByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithID(id int64) *GetStorageDomainByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetID(id int64) {
	o.ID = id
}

// WithIncludeFileCountBySize adds the includeFileCountBySize to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithIncludeFileCountBySize(includeFileCountBySize *bool) *GetStorageDomainByIDParams {
	o.SetIncludeFileCountBySize(includeFileCountBySize)
	return o
}

// SetIncludeFileCountBySize adds the includeFileCountBySize to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetIncludeFileCountBySize(includeFileCountBySize *bool) {
	o.IncludeFileCountBySize = includeFileCountBySize
}

// WithIncludeStats adds the includeStats to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithIncludeStats(includeStats *bool) *GetStorageDomainByIDParams {
	o.SetIncludeStats(includeStats)
	return o
}

// SetIncludeStats adds the includeStats to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetIncludeStats(includeStats *bool) {
	o.IncludeStats = includeStats
}

// WithIncludeTenants adds the includeTenants to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithIncludeTenants(includeTenants *bool) *GetStorageDomainByIDParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithIncludeTimeSeriesSchema adds the includeTimeSeriesSchema to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) WithIncludeTimeSeriesSchema(includeTimeSeriesSchema *bool) *GetStorageDomainByIDParams {
	o.SetIncludeTimeSeriesSchema(includeTimeSeriesSchema)
	return o
}

// SetIncludeTimeSeriesSchema adds the includeTimeSeriesSchema to the get storage domain by Id params
func (o *GetStorageDomainByIDParams) SetIncludeTimeSeriesSchema(includeTimeSeriesSchema *bool) {
	o.IncludeTimeSeriesSchema = includeTimeSeriesSchema
}

// WriteToRequest writes these params to a swagger request
func (o *GetStorageDomainByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.IncludeFileCountBySize != nil {

		// query param includeFileCountBySize
		var qrIncludeFileCountBySize bool

		if o.IncludeFileCountBySize != nil {
			qrIncludeFileCountBySize = *o.IncludeFileCountBySize
		}
		qIncludeFileCountBySize := swag.FormatBool(qrIncludeFileCountBySize)
		if qIncludeFileCountBySize != "" {

			if err := r.SetQueryParam("includeFileCountBySize", qIncludeFileCountBySize); err != nil {
				return err
			}
		}
	}

	if o.IncludeStats != nil {

		// query param includeStats
		var qrIncludeStats bool

		if o.IncludeStats != nil {
			qrIncludeStats = *o.IncludeStats
		}
		qIncludeStats := swag.FormatBool(qrIncludeStats)
		if qIncludeStats != "" {

			if err := r.SetQueryParam("includeStats", qIncludeStats); err != nil {
				return err
			}
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.IncludeTimeSeriesSchema != nil {

		// query param includeTimeSeriesSchema
		var qrIncludeTimeSeriesSchema bool

		if o.IncludeTimeSeriesSchema != nil {
			qrIncludeTimeSeriesSchema = *o.IncludeTimeSeriesSchema
		}
		qIncludeTimeSeriesSchema := swag.FormatBool(qrIncludeTimeSeriesSchema)
		if qIncludeTimeSeriesSchema != "" {

			if err := r.SetQueryParam("includeTimeSeriesSchema", qIncludeTimeSeriesSchema); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
