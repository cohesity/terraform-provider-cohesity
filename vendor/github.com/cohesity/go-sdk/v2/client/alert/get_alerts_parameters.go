// Code generated by go-swagger; DO NOT EDIT.

package alert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAlertsParams creates a new GetAlertsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAlertsParams() *GetAlertsParams {
	return &GetAlertsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAlertsParamsWithTimeout creates a new GetAlertsParams object
// with the ability to set a timeout on a request.
func NewGetAlertsParamsWithTimeout(timeout time.Duration) *GetAlertsParams {
	return &GetAlertsParams{
		timeout: timeout,
	}
}

// NewGetAlertsParamsWithContext creates a new GetAlertsParams object
// with the ability to set a context for a request.
func NewGetAlertsParamsWithContext(ctx context.Context) *GetAlertsParams {
	return &GetAlertsParams{
		Context: ctx,
	}
}

// NewGetAlertsParamsWithHTTPClient creates a new GetAlertsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAlertsParamsWithHTTPClient(client *http.Client) *GetAlertsParams {
	return &GetAlertsParams{
		HTTPClient: client,
	}
}

/*
GetAlertsParams contains all the parameters to send to the API endpoint

	for the get alerts operation.

	Typically these are written to a http.Request.
*/
type GetAlertsParams struct {

	/* AlertCategories.

	   Filter by list of alert categories.
	*/
	AlertCategories []string

	/* AlertIds.

	   Filter by list of alert ids.
	*/
	AlertIds []string

	/* AlertName.

	   Specifies name of alert to filter alerts by.
	*/
	AlertName *string

	/* AlertSeverities.

	   Filter by list of alert severity types.
	*/
	AlertSeverities []string

	/* AlertStates.

	   Filter by list of alert states.
	*/
	AlertStates []string

	/* AlertTypeBuckets.

	   Filter by list of alert type buckets.
	*/
	AlertTypeBuckets []string

	/* AlertTypes.

	   Filter by list of alert types.
	*/
	AlertTypes []int32

	/* AllUnderHierarchy.

	   Filter by objects of all the tenants under the hierarchy of the logged in user's organization.
	*/
	AllUnderHierarchy *bool

	/* EndTimeUsecs.

	   Specifies end time Unix epoch time in microseconds to filter alerts by.

	   Format: int64
	*/
	EndTimeUsecs *int64

	/* MaxAlerts.

	   Specifies maximum number of alerts to return.The default value is 100 and maximum allowed value is 1000

	   Format: int32
	*/
	MaxAlerts *int32

	/* PropertyKey.

	   Specifies name of the property to filter alerts by.
	*/
	PropertyKey *string

	/* PropertyValue.

	   Specifies value of the property to filter alerts by.
	*/
	PropertyValue *string

	/* ResolutionIds.

	   Specifies alert resolution ids to filter alerts by.
	*/
	ResolutionIds []int64

	/* StartTimeUsecs.

	   Specifies start time Unix epoch time in microseconds to filter alerts by.

	   Format: int64
	*/
	StartTimeUsecs *int64

	/* TenantIds.

	   Filter by tenant ids.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get alerts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAlertsParams) WithDefaults() *GetAlertsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get alerts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAlertsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get alerts params
func (o *GetAlertsParams) WithTimeout(timeout time.Duration) *GetAlertsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get alerts params
func (o *GetAlertsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get alerts params
func (o *GetAlertsParams) WithContext(ctx context.Context) *GetAlertsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get alerts params
func (o *GetAlertsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get alerts params
func (o *GetAlertsParams) WithHTTPClient(client *http.Client) *GetAlertsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get alerts params
func (o *GetAlertsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAlertCategories adds the alertCategories to the get alerts params
func (o *GetAlertsParams) WithAlertCategories(alertCategories []string) *GetAlertsParams {
	o.SetAlertCategories(alertCategories)
	return o
}

// SetAlertCategories adds the alertCategories to the get alerts params
func (o *GetAlertsParams) SetAlertCategories(alertCategories []string) {
	o.AlertCategories = alertCategories
}

// WithAlertIds adds the alertIds to the get alerts params
func (o *GetAlertsParams) WithAlertIds(alertIds []string) *GetAlertsParams {
	o.SetAlertIds(alertIds)
	return o
}

// SetAlertIds adds the alertIds to the get alerts params
func (o *GetAlertsParams) SetAlertIds(alertIds []string) {
	o.AlertIds = alertIds
}

// WithAlertName adds the alertName to the get alerts params
func (o *GetAlertsParams) WithAlertName(alertName *string) *GetAlertsParams {
	o.SetAlertName(alertName)
	return o
}

// SetAlertName adds the alertName to the get alerts params
func (o *GetAlertsParams) SetAlertName(alertName *string) {
	o.AlertName = alertName
}

// WithAlertSeverities adds the alertSeverities to the get alerts params
func (o *GetAlertsParams) WithAlertSeverities(alertSeverities []string) *GetAlertsParams {
	o.SetAlertSeverities(alertSeverities)
	return o
}

// SetAlertSeverities adds the alertSeverities to the get alerts params
func (o *GetAlertsParams) SetAlertSeverities(alertSeverities []string) {
	o.AlertSeverities = alertSeverities
}

// WithAlertStates adds the alertStates to the get alerts params
func (o *GetAlertsParams) WithAlertStates(alertStates []string) *GetAlertsParams {
	o.SetAlertStates(alertStates)
	return o
}

// SetAlertStates adds the alertStates to the get alerts params
func (o *GetAlertsParams) SetAlertStates(alertStates []string) {
	o.AlertStates = alertStates
}

// WithAlertTypeBuckets adds the alertTypeBuckets to the get alerts params
func (o *GetAlertsParams) WithAlertTypeBuckets(alertTypeBuckets []string) *GetAlertsParams {
	o.SetAlertTypeBuckets(alertTypeBuckets)
	return o
}

// SetAlertTypeBuckets adds the alertTypeBuckets to the get alerts params
func (o *GetAlertsParams) SetAlertTypeBuckets(alertTypeBuckets []string) {
	o.AlertTypeBuckets = alertTypeBuckets
}

// WithAlertTypes adds the alertTypes to the get alerts params
func (o *GetAlertsParams) WithAlertTypes(alertTypes []int32) *GetAlertsParams {
	o.SetAlertTypes(alertTypes)
	return o
}

// SetAlertTypes adds the alertTypes to the get alerts params
func (o *GetAlertsParams) SetAlertTypes(alertTypes []int32) {
	o.AlertTypes = alertTypes
}

// WithAllUnderHierarchy adds the allUnderHierarchy to the get alerts params
func (o *GetAlertsParams) WithAllUnderHierarchy(allUnderHierarchy *bool) *GetAlertsParams {
	o.SetAllUnderHierarchy(allUnderHierarchy)
	return o
}

// SetAllUnderHierarchy adds the allUnderHierarchy to the get alerts params
func (o *GetAlertsParams) SetAllUnderHierarchy(allUnderHierarchy *bool) {
	o.AllUnderHierarchy = allUnderHierarchy
}

// WithEndTimeUsecs adds the endTimeUsecs to the get alerts params
func (o *GetAlertsParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetAlertsParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get alerts params
func (o *GetAlertsParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithMaxAlerts adds the maxAlerts to the get alerts params
func (o *GetAlertsParams) WithMaxAlerts(maxAlerts *int32) *GetAlertsParams {
	o.SetMaxAlerts(maxAlerts)
	return o
}

// SetMaxAlerts adds the maxAlerts to the get alerts params
func (o *GetAlertsParams) SetMaxAlerts(maxAlerts *int32) {
	o.MaxAlerts = maxAlerts
}

// WithPropertyKey adds the propertyKey to the get alerts params
func (o *GetAlertsParams) WithPropertyKey(propertyKey *string) *GetAlertsParams {
	o.SetPropertyKey(propertyKey)
	return o
}

// SetPropertyKey adds the propertyKey to the get alerts params
func (o *GetAlertsParams) SetPropertyKey(propertyKey *string) {
	o.PropertyKey = propertyKey
}

// WithPropertyValue adds the propertyValue to the get alerts params
func (o *GetAlertsParams) WithPropertyValue(propertyValue *string) *GetAlertsParams {
	o.SetPropertyValue(propertyValue)
	return o
}

// SetPropertyValue adds the propertyValue to the get alerts params
func (o *GetAlertsParams) SetPropertyValue(propertyValue *string) {
	o.PropertyValue = propertyValue
}

// WithResolutionIds adds the resolutionIds to the get alerts params
func (o *GetAlertsParams) WithResolutionIds(resolutionIds []int64) *GetAlertsParams {
	o.SetResolutionIds(resolutionIds)
	return o
}

// SetResolutionIds adds the resolutionIds to the get alerts params
func (o *GetAlertsParams) SetResolutionIds(resolutionIds []int64) {
	o.ResolutionIds = resolutionIds
}

// WithStartTimeUsecs adds the startTimeUsecs to the get alerts params
func (o *GetAlertsParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetAlertsParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get alerts params
func (o *GetAlertsParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WithTenantIds adds the tenantIds to the get alerts params
func (o *GetAlertsParams) WithTenantIds(tenantIds []string) *GetAlertsParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get alerts params
func (o *GetAlertsParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetAlertsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AlertCategories != nil {

		// binding items for alertCategories
		joinedAlertCategories := o.bindParamAlertCategories(reg)

		// query array param alertCategories
		if err := r.SetQueryParam("alertCategories", joinedAlertCategories...); err != nil {
			return err
		}
	}

	if o.AlertIds != nil {

		// binding items for alertIds
		joinedAlertIds := o.bindParamAlertIds(reg)

		// query array param alertIds
		if err := r.SetQueryParam("alertIds", joinedAlertIds...); err != nil {
			return err
		}
	}

	if o.AlertName != nil {

		// query param alertName
		var qrAlertName string

		if o.AlertName != nil {
			qrAlertName = *o.AlertName
		}
		qAlertName := qrAlertName
		if qAlertName != "" {

			if err := r.SetQueryParam("alertName", qAlertName); err != nil {
				return err
			}
		}
	}

	if o.AlertSeverities != nil {

		// binding items for alertSeverities
		joinedAlertSeverities := o.bindParamAlertSeverities(reg)

		// query array param alertSeverities
		if err := r.SetQueryParam("alertSeverities", joinedAlertSeverities...); err != nil {
			return err
		}
	}

	if o.AlertStates != nil {

		// binding items for alertStates
		joinedAlertStates := o.bindParamAlertStates(reg)

		// query array param alertStates
		if err := r.SetQueryParam("alertStates", joinedAlertStates...); err != nil {
			return err
		}
	}

	if o.AlertTypeBuckets != nil {

		// binding items for alertTypeBuckets
		joinedAlertTypeBuckets := o.bindParamAlertTypeBuckets(reg)

		// query array param alertTypeBuckets
		if err := r.SetQueryParam("alertTypeBuckets", joinedAlertTypeBuckets...); err != nil {
			return err
		}
	}

	if o.AlertTypes != nil {

		// binding items for alertTypes
		joinedAlertTypes := o.bindParamAlertTypes(reg)

		// query array param alertTypes
		if err := r.SetQueryParam("alertTypes", joinedAlertTypes...); err != nil {
			return err
		}
	}

	if o.AllUnderHierarchy != nil {

		// query param allUnderHierarchy
		var qrAllUnderHierarchy bool

		if o.AllUnderHierarchy != nil {
			qrAllUnderHierarchy = *o.AllUnderHierarchy
		}
		qAllUnderHierarchy := swag.FormatBool(qrAllUnderHierarchy)
		if qAllUnderHierarchy != "" {

			if err := r.SetQueryParam("allUnderHierarchy", qAllUnderHierarchy); err != nil {
				return err
			}
		}
	}

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.MaxAlerts != nil {

		// query param maxAlerts
		var qrMaxAlerts int32

		if o.MaxAlerts != nil {
			qrMaxAlerts = *o.MaxAlerts
		}
		qMaxAlerts := swag.FormatInt32(qrMaxAlerts)
		if qMaxAlerts != "" {

			if err := r.SetQueryParam("maxAlerts", qMaxAlerts); err != nil {
				return err
			}
		}
	}

	if o.PropertyKey != nil {

		// query param propertyKey
		var qrPropertyKey string

		if o.PropertyKey != nil {
			qrPropertyKey = *o.PropertyKey
		}
		qPropertyKey := qrPropertyKey
		if qPropertyKey != "" {

			if err := r.SetQueryParam("propertyKey", qPropertyKey); err != nil {
				return err
			}
		}
	}

	if o.PropertyValue != nil {

		// query param propertyValue
		var qrPropertyValue string

		if o.PropertyValue != nil {
			qrPropertyValue = *o.PropertyValue
		}
		qPropertyValue := qrPropertyValue
		if qPropertyValue != "" {

			if err := r.SetQueryParam("propertyValue", qPropertyValue); err != nil {
				return err
			}
		}
	}

	if o.ResolutionIds != nil {

		// binding items for resolutionIds
		joinedResolutionIds := o.bindParamResolutionIds(reg)

		// query array param resolutionIds
		if err := r.SetQueryParam("resolutionIds", joinedResolutionIds...); err != nil {
			return err
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetAlerts binds the parameter alertCategories
func (o *GetAlertsParams) bindParamAlertCategories(formats strfmt.Registry) []string {
	alertCategoriesIR := o.AlertCategories

	var alertCategoriesIC []string
	for _, alertCategoriesIIR := range alertCategoriesIR { // explode []string

		alertCategoriesIIV := alertCategoriesIIR // string as string
		alertCategoriesIC = append(alertCategoriesIC, alertCategoriesIIV)
	}

	// items.CollectionFormat: ""
	alertCategoriesIS := swag.JoinByFormat(alertCategoriesIC, "")

	return alertCategoriesIS
}

// bindParamGetAlerts binds the parameter alertIds
func (o *GetAlertsParams) bindParamAlertIds(formats strfmt.Registry) []string {
	alertIdsIR := o.AlertIds

	var alertIdsIC []string
	for _, alertIdsIIR := range alertIdsIR { // explode []string

		alertIdsIIV := alertIdsIIR // string as string
		alertIdsIC = append(alertIdsIC, alertIdsIIV)
	}

	// items.CollectionFormat: ""
	alertIdsIS := swag.JoinByFormat(alertIdsIC, "")

	return alertIdsIS
}

// bindParamGetAlerts binds the parameter alertSeverities
func (o *GetAlertsParams) bindParamAlertSeverities(formats strfmt.Registry) []string {
	alertSeveritiesIR := o.AlertSeverities

	var alertSeveritiesIC []string
	for _, alertSeveritiesIIR := range alertSeveritiesIR { // explode []string

		alertSeveritiesIIV := alertSeveritiesIIR // string as string
		alertSeveritiesIC = append(alertSeveritiesIC, alertSeveritiesIIV)
	}

	// items.CollectionFormat: ""
	alertSeveritiesIS := swag.JoinByFormat(alertSeveritiesIC, "")

	return alertSeveritiesIS
}

// bindParamGetAlerts binds the parameter alertStates
func (o *GetAlertsParams) bindParamAlertStates(formats strfmt.Registry) []string {
	alertStatesIR := o.AlertStates

	var alertStatesIC []string
	for _, alertStatesIIR := range alertStatesIR { // explode []string

		alertStatesIIV := alertStatesIIR // string as string
		alertStatesIC = append(alertStatesIC, alertStatesIIV)
	}

	// items.CollectionFormat: ""
	alertStatesIS := swag.JoinByFormat(alertStatesIC, "")

	return alertStatesIS
}

// bindParamGetAlerts binds the parameter alertTypeBuckets
func (o *GetAlertsParams) bindParamAlertTypeBuckets(formats strfmt.Registry) []string {
	alertTypeBucketsIR := o.AlertTypeBuckets

	var alertTypeBucketsIC []string
	for _, alertTypeBucketsIIR := range alertTypeBucketsIR { // explode []string

		alertTypeBucketsIIV := alertTypeBucketsIIR // string as string
		alertTypeBucketsIC = append(alertTypeBucketsIC, alertTypeBucketsIIV)
	}

	// items.CollectionFormat: ""
	alertTypeBucketsIS := swag.JoinByFormat(alertTypeBucketsIC, "")

	return alertTypeBucketsIS
}

// bindParamGetAlerts binds the parameter alertTypes
func (o *GetAlertsParams) bindParamAlertTypes(formats strfmt.Registry) []string {
	alertTypesIR := o.AlertTypes

	var alertTypesIC []string
	for _, alertTypesIIR := range alertTypesIR { // explode []int32

		alertTypesIIV := swag.FormatInt32(alertTypesIIR) // int32 as string
		alertTypesIC = append(alertTypesIC, alertTypesIIV)
	}

	// items.CollectionFormat: ""
	alertTypesIS := swag.JoinByFormat(alertTypesIC, "")

	return alertTypesIS
}

// bindParamGetAlerts binds the parameter resolutionIds
func (o *GetAlertsParams) bindParamResolutionIds(formats strfmt.Registry) []string {
	resolutionIdsIR := o.ResolutionIds

	var resolutionIdsIC []string
	for _, resolutionIdsIIR := range resolutionIdsIR { // explode []int64

		resolutionIdsIIV := swag.FormatInt64(resolutionIdsIIR) // int64 as string
		resolutionIdsIC = append(resolutionIdsIC, resolutionIdsIIV)
	}

	// items.CollectionFormat: ""
	resolutionIdsIS := swag.JoinByFormat(resolutionIdsIC, "")

	return resolutionIdsIS
}

// bindParamGetAlerts binds the parameter tenantIds
func (o *GetAlertsParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
