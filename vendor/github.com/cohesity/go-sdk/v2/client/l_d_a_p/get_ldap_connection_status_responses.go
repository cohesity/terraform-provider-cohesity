// Code generated by go-swagger; DO NOT EDIT.

package l_d_a_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// GetLdapConnectionStatusReader is a Reader for the GetLdapConnectionStatus structure.
type GetLdapConnectionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLdapConnectionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLdapConnectionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLdapConnectionStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLdapConnectionStatusOK creates a GetLdapConnectionStatusOK with default headers values
func NewGetLdapConnectionStatusOK() *GetLdapConnectionStatusOK {
	return &GetLdapConnectionStatusOK{}
}

/*
GetLdapConnectionStatusOK describes a response with status code 200, with default header values.

Success
*/
type GetLdapConnectionStatusOK struct {
	Payload *models.LdapStatus
}

// IsSuccess returns true when this get ldap connection status o k response has a 2xx status code
func (o *GetLdapConnectionStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ldap connection status o k response has a 3xx status code
func (o *GetLdapConnectionStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ldap connection status o k response has a 4xx status code
func (o *GetLdapConnectionStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ldap connection status o k response has a 5xx status code
func (o *GetLdapConnectionStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ldap connection status o k response a status code equal to that given
func (o *GetLdapConnectionStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ldap connection status o k response
func (o *GetLdapConnectionStatusOK) Code() int {
	return 200
}

func (o *GetLdapConnectionStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ldap/{id}/connection-status][%d] getLdapConnectionStatusOK %s", 200, payload)
}

func (o *GetLdapConnectionStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ldap/{id}/connection-status][%d] getLdapConnectionStatusOK %s", 200, payload)
}

func (o *GetLdapConnectionStatusOK) GetPayload() *models.LdapStatus {
	return o.Payload
}

func (o *GetLdapConnectionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LdapStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLdapConnectionStatusDefault creates a GetLdapConnectionStatusDefault with default headers values
func NewGetLdapConnectionStatusDefault(code int) *GetLdapConnectionStatusDefault {
	return &GetLdapConnectionStatusDefault{
		_statusCode: code,
	}
}

/*
GetLdapConnectionStatusDefault describes a response with status code -1, with default header values.

Error
*/
type GetLdapConnectionStatusDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get ldap connection status default response has a 2xx status code
func (o *GetLdapConnectionStatusDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get ldap connection status default response has a 3xx status code
func (o *GetLdapConnectionStatusDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get ldap connection status default response has a 4xx status code
func (o *GetLdapConnectionStatusDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get ldap connection status default response has a 5xx status code
func (o *GetLdapConnectionStatusDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get ldap connection status default response a status code equal to that given
func (o *GetLdapConnectionStatusDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get ldap connection status default response
func (o *GetLdapConnectionStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetLdapConnectionStatusDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ldap/{id}/connection-status][%d] GetLdapConnectionStatus default %s", o._statusCode, payload)
}

func (o *GetLdapConnectionStatusDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ldap/{id}/connection-status][%d] GetLdapConnectionStatus default %s", o._statusCode, payload)
}

func (o *GetLdapConnectionStatusDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLdapConnectionStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
