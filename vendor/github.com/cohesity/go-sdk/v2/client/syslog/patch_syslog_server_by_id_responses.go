// Code generated by go-swagger; DO NOT EDIT.

package syslog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// PatchSyslogServerByIDReader is a Reader for the PatchSyslogServerByID structure.
type PatchSyslogServerByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchSyslogServerByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchSyslogServerByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchSyslogServerByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchSyslogServerByIDOK creates a PatchSyslogServerByIDOK with default headers values
func NewPatchSyslogServerByIDOK() *PatchSyslogServerByIDOK {
	return &PatchSyslogServerByIDOK{}
}

/*
PatchSyslogServerByIDOK describes a response with status code 200, with default header values.

Success
*/
type PatchSyslogServerByIDOK struct {
	Payload *models.SyslogServer
}

// IsSuccess returns true when this patch syslog server by Id o k response has a 2xx status code
func (o *PatchSyslogServerByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch syslog server by Id o k response has a 3xx status code
func (o *PatchSyslogServerByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch syslog server by Id o k response has a 4xx status code
func (o *PatchSyslogServerByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch syslog server by Id o k response has a 5xx status code
func (o *PatchSyslogServerByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch syslog server by Id o k response a status code equal to that given
func (o *PatchSyslogServerByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch syslog server by Id o k response
func (o *PatchSyslogServerByIDOK) Code() int {
	return 200
}

func (o *PatchSyslogServerByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /syslog/{id}][%d] patchSyslogServerByIdOK %s", 200, payload)
}

func (o *PatchSyslogServerByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /syslog/{id}][%d] patchSyslogServerByIdOK %s", 200, payload)
}

func (o *PatchSyslogServerByIDOK) GetPayload() *models.SyslogServer {
	return o.Payload
}

func (o *PatchSyslogServerByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SyslogServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSyslogServerByIDDefault creates a PatchSyslogServerByIDDefault with default headers values
func NewPatchSyslogServerByIDDefault(code int) *PatchSyslogServerByIDDefault {
	return &PatchSyslogServerByIDDefault{
		_statusCode: code,
	}
}

/*
PatchSyslogServerByIDDefault describes a response with status code -1, with default header values.

Error
*/
type PatchSyslogServerByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this patch syslog server by Id default response has a 2xx status code
func (o *PatchSyslogServerByIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch syslog server by Id default response has a 3xx status code
func (o *PatchSyslogServerByIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch syslog server by Id default response has a 4xx status code
func (o *PatchSyslogServerByIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch syslog server by Id default response has a 5xx status code
func (o *PatchSyslogServerByIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch syslog server by Id default response a status code equal to that given
func (o *PatchSyslogServerByIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the patch syslog server by Id default response
func (o *PatchSyslogServerByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchSyslogServerByIDDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /syslog/{id}][%d] PatchSyslogServerById default %s", o._statusCode, payload)
}

func (o *PatchSyslogServerByIDDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /syslog/{id}][%d] PatchSyslogServerById default %s", o._statusCode, payload)
}

func (o *PatchSyslogServerByIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSyslogServerByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
