// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTagsParams creates a new GetTagsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTagsParams() *GetTagsParams {
	return &GetTagsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTagsParamsWithTimeout creates a new GetTagsParams object
// with the ability to set a timeout on a request.
func NewGetTagsParamsWithTimeout(timeout time.Duration) *GetTagsParams {
	return &GetTagsParams{
		timeout: timeout,
	}
}

// NewGetTagsParamsWithContext creates a new GetTagsParams object
// with the ability to set a context for a request.
func NewGetTagsParamsWithContext(ctx context.Context) *GetTagsParams {
	return &GetTagsParams{
		Context: ctx,
	}
}

// NewGetTagsParamsWithHTTPClient creates a new GetTagsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTagsParamsWithHTTPClient(client *http.Client) *GetTagsParams {
	return &GetTagsParams{
		HTTPClient: client,
	}
}

/*
GetTagsParams contains all the parameters to send to the API endpoint

	for the get tags operation.

	Typically these are written to a http.Request.
*/
type GetTagsParams struct {

	/* Ids.

	     Filter by a list of Tag Ids. If Ids are mentioned all other fields
	will be ignored.
	*/
	Ids []string

	/* IncludeMarkedForDeletion.

	     Specifies if tags marked for deletion should be shown. These are
	tags which are undergoing deletion. False, by default.
	*/
	IncludeMarkedForDeletion *bool

	/* IncludeTenants.

	     IncludeTenants specifies if tags of all the tenants under the
	hierarchy of the logged in user's organization should be returned.
	False, by default.
	*/
	IncludeTenants *bool

	/* Names.

	   Filter by a list of Tag names.
	*/
	Names []string

	/* Namespaces.

	   Filter by a list of Namespaces.
	*/
	Namespaces []string

	/* TenantIds.

	     TenantIds contains ids of the tenants for which tags are to be
	returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTagsParams) WithDefaults() *GetTagsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTagsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get tags params
func (o *GetTagsParams) WithTimeout(timeout time.Duration) *GetTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tags params
func (o *GetTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tags params
func (o *GetTagsParams) WithContext(ctx context.Context) *GetTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tags params
func (o *GetTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tags params
func (o *GetTagsParams) WithHTTPClient(client *http.Client) *GetTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tags params
func (o *GetTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the get tags params
func (o *GetTagsParams) WithIds(ids []string) *GetTagsParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get tags params
func (o *GetTagsParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithIncludeMarkedForDeletion adds the includeMarkedForDeletion to the get tags params
func (o *GetTagsParams) WithIncludeMarkedForDeletion(includeMarkedForDeletion *bool) *GetTagsParams {
	o.SetIncludeMarkedForDeletion(includeMarkedForDeletion)
	return o
}

// SetIncludeMarkedForDeletion adds the includeMarkedForDeletion to the get tags params
func (o *GetTagsParams) SetIncludeMarkedForDeletion(includeMarkedForDeletion *bool) {
	o.IncludeMarkedForDeletion = includeMarkedForDeletion
}

// WithIncludeTenants adds the includeTenants to the get tags params
func (o *GetTagsParams) WithIncludeTenants(includeTenants *bool) *GetTagsParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get tags params
func (o *GetTagsParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithNames adds the names to the get tags params
func (o *GetTagsParams) WithNames(names []string) *GetTagsParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the get tags params
func (o *GetTagsParams) SetNames(names []string) {
	o.Names = names
}

// WithNamespaces adds the namespaces to the get tags params
func (o *GetTagsParams) WithNamespaces(namespaces []string) *GetTagsParams {
	o.SetNamespaces(namespaces)
	return o
}

// SetNamespaces adds the namespaces to the get tags params
func (o *GetTagsParams) SetNamespaces(namespaces []string) {
	o.Namespaces = namespaces
}

// WithTenantIds adds the tenantIds to the get tags params
func (o *GetTagsParams) WithTenantIds(tenantIds []string) *GetTagsParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get tags params
func (o *GetTagsParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeMarkedForDeletion != nil {

		// query param includeMarkedForDeletion
		var qrIncludeMarkedForDeletion bool

		if o.IncludeMarkedForDeletion != nil {
			qrIncludeMarkedForDeletion = *o.IncludeMarkedForDeletion
		}
		qIncludeMarkedForDeletion := swag.FormatBool(qrIncludeMarkedForDeletion)
		if qIncludeMarkedForDeletion != "" {

			if err := r.SetQueryParam("includeMarkedForDeletion", qIncludeMarkedForDeletion); err != nil {
				return err
			}
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if o.Namespaces != nil {

		// binding items for namespaces
		joinedNamespaces := o.bindParamNamespaces(reg)

		// query array param namespaces
		if err := r.SetQueryParam("namespaces", joinedNamespaces...); err != nil {
			return err
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetTags binds the parameter ids
func (o *GetTagsParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetTags binds the parameter names
func (o *GetTagsParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: ""
	namesIS := swag.JoinByFormat(namesIC, "")

	return namesIS
}

// bindParamGetTags binds the parameter namespaces
func (o *GetTagsParams) bindParamNamespaces(formats strfmt.Registry) []string {
	namespacesIR := o.Namespaces

	var namespacesIC []string
	for _, namespacesIIR := range namespacesIR { // explode []string

		namespacesIIV := namespacesIIR // string as string
		namespacesIC = append(namespacesIC, namespacesIIV)
	}

	// items.CollectionFormat: ""
	namespacesIS := swag.JoinByFormat(namespacesIC, "")

	return namespacesIS
}

// bindParamGetTags binds the parameter tenantIds
func (o *GetTagsParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
