// Code generated by go-swagger; DO NOT EDIT.

package patch_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPatchesHistoryParams creates a new GetPatchesHistoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPatchesHistoryParams() *GetPatchesHistoryParams {
	return &GetPatchesHistoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPatchesHistoryParamsWithTimeout creates a new GetPatchesHistoryParams object
// with the ability to set a timeout on a request.
func NewGetPatchesHistoryParamsWithTimeout(timeout time.Duration) *GetPatchesHistoryParams {
	return &GetPatchesHistoryParams{
		timeout: timeout,
	}
}

// NewGetPatchesHistoryParamsWithContext creates a new GetPatchesHistoryParams object
// with the ability to set a context for a request.
func NewGetPatchesHistoryParamsWithContext(ctx context.Context) *GetPatchesHistoryParams {
	return &GetPatchesHistoryParams{
		Context: ctx,
	}
}

// NewGetPatchesHistoryParamsWithHTTPClient creates a new GetPatchesHistoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPatchesHistoryParamsWithHTTPClient(client *http.Client) *GetPatchesHistoryParams {
	return &GetPatchesHistoryParams{
		HTTPClient: client,
	}
}

/*
GetPatchesHistoryParams contains all the parameters to send to the API endpoint

	for the get patches history operation.

	Typically these are written to a http.Request.
*/
type GetPatchesHistoryParams struct {

	/* Service.

	   Specifies optional service name whose patch operation history is returned. If it is not specified, patch operations of all the serivces are returned.
	*/
	Service *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get patches history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPatchesHistoryParams) WithDefaults() *GetPatchesHistoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get patches history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPatchesHistoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get patches history params
func (o *GetPatchesHistoryParams) WithTimeout(timeout time.Duration) *GetPatchesHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get patches history params
func (o *GetPatchesHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get patches history params
func (o *GetPatchesHistoryParams) WithContext(ctx context.Context) *GetPatchesHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get patches history params
func (o *GetPatchesHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get patches history params
func (o *GetPatchesHistoryParams) WithHTTPClient(client *http.Client) *GetPatchesHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get patches history params
func (o *GetPatchesHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithService adds the service to the get patches history params
func (o *GetPatchesHistoryParams) WithService(service *string) *GetPatchesHistoryParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the get patches history params
func (o *GetPatchesHistoryParams) SetService(service *string) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *GetPatchesHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Service != nil {

		// query param service
		var qrService string

		if o.Service != nil {
			qrService = *o.Service
		}
		qService := qrService
		if qService != "" {

			if err := r.SetQueryParam("service", qService); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
