// Code generated by go-swagger; DO NOT EDIT.

package patch_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewImportPatchesParams creates a new ImportPatchesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewImportPatchesParams() *ImportPatchesParams {
	return &ImportPatchesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewImportPatchesParamsWithTimeout creates a new ImportPatchesParams object
// with the ability to set a timeout on a request.
func NewImportPatchesParamsWithTimeout(timeout time.Duration) *ImportPatchesParams {
	return &ImportPatchesParams{
		timeout: timeout,
	}
}

// NewImportPatchesParamsWithContext creates a new ImportPatchesParams object
// with the ability to set a context for a request.
func NewImportPatchesParamsWithContext(ctx context.Context) *ImportPatchesParams {
	return &ImportPatchesParams{
		Context: ctx,
	}
}

// NewImportPatchesParamsWithHTTPClient creates a new ImportPatchesParams object
// with the ability to set a custom HTTPClient for a request.
func NewImportPatchesParamsWithHTTPClient(client *http.Client) *ImportPatchesParams {
	return &ImportPatchesParams{
		HTTPClient: client,
	}
}

/*
ImportPatchesParams contains all the parameters to send to the API endpoint

	for the import patches operation.

	Typically these are written to a http.Request.
*/
type ImportPatchesParams struct {

	// Checksum.
	Checksum string

	// FileName.
	FileName string

	// Patch.
	Patch runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the import patches params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ImportPatchesParams) WithDefaults() *ImportPatchesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the import patches params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ImportPatchesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the import patches params
func (o *ImportPatchesParams) WithTimeout(timeout time.Duration) *ImportPatchesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import patches params
func (o *ImportPatchesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import patches params
func (o *ImportPatchesParams) WithContext(ctx context.Context) *ImportPatchesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import patches params
func (o *ImportPatchesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import patches params
func (o *ImportPatchesParams) WithHTTPClient(client *http.Client) *ImportPatchesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import patches params
func (o *ImportPatchesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChecksum adds the checksum to the import patches params
func (o *ImportPatchesParams) WithChecksum(checksum string) *ImportPatchesParams {
	o.SetChecksum(checksum)
	return o
}

// SetChecksum adds the checksum to the import patches params
func (o *ImportPatchesParams) SetChecksum(checksum string) {
	o.Checksum = checksum
}

// WithFileName adds the fileName to the import patches params
func (o *ImportPatchesParams) WithFileName(fileName string) *ImportPatchesParams {
	o.SetFileName(fileName)
	return o
}

// SetFileName adds the fileName to the import patches params
func (o *ImportPatchesParams) SetFileName(fileName string) {
	o.FileName = fileName
}

// WithPatch adds the patch to the import patches params
func (o *ImportPatchesParams) WithPatch(patch runtime.NamedReadCloser) *ImportPatchesParams {
	o.SetPatch(patch)
	return o
}

// SetPatch adds the patch to the import patches params
func (o *ImportPatchesParams) SetPatch(patch runtime.NamedReadCloser) {
	o.Patch = patch
}

// WriteToRequest writes these params to a swagger request
func (o *ImportPatchesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param checksum
	frChecksum := o.Checksum
	fChecksum := frChecksum
	if fChecksum != "" {
		if err := r.SetFormParam("checksum", fChecksum); err != nil {
			return err
		}
	}

	// form param fileName
	frFileName := o.FileName
	fFileName := frFileName
	if fFileName != "" {
		if err := r.SetFormParam("fileName", fFileName); err != nil {
			return err
		}
	}
	// form file param patch
	if err := r.SetFileParam("patch", o.Patch); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
