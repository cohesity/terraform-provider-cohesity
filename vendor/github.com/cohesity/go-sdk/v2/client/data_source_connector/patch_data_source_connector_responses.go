// Code generated by go-swagger; DO NOT EDIT.

package data_source_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// PatchDataSourceConnectorReader is a Reader for the PatchDataSourceConnector structure.
type PatchDataSourceConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchDataSourceConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchDataSourceConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchDataSourceConnectorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchDataSourceConnectorOK creates a PatchDataSourceConnectorOK with default headers values
func NewPatchDataSourceConnectorOK() *PatchDataSourceConnectorOK {
	return &PatchDataSourceConnectorOK{}
}

/*
PatchDataSourceConnectorOK describes a response with status code 200, with default header values.

Success
*/
type PatchDataSourceConnectorOK struct {
	Payload *models.DataSourceConnector
}

// IsSuccess returns true when this patch data source connector o k response has a 2xx status code
func (o *PatchDataSourceConnectorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch data source connector o k response has a 3xx status code
func (o *PatchDataSourceConnectorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch data source connector o k response has a 4xx status code
func (o *PatchDataSourceConnectorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch data source connector o k response has a 5xx status code
func (o *PatchDataSourceConnectorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch data source connector o k response a status code equal to that given
func (o *PatchDataSourceConnectorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch data source connector o k response
func (o *PatchDataSourceConnectorOK) Code() int {
	return 200
}

func (o *PatchDataSourceConnectorOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /data-source-connectors/{connectorId}][%d] patchDataSourceConnectorOK %s", 200, payload)
}

func (o *PatchDataSourceConnectorOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /data-source-connectors/{connectorId}][%d] patchDataSourceConnectorOK %s", 200, payload)
}

func (o *PatchDataSourceConnectorOK) GetPayload() *models.DataSourceConnector {
	return o.Payload
}

func (o *PatchDataSourceConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataSourceConnector)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDataSourceConnectorDefault creates a PatchDataSourceConnectorDefault with default headers values
func NewPatchDataSourceConnectorDefault(code int) *PatchDataSourceConnectorDefault {
	return &PatchDataSourceConnectorDefault{
		_statusCode: code,
	}
}

/*
PatchDataSourceConnectorDefault describes a response with status code -1, with default header values.

Error
*/
type PatchDataSourceConnectorDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this patch data source connector default response has a 2xx status code
func (o *PatchDataSourceConnectorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch data source connector default response has a 3xx status code
func (o *PatchDataSourceConnectorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch data source connector default response has a 4xx status code
func (o *PatchDataSourceConnectorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch data source connector default response has a 5xx status code
func (o *PatchDataSourceConnectorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch data source connector default response a status code equal to that given
func (o *PatchDataSourceConnectorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the patch data source connector default response
func (o *PatchDataSourceConnectorDefault) Code() int {
	return o._statusCode
}

func (o *PatchDataSourceConnectorDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /data-source-connectors/{connectorId}][%d] PatchDataSourceConnector default %s", o._statusCode, payload)
}

func (o *PatchDataSourceConnectorDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /data-source-connectors/{connectorId}][%d] PatchDataSourceConnector default %s", o._statusCode, payload)
}

func (o *PatchDataSourceConnectorDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDataSourceConnectorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
