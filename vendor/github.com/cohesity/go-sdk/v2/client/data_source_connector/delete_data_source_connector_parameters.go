// Code generated by go-swagger; DO NOT EDIT.

package data_source_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteDataSourceConnectorParams creates a new DeleteDataSourceConnectorParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteDataSourceConnectorParams() *DeleteDataSourceConnectorParams {
	return &DeleteDataSourceConnectorParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDataSourceConnectorParamsWithTimeout creates a new DeleteDataSourceConnectorParams object
// with the ability to set a timeout on a request.
func NewDeleteDataSourceConnectorParamsWithTimeout(timeout time.Duration) *DeleteDataSourceConnectorParams {
	return &DeleteDataSourceConnectorParams{
		timeout: timeout,
	}
}

// NewDeleteDataSourceConnectorParamsWithContext creates a new DeleteDataSourceConnectorParams object
// with the ability to set a context for a request.
func NewDeleteDataSourceConnectorParamsWithContext(ctx context.Context) *DeleteDataSourceConnectorParams {
	return &DeleteDataSourceConnectorParams{
		Context: ctx,
	}
}

// NewDeleteDataSourceConnectorParamsWithHTTPClient creates a new DeleteDataSourceConnectorParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteDataSourceConnectorParamsWithHTTPClient(client *http.Client) *DeleteDataSourceConnectorParams {
	return &DeleteDataSourceConnectorParams{
		HTTPClient: client,
	}
}

/*
DeleteDataSourceConnectorParams contains all the parameters to send to the API endpoint

	for the delete data source connector operation.

	Typically these are written to a http.Request.
*/
type DeleteDataSourceConnectorParams struct {

	/* ConnectorID.

	   Specifies the unique ID of the connector which is to be deleted.
	*/
	ConnectorID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete data source connector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDataSourceConnectorParams) WithDefaults() *DeleteDataSourceConnectorParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete data source connector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDataSourceConnectorParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) WithTimeout(timeout time.Duration) *DeleteDataSourceConnectorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) WithContext(ctx context.Context) *DeleteDataSourceConnectorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) WithHTTPClient(client *http.Client) *DeleteDataSourceConnectorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectorID adds the connectorID to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) WithConnectorID(connectorID string) *DeleteDataSourceConnectorParams {
	o.SetConnectorID(connectorID)
	return o
}

// SetConnectorID adds the connectorId to the delete data source connector params
func (o *DeleteDataSourceConnectorParams) SetConnectorID(connectorID string) {
	o.ConnectorID = connectorID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDataSourceConnectorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param connectorId
	if err := r.SetPathParam("connectorId", o.ConnectorID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
