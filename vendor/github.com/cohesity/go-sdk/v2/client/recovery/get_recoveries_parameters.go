// Code generated by go-swagger; DO NOT EDIT.

package recovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRecoveriesParams creates a new GetRecoveriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRecoveriesParams() *GetRecoveriesParams {
	return &GetRecoveriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRecoveriesParamsWithTimeout creates a new GetRecoveriesParams object
// with the ability to set a timeout on a request.
func NewGetRecoveriesParamsWithTimeout(timeout time.Duration) *GetRecoveriesParams {
	return &GetRecoveriesParams{
		timeout: timeout,
	}
}

// NewGetRecoveriesParamsWithContext creates a new GetRecoveriesParams object
// with the ability to set a context for a request.
func NewGetRecoveriesParamsWithContext(ctx context.Context) *GetRecoveriesParams {
	return &GetRecoveriesParams{
		Context: ctx,
	}
}

// NewGetRecoveriesParamsWithHTTPClient creates a new GetRecoveriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRecoveriesParamsWithHTTPClient(client *http.Client) *GetRecoveriesParams {
	return &GetRecoveriesParams{
		HTTPClient: client,
	}
}

/*
GetRecoveriesParams contains all the parameters to send to the API endpoint

	for the get recoveries operation.

	Typically these are written to a http.Request.
*/
type GetRecoveriesParams struct {

	/* ArchivalTargetType.

	   Specifies the snapshot's archival target type from which recovery has been performed. This parameter applies only if 'snapshotTargetType' is 'Archival'.
	*/
	ArchivalTargetType []string

	/* EndTimeUsecs.

	   Returns the recoveries which are started before the specific time. This value should be in Unix timestamp epoch in microseconds.

	   Format: int64
	*/
	EndTimeUsecs *int64

	/* Ids.

	   Filter Recoveries for given ids.
	*/
	Ids []string

	/* IncludeTenants.

	   Specifies if objects of all the organizations under the hierarchy of the logged in user's organization should be returned.
	*/
	IncludeTenants *bool

	/* RecoveryActions.

	   Specifies the list of recovery actions to filter Recoveries. If empty, Recoveries related to all actions will be returned.
	*/
	RecoveryActions []string

	/* ReturnOnlyChildRecoveries.

	   Returns only child recoveries if passed as true. This filter should always be used along with 'ids' filter.
	*/
	ReturnOnlyChildRecoveries *bool

	/* SnapshotEnvironments.

	   Specifies the list of snapshot environment types to filter Recoveries. If empty, Recoveries related to all environments will be returned.
	*/
	SnapshotEnvironments []string

	/* SnapshotTargetType.

	   Specifies the snapshot's target type from which recovery has been performed.
	*/
	SnapshotTargetType []string

	/* StartTimeUsecs.

	   Returns the recoveries which are started after the specific time. This value should be in Unix timestamp epoch in microseconds.

	   Format: int64
	*/
	StartTimeUsecs *int64

	/* Status.

	   Specifies the list of run status to filter Recoveries. If empty, Recoveries with all run status will be returned.
	*/
	Status []string

	/* StorageDomainID.

	   Filter by Storage Domain id. Only recoveries writing data to this Storage Domain will be returned.

	   Format: int64
	*/
	StorageDomainID *int64

	/* TenantIds.

	   TenantIds contains ids of the organizations for which recoveries are to be returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get recoveries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRecoveriesParams) WithDefaults() *GetRecoveriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get recoveries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRecoveriesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get recoveries params
func (o *GetRecoveriesParams) WithTimeout(timeout time.Duration) *GetRecoveriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get recoveries params
func (o *GetRecoveriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get recoveries params
func (o *GetRecoveriesParams) WithContext(ctx context.Context) *GetRecoveriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get recoveries params
func (o *GetRecoveriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get recoveries params
func (o *GetRecoveriesParams) WithHTTPClient(client *http.Client) *GetRecoveriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get recoveries params
func (o *GetRecoveriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArchivalTargetType adds the archivalTargetType to the get recoveries params
func (o *GetRecoveriesParams) WithArchivalTargetType(archivalTargetType []string) *GetRecoveriesParams {
	o.SetArchivalTargetType(archivalTargetType)
	return o
}

// SetArchivalTargetType adds the archivalTargetType to the get recoveries params
func (o *GetRecoveriesParams) SetArchivalTargetType(archivalTargetType []string) {
	o.ArchivalTargetType = archivalTargetType
}

// WithEndTimeUsecs adds the endTimeUsecs to the get recoveries params
func (o *GetRecoveriesParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetRecoveriesParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get recoveries params
func (o *GetRecoveriesParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithIds adds the ids to the get recoveries params
func (o *GetRecoveriesParams) WithIds(ids []string) *GetRecoveriesParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get recoveries params
func (o *GetRecoveriesParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithIncludeTenants adds the includeTenants to the get recoveries params
func (o *GetRecoveriesParams) WithIncludeTenants(includeTenants *bool) *GetRecoveriesParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get recoveries params
func (o *GetRecoveriesParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithRecoveryActions adds the recoveryActions to the get recoveries params
func (o *GetRecoveriesParams) WithRecoveryActions(recoveryActions []string) *GetRecoveriesParams {
	o.SetRecoveryActions(recoveryActions)
	return o
}

// SetRecoveryActions adds the recoveryActions to the get recoveries params
func (o *GetRecoveriesParams) SetRecoveryActions(recoveryActions []string) {
	o.RecoveryActions = recoveryActions
}

// WithReturnOnlyChildRecoveries adds the returnOnlyChildRecoveries to the get recoveries params
func (o *GetRecoveriesParams) WithReturnOnlyChildRecoveries(returnOnlyChildRecoveries *bool) *GetRecoveriesParams {
	o.SetReturnOnlyChildRecoveries(returnOnlyChildRecoveries)
	return o
}

// SetReturnOnlyChildRecoveries adds the returnOnlyChildRecoveries to the get recoveries params
func (o *GetRecoveriesParams) SetReturnOnlyChildRecoveries(returnOnlyChildRecoveries *bool) {
	o.ReturnOnlyChildRecoveries = returnOnlyChildRecoveries
}

// WithSnapshotEnvironments adds the snapshotEnvironments to the get recoveries params
func (o *GetRecoveriesParams) WithSnapshotEnvironments(snapshotEnvironments []string) *GetRecoveriesParams {
	o.SetSnapshotEnvironments(snapshotEnvironments)
	return o
}

// SetSnapshotEnvironments adds the snapshotEnvironments to the get recoveries params
func (o *GetRecoveriesParams) SetSnapshotEnvironments(snapshotEnvironments []string) {
	o.SnapshotEnvironments = snapshotEnvironments
}

// WithSnapshotTargetType adds the snapshotTargetType to the get recoveries params
func (o *GetRecoveriesParams) WithSnapshotTargetType(snapshotTargetType []string) *GetRecoveriesParams {
	o.SetSnapshotTargetType(snapshotTargetType)
	return o
}

// SetSnapshotTargetType adds the snapshotTargetType to the get recoveries params
func (o *GetRecoveriesParams) SetSnapshotTargetType(snapshotTargetType []string) {
	o.SnapshotTargetType = snapshotTargetType
}

// WithStartTimeUsecs adds the startTimeUsecs to the get recoveries params
func (o *GetRecoveriesParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetRecoveriesParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get recoveries params
func (o *GetRecoveriesParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WithStatus adds the status to the get recoveries params
func (o *GetRecoveriesParams) WithStatus(status []string) *GetRecoveriesParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get recoveries params
func (o *GetRecoveriesParams) SetStatus(status []string) {
	o.Status = status
}

// WithStorageDomainID adds the storageDomainID to the get recoveries params
func (o *GetRecoveriesParams) WithStorageDomainID(storageDomainID *int64) *GetRecoveriesParams {
	o.SetStorageDomainID(storageDomainID)
	return o
}

// SetStorageDomainID adds the storageDomainId to the get recoveries params
func (o *GetRecoveriesParams) SetStorageDomainID(storageDomainID *int64) {
	o.StorageDomainID = storageDomainID
}

// WithTenantIds adds the tenantIds to the get recoveries params
func (o *GetRecoveriesParams) WithTenantIds(tenantIds []string) *GetRecoveriesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get recoveries params
func (o *GetRecoveriesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetRecoveriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ArchivalTargetType != nil {

		// binding items for archivalTargetType
		joinedArchivalTargetType := o.bindParamArchivalTargetType(reg)

		// query array param archivalTargetType
		if err := r.SetQueryParam("archivalTargetType", joinedArchivalTargetType...); err != nil {
			return err
		}
	}

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.RecoveryActions != nil {

		// binding items for recoveryActions
		joinedRecoveryActions := o.bindParamRecoveryActions(reg)

		// query array param recoveryActions
		if err := r.SetQueryParam("recoveryActions", joinedRecoveryActions...); err != nil {
			return err
		}
	}

	if o.ReturnOnlyChildRecoveries != nil {

		// query param returnOnlyChildRecoveries
		var qrReturnOnlyChildRecoveries bool

		if o.ReturnOnlyChildRecoveries != nil {
			qrReturnOnlyChildRecoveries = *o.ReturnOnlyChildRecoveries
		}
		qReturnOnlyChildRecoveries := swag.FormatBool(qrReturnOnlyChildRecoveries)
		if qReturnOnlyChildRecoveries != "" {

			if err := r.SetQueryParam("returnOnlyChildRecoveries", qReturnOnlyChildRecoveries); err != nil {
				return err
			}
		}
	}

	if o.SnapshotEnvironments != nil {

		// binding items for snapshotEnvironments
		joinedSnapshotEnvironments := o.bindParamSnapshotEnvironments(reg)

		// query array param snapshotEnvironments
		if err := r.SetQueryParam("snapshotEnvironments", joinedSnapshotEnvironments...); err != nil {
			return err
		}
	}

	if o.SnapshotTargetType != nil {

		// binding items for snapshotTargetType
		joinedSnapshotTargetType := o.bindParamSnapshotTargetType(reg)

		// query array param snapshotTargetType
		if err := r.SetQueryParam("snapshotTargetType", joinedSnapshotTargetType...); err != nil {
			return err
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// binding items for status
		joinedStatus := o.bindParamStatus(reg)

		// query array param status
		if err := r.SetQueryParam("status", joinedStatus...); err != nil {
			return err
		}
	}

	if o.StorageDomainID != nil {

		// query param storageDomainId
		var qrStorageDomainID int64

		if o.StorageDomainID != nil {
			qrStorageDomainID = *o.StorageDomainID
		}
		qStorageDomainID := swag.FormatInt64(qrStorageDomainID)
		if qStorageDomainID != "" {

			if err := r.SetQueryParam("storageDomainId", qStorageDomainID); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetRecoveries binds the parameter archivalTargetType
func (o *GetRecoveriesParams) bindParamArchivalTargetType(formats strfmt.Registry) []string {
	archivalTargetTypeIR := o.ArchivalTargetType

	var archivalTargetTypeIC []string
	for _, archivalTargetTypeIIR := range archivalTargetTypeIR { // explode []string

		archivalTargetTypeIIV := archivalTargetTypeIIR // string as string
		archivalTargetTypeIC = append(archivalTargetTypeIC, archivalTargetTypeIIV)
	}

	// items.CollectionFormat: ""
	archivalTargetTypeIS := swag.JoinByFormat(archivalTargetTypeIC, "")

	return archivalTargetTypeIS
}

// bindParamGetRecoveries binds the parameter ids
func (o *GetRecoveriesParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetRecoveries binds the parameter recoveryActions
func (o *GetRecoveriesParams) bindParamRecoveryActions(formats strfmt.Registry) []string {
	recoveryActionsIR := o.RecoveryActions

	var recoveryActionsIC []string
	for _, recoveryActionsIIR := range recoveryActionsIR { // explode []string

		recoveryActionsIIV := recoveryActionsIIR // string as string
		recoveryActionsIC = append(recoveryActionsIC, recoveryActionsIIV)
	}

	// items.CollectionFormat: ""
	recoveryActionsIS := swag.JoinByFormat(recoveryActionsIC, "")

	return recoveryActionsIS
}

// bindParamGetRecoveries binds the parameter snapshotEnvironments
func (o *GetRecoveriesParams) bindParamSnapshotEnvironments(formats strfmt.Registry) []string {
	snapshotEnvironmentsIR := o.SnapshotEnvironments

	var snapshotEnvironmentsIC []string
	for _, snapshotEnvironmentsIIR := range snapshotEnvironmentsIR { // explode []string

		snapshotEnvironmentsIIV := snapshotEnvironmentsIIR // string as string
		snapshotEnvironmentsIC = append(snapshotEnvironmentsIC, snapshotEnvironmentsIIV)
	}

	// items.CollectionFormat: ""
	snapshotEnvironmentsIS := swag.JoinByFormat(snapshotEnvironmentsIC, "")

	return snapshotEnvironmentsIS
}

// bindParamGetRecoveries binds the parameter snapshotTargetType
func (o *GetRecoveriesParams) bindParamSnapshotTargetType(formats strfmt.Registry) []string {
	snapshotTargetTypeIR := o.SnapshotTargetType

	var snapshotTargetTypeIC []string
	for _, snapshotTargetTypeIIR := range snapshotTargetTypeIR { // explode []string

		snapshotTargetTypeIIV := snapshotTargetTypeIIR // string as string
		snapshotTargetTypeIC = append(snapshotTargetTypeIC, snapshotTargetTypeIIV)
	}

	// items.CollectionFormat: ""
	snapshotTargetTypeIS := swag.JoinByFormat(snapshotTargetTypeIC, "")

	return snapshotTargetTypeIS
}

// bindParamGetRecoveries binds the parameter status
func (o *GetRecoveriesParams) bindParamStatus(formats strfmt.Registry) []string {
	statusIR := o.Status

	var statusIC []string
	for _, statusIIR := range statusIR { // explode []string

		statusIIV := statusIIR // string as string
		statusIC = append(statusIC, statusIIV)
	}

	// items.CollectionFormat: ""
	statusIS := swag.JoinByFormat(statusIC, "")

	return statusIS
}

// bindParamGetRecoveries binds the parameter tenantIds
func (o *GetRecoveriesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
