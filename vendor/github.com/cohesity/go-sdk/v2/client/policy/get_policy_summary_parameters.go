// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPolicySummaryParams creates a new GetPolicySummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPolicySummaryParams() *GetPolicySummaryParams {
	return &GetPolicySummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPolicySummaryParamsWithTimeout creates a new GetPolicySummaryParams object
// with the ability to set a timeout on a request.
func NewGetPolicySummaryParamsWithTimeout(timeout time.Duration) *GetPolicySummaryParams {
	return &GetPolicySummaryParams{
		timeout: timeout,
	}
}

// NewGetPolicySummaryParamsWithContext creates a new GetPolicySummaryParams object
// with the ability to set a context for a request.
func NewGetPolicySummaryParamsWithContext(ctx context.Context) *GetPolicySummaryParams {
	return &GetPolicySummaryParams{
		Context: ctx,
	}
}

// NewGetPolicySummaryParamsWithHTTPClient creates a new GetPolicySummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPolicySummaryParamsWithHTTPClient(client *http.Client) *GetPolicySummaryParams {
	return &GetPolicySummaryParams{
		HTTPClient: client,
	}
}

/*
GetPolicySummaryParams contains all the parameters to send to the API endpoint

	for the get policy summary operation.

	Typically these are written to a http.Request.
*/
type GetPolicySummaryParams struct {

	/* EndTimeUsecs.

	   Filter by a end time specified as a Unix epoch Timestamp (in microseconds). Only Job Runs that completed before the specified time are included in the aggregated runs summary result.

	   Format: int64
	*/
	EndTimeUsecs *int64

	/* ID.

	   Specifies the id of the policy whose summary should be retrieved. If this is not set, the API will return error.
	*/
	ID string

	/* IncludeAggregatedLastRunSummary.

	   Specifies whether to include summary of the last Protection Run of each Protection Source
	*/
	IncludeAggregatedLastRunSummary *bool

	/* IncludeAggregatedRunsSummary.

	   Specifies whether to include summary of all Protection Runs of the Protection Source or Protection Jobs. If this is set to true, then only the Protection Runs from the provided 'startTimeUsecs' and 'endTimeUsecs' are processed.
	*/
	IncludeAggregatedRunsSummary *bool

	/* PageCount.

	   Specifies the limit of the number of Protection Sources or Protection Jobs to be returned as a part of the Protection Policy Summary.

	   Format: int64
	*/
	PageCount *int64

	/* PaginationCookie.

	   If set, i.e. there are more results to display, use this value to get the next set of results, by using this value in paginationCookie param for the next request to GetProtectionPolicySummary.
	*/
	PaginationCookie *string

	/* RequestInitiatorType.

	   Specifies the type of request from UI, which is used for services like magneto to determine the priority of requests.
	*/
	RequestInitiatorType *string

	/* StartTimeUsecs.

	   Filter by a start time specified as a Unix epoch Timestamp (in microseconds). Only Job Runs that started after the specified time are included in the aggregated runs summary result.

	   Format: int64
	*/
	StartTimeUsecs *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get policy summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPolicySummaryParams) WithDefaults() *GetPolicySummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get policy summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPolicySummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get policy summary params
func (o *GetPolicySummaryParams) WithTimeout(timeout time.Duration) *GetPolicySummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get policy summary params
func (o *GetPolicySummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get policy summary params
func (o *GetPolicySummaryParams) WithContext(ctx context.Context) *GetPolicySummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get policy summary params
func (o *GetPolicySummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get policy summary params
func (o *GetPolicySummaryParams) WithHTTPClient(client *http.Client) *GetPolicySummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get policy summary params
func (o *GetPolicySummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTimeUsecs adds the endTimeUsecs to the get policy summary params
func (o *GetPolicySummaryParams) WithEndTimeUsecs(endTimeUsecs *int64) *GetPolicySummaryParams {
	o.SetEndTimeUsecs(endTimeUsecs)
	return o
}

// SetEndTimeUsecs adds the endTimeUsecs to the get policy summary params
func (o *GetPolicySummaryParams) SetEndTimeUsecs(endTimeUsecs *int64) {
	o.EndTimeUsecs = endTimeUsecs
}

// WithID adds the id to the get policy summary params
func (o *GetPolicySummaryParams) WithID(id string) *GetPolicySummaryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get policy summary params
func (o *GetPolicySummaryParams) SetID(id string) {
	o.ID = id
}

// WithIncludeAggregatedLastRunSummary adds the includeAggregatedLastRunSummary to the get policy summary params
func (o *GetPolicySummaryParams) WithIncludeAggregatedLastRunSummary(includeAggregatedLastRunSummary *bool) *GetPolicySummaryParams {
	o.SetIncludeAggregatedLastRunSummary(includeAggregatedLastRunSummary)
	return o
}

// SetIncludeAggregatedLastRunSummary adds the includeAggregatedLastRunSummary to the get policy summary params
func (o *GetPolicySummaryParams) SetIncludeAggregatedLastRunSummary(includeAggregatedLastRunSummary *bool) {
	o.IncludeAggregatedLastRunSummary = includeAggregatedLastRunSummary
}

// WithIncludeAggregatedRunsSummary adds the includeAggregatedRunsSummary to the get policy summary params
func (o *GetPolicySummaryParams) WithIncludeAggregatedRunsSummary(includeAggregatedRunsSummary *bool) *GetPolicySummaryParams {
	o.SetIncludeAggregatedRunsSummary(includeAggregatedRunsSummary)
	return o
}

// SetIncludeAggregatedRunsSummary adds the includeAggregatedRunsSummary to the get policy summary params
func (o *GetPolicySummaryParams) SetIncludeAggregatedRunsSummary(includeAggregatedRunsSummary *bool) {
	o.IncludeAggregatedRunsSummary = includeAggregatedRunsSummary
}

// WithPageCount adds the pageCount to the get policy summary params
func (o *GetPolicySummaryParams) WithPageCount(pageCount *int64) *GetPolicySummaryParams {
	o.SetPageCount(pageCount)
	return o
}

// SetPageCount adds the pageCount to the get policy summary params
func (o *GetPolicySummaryParams) SetPageCount(pageCount *int64) {
	o.PageCount = pageCount
}

// WithPaginationCookie adds the paginationCookie to the get policy summary params
func (o *GetPolicySummaryParams) WithPaginationCookie(paginationCookie *string) *GetPolicySummaryParams {
	o.SetPaginationCookie(paginationCookie)
	return o
}

// SetPaginationCookie adds the paginationCookie to the get policy summary params
func (o *GetPolicySummaryParams) SetPaginationCookie(paginationCookie *string) {
	o.PaginationCookie = paginationCookie
}

// WithRequestInitiatorType adds the requestInitiatorType to the get policy summary params
func (o *GetPolicySummaryParams) WithRequestInitiatorType(requestInitiatorType *string) *GetPolicySummaryParams {
	o.SetRequestInitiatorType(requestInitiatorType)
	return o
}

// SetRequestInitiatorType adds the requestInitiatorType to the get policy summary params
func (o *GetPolicySummaryParams) SetRequestInitiatorType(requestInitiatorType *string) {
	o.RequestInitiatorType = requestInitiatorType
}

// WithStartTimeUsecs adds the startTimeUsecs to the get policy summary params
func (o *GetPolicySummaryParams) WithStartTimeUsecs(startTimeUsecs *int64) *GetPolicySummaryParams {
	o.SetStartTimeUsecs(startTimeUsecs)
	return o
}

// SetStartTimeUsecs adds the startTimeUsecs to the get policy summary params
func (o *GetPolicySummaryParams) SetStartTimeUsecs(startTimeUsecs *int64) {
	o.StartTimeUsecs = startTimeUsecs
}

// WriteToRequest writes these params to a swagger request
func (o *GetPolicySummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndTimeUsecs != nil {

		// query param endTimeUsecs
		var qrEndTimeUsecs int64

		if o.EndTimeUsecs != nil {
			qrEndTimeUsecs = *o.EndTimeUsecs
		}
		qEndTimeUsecs := swag.FormatInt64(qrEndTimeUsecs)
		if qEndTimeUsecs != "" {

			if err := r.SetQueryParam("endTimeUsecs", qEndTimeUsecs); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.IncludeAggregatedLastRunSummary != nil {

		// query param includeAggregatedLastRunSummary
		var qrIncludeAggregatedLastRunSummary bool

		if o.IncludeAggregatedLastRunSummary != nil {
			qrIncludeAggregatedLastRunSummary = *o.IncludeAggregatedLastRunSummary
		}
		qIncludeAggregatedLastRunSummary := swag.FormatBool(qrIncludeAggregatedLastRunSummary)
		if qIncludeAggregatedLastRunSummary != "" {

			if err := r.SetQueryParam("includeAggregatedLastRunSummary", qIncludeAggregatedLastRunSummary); err != nil {
				return err
			}
		}
	}

	if o.IncludeAggregatedRunsSummary != nil {

		// query param includeAggregatedRunsSummary
		var qrIncludeAggregatedRunsSummary bool

		if o.IncludeAggregatedRunsSummary != nil {
			qrIncludeAggregatedRunsSummary = *o.IncludeAggregatedRunsSummary
		}
		qIncludeAggregatedRunsSummary := swag.FormatBool(qrIncludeAggregatedRunsSummary)
		if qIncludeAggregatedRunsSummary != "" {

			if err := r.SetQueryParam("includeAggregatedRunsSummary", qIncludeAggregatedRunsSummary); err != nil {
				return err
			}
		}
	}

	if o.PageCount != nil {

		// query param pageCount
		var qrPageCount int64

		if o.PageCount != nil {
			qrPageCount = *o.PageCount
		}
		qPageCount := swag.FormatInt64(qrPageCount)
		if qPageCount != "" {

			if err := r.SetQueryParam("pageCount", qPageCount); err != nil {
				return err
			}
		}
	}

	if o.PaginationCookie != nil {

		// query param paginationCookie
		var qrPaginationCookie string

		if o.PaginationCookie != nil {
			qrPaginationCookie = *o.PaginationCookie
		}
		qPaginationCookie := qrPaginationCookie
		if qPaginationCookie != "" {

			if err := r.SetQueryParam("paginationCookie", qPaginationCookie); err != nil {
				return err
			}
		}
	}

	if o.RequestInitiatorType != nil {

		// header param requestInitiatorType
		if err := r.SetHeaderParam("requestInitiatorType", *o.RequestInitiatorType); err != nil {
			return err
		}
	}

	if o.StartTimeUsecs != nil {

		// query param startTimeUsecs
		var qrStartTimeUsecs int64

		if o.StartTimeUsecs != nil {
			qrStartTimeUsecs = *o.StartTimeUsecs
		}
		qStartTimeUsecs := swag.FormatInt64(qrStartTimeUsecs)
		if qStartTimeUsecs != "" {

			if err := r.SetQueryParam("startTimeUsecs", qStartTimeUsecs); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
