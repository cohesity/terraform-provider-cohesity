// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProtectionPoliciesParams creates a new GetProtectionPoliciesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProtectionPoliciesParams() *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProtectionPoliciesParamsWithTimeout creates a new GetProtectionPoliciesParams object
// with the ability to set a timeout on a request.
func NewGetProtectionPoliciesParamsWithTimeout(timeout time.Duration) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		timeout: timeout,
	}
}

// NewGetProtectionPoliciesParamsWithContext creates a new GetProtectionPoliciesParams object
// with the ability to set a context for a request.
func NewGetProtectionPoliciesParamsWithContext(ctx context.Context) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		Context: ctx,
	}
}

// NewGetProtectionPoliciesParamsWithHTTPClient creates a new GetProtectionPoliciesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProtectionPoliciesParamsWithHTTPClient(client *http.Client) *GetProtectionPoliciesParams {
	return &GetProtectionPoliciesParams{
		HTTPClient: client,
	}
}

/*
GetProtectionPoliciesParams contains all the parameters to send to the API endpoint

	for the get protection policies operation.

	Typically these are written to a http.Request.
*/
type GetProtectionPoliciesParams struct {

	/* ExcludeLinkedPolicies.

	   If excludeLinkedPolicies is set to true then only local policies created on cluster will be returned. The result will exclude all linked policies created from policy templates.
	*/
	ExcludeLinkedPolicies *bool

	/* Ids.

	   Filter policies by a list of policy ids.
	*/
	Ids []string

	/* IncludeReplicatedPolicies.

	   If includeReplicatedPolicies is set to true, then response will also contain replicated policies. By default, replication policies are not included in the response.
	*/
	IncludeReplicatedPolicies *bool

	/* IncludeStats.

	   If includeStats is set to true, then response will return number of protection groups and objects. By default, the protection stats are not included in the response.
	*/
	IncludeStats *bool

	/* IncludeTenants.

	   IncludeTenantPolicies specifies if objects of all the organizations under the hierarchy of the logged in user's organization should be returned.
	*/
	IncludeTenants *bool

	/* PolicyNames.

	   Filter policies by a list of policy names.
	*/
	PolicyNames []string

	/* RequestInitiatorType.

	   Specifies the type of request from UI, which is used for services like magneto to determine the priority of requests.
	*/
	RequestInitiatorType *string

	/* TenantIds.

	   TenantIds contains ids of the organizations for which objects are to be returned.
	*/
	TenantIds []string

	/* Types.

	   Types specifies the policy type of policies to be returned

	   Default: ["Regular"]
	*/
	Types []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get protection policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionPoliciesParams) WithDefaults() *GetProtectionPoliciesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get protection policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProtectionPoliciesParams) SetDefaults() {
	var (
		typesDefault = []string{"Regular"}
	)

	val := GetProtectionPoliciesParams{
		Types: typesDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTimeout(timeout time.Duration) *GetProtectionPoliciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get protection policies params
func (o *GetProtectionPoliciesParams) WithContext(ctx context.Context) *GetProtectionPoliciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get protection policies params
func (o *GetProtectionPoliciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get protection policies params
func (o *GetProtectionPoliciesParams) WithHTTPClient(client *http.Client) *GetProtectionPoliciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get protection policies params
func (o *GetProtectionPoliciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExcludeLinkedPolicies adds the excludeLinkedPolicies to the get protection policies params
func (o *GetProtectionPoliciesParams) WithExcludeLinkedPolicies(excludeLinkedPolicies *bool) *GetProtectionPoliciesParams {
	o.SetExcludeLinkedPolicies(excludeLinkedPolicies)
	return o
}

// SetExcludeLinkedPolicies adds the excludeLinkedPolicies to the get protection policies params
func (o *GetProtectionPoliciesParams) SetExcludeLinkedPolicies(excludeLinkedPolicies *bool) {
	o.ExcludeLinkedPolicies = excludeLinkedPolicies
}

// WithIds adds the ids to the get protection policies params
func (o *GetProtectionPoliciesParams) WithIds(ids []string) *GetProtectionPoliciesParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get protection policies params
func (o *GetProtectionPoliciesParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithIncludeReplicatedPolicies adds the includeReplicatedPolicies to the get protection policies params
func (o *GetProtectionPoliciesParams) WithIncludeReplicatedPolicies(includeReplicatedPolicies *bool) *GetProtectionPoliciesParams {
	o.SetIncludeReplicatedPolicies(includeReplicatedPolicies)
	return o
}

// SetIncludeReplicatedPolicies adds the includeReplicatedPolicies to the get protection policies params
func (o *GetProtectionPoliciesParams) SetIncludeReplicatedPolicies(includeReplicatedPolicies *bool) {
	o.IncludeReplicatedPolicies = includeReplicatedPolicies
}

// WithIncludeStats adds the includeStats to the get protection policies params
func (o *GetProtectionPoliciesParams) WithIncludeStats(includeStats *bool) *GetProtectionPoliciesParams {
	o.SetIncludeStats(includeStats)
	return o
}

// SetIncludeStats adds the includeStats to the get protection policies params
func (o *GetProtectionPoliciesParams) SetIncludeStats(includeStats *bool) {
	o.IncludeStats = includeStats
}

// WithIncludeTenants adds the includeTenants to the get protection policies params
func (o *GetProtectionPoliciesParams) WithIncludeTenants(includeTenants *bool) *GetProtectionPoliciesParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get protection policies params
func (o *GetProtectionPoliciesParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithPolicyNames adds the policyNames to the get protection policies params
func (o *GetProtectionPoliciesParams) WithPolicyNames(policyNames []string) *GetProtectionPoliciesParams {
	o.SetPolicyNames(policyNames)
	return o
}

// SetPolicyNames adds the policyNames to the get protection policies params
func (o *GetProtectionPoliciesParams) SetPolicyNames(policyNames []string) {
	o.PolicyNames = policyNames
}

// WithRequestInitiatorType adds the requestInitiatorType to the get protection policies params
func (o *GetProtectionPoliciesParams) WithRequestInitiatorType(requestInitiatorType *string) *GetProtectionPoliciesParams {
	o.SetRequestInitiatorType(requestInitiatorType)
	return o
}

// SetRequestInitiatorType adds the requestInitiatorType to the get protection policies params
func (o *GetProtectionPoliciesParams) SetRequestInitiatorType(requestInitiatorType *string) {
	o.RequestInitiatorType = requestInitiatorType
}

// WithTenantIds adds the tenantIds to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTenantIds(tenantIds []string) *GetProtectionPoliciesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithTypes adds the types to the get protection policies params
func (o *GetProtectionPoliciesParams) WithTypes(types []string) *GetProtectionPoliciesParams {
	o.SetTypes(types)
	return o
}

// SetTypes adds the types to the get protection policies params
func (o *GetProtectionPoliciesParams) SetTypes(types []string) {
	o.Types = types
}

// WriteToRequest writes these params to a swagger request
func (o *GetProtectionPoliciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExcludeLinkedPolicies != nil {

		// query param excludeLinkedPolicies
		var qrExcludeLinkedPolicies bool

		if o.ExcludeLinkedPolicies != nil {
			qrExcludeLinkedPolicies = *o.ExcludeLinkedPolicies
		}
		qExcludeLinkedPolicies := swag.FormatBool(qrExcludeLinkedPolicies)
		if qExcludeLinkedPolicies != "" {

			if err := r.SetQueryParam("excludeLinkedPolicies", qExcludeLinkedPolicies); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeReplicatedPolicies != nil {

		// query param includeReplicatedPolicies
		var qrIncludeReplicatedPolicies bool

		if o.IncludeReplicatedPolicies != nil {
			qrIncludeReplicatedPolicies = *o.IncludeReplicatedPolicies
		}
		qIncludeReplicatedPolicies := swag.FormatBool(qrIncludeReplicatedPolicies)
		if qIncludeReplicatedPolicies != "" {

			if err := r.SetQueryParam("includeReplicatedPolicies", qIncludeReplicatedPolicies); err != nil {
				return err
			}
		}
	}

	if o.IncludeStats != nil {

		// query param includeStats
		var qrIncludeStats bool

		if o.IncludeStats != nil {
			qrIncludeStats = *o.IncludeStats
		}
		qIncludeStats := swag.FormatBool(qrIncludeStats)
		if qIncludeStats != "" {

			if err := r.SetQueryParam("includeStats", qIncludeStats); err != nil {
				return err
			}
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.PolicyNames != nil {

		// binding items for policyNames
		joinedPolicyNames := o.bindParamPolicyNames(reg)

		// query array param policyNames
		if err := r.SetQueryParam("policyNames", joinedPolicyNames...); err != nil {
			return err
		}
	}

	if o.RequestInitiatorType != nil {

		// header param requestInitiatorType
		if err := r.SetHeaderParam("requestInitiatorType", *o.RequestInitiatorType); err != nil {
			return err
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.Types != nil {

		// binding items for types
		joinedTypes := o.bindParamTypes(reg)

		// query array param types
		if err := r.SetQueryParam("types", joinedTypes...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetProtectionPolicies binds the parameter ids
func (o *GetProtectionPoliciesParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}

// bindParamGetProtectionPolicies binds the parameter policyNames
func (o *GetProtectionPoliciesParams) bindParamPolicyNames(formats strfmt.Registry) []string {
	policyNamesIR := o.PolicyNames

	var policyNamesIC []string
	for _, policyNamesIIR := range policyNamesIR { // explode []string

		policyNamesIIV := policyNamesIIR // string as string
		policyNamesIC = append(policyNamesIC, policyNamesIIV)
	}

	// items.CollectionFormat: ""
	policyNamesIS := swag.JoinByFormat(policyNamesIC, "")

	return policyNamesIS
}

// bindParamGetProtectionPolicies binds the parameter tenantIds
func (o *GetProtectionPoliciesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}

// bindParamGetProtectionPolicies binds the parameter types
func (o *GetProtectionPoliciesParams) bindParamTypes(formats strfmt.Registry) []string {
	typesIR := o.Types

	var typesIC []string
	for _, typesIIR := range typesIR { // explode []string

		typesIIV := typesIIR // string as string
		typesIC = append(typesIC, typesIIV)
	}

	// items.CollectionFormat: ""
	typesIS := swag.JoinByFormat(typesIC, "")

	return typesIS
}
