// Code generated by go-swagger; DO NOT EDIT.

package identity_provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// IdpsLoginReader is a Reader for the IdpsLogin structure.
type IdpsLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdpsLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewIdpsLoginFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdpsLoginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdpsLoginFound creates a IdpsLoginFound with default headers values
func NewIdpsLoginFound() *IdpsLoginFound {
	return &IdpsLoginFound{}
}

/*
IdpsLoginFound describes a response with status code 302, with default header values.

No Content
*/
type IdpsLoginFound struct {
}

// IsSuccess returns true when this idps login found response has a 2xx status code
func (o *IdpsLoginFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this idps login found response has a 3xx status code
func (o *IdpsLoginFound) IsRedirect() bool {
	return true
}

// IsClientError returns true when this idps login found response has a 4xx status code
func (o *IdpsLoginFound) IsClientError() bool {
	return false
}

// IsServerError returns true when this idps login found response has a 5xx status code
func (o *IdpsLoginFound) IsServerError() bool {
	return false
}

// IsCode returns true when this idps login found response a status code equal to that given
func (o *IdpsLoginFound) IsCode(code int) bool {
	return code == 302
}

// Code gets the status code for the idps login found response
func (o *IdpsLoginFound) Code() int {
	return 302
}

func (o *IdpsLoginFound) Error() string {
	return fmt.Sprintf("[GET /idps/login][%d] idpsLoginFound", 302)
}

func (o *IdpsLoginFound) String() string {
	return fmt.Sprintf("[GET /idps/login][%d] idpsLoginFound", 302)
}

func (o *IdpsLoginFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIdpsLoginDefault creates a IdpsLoginDefault with default headers values
func NewIdpsLoginDefault(code int) *IdpsLoginDefault {
	return &IdpsLoginDefault{
		_statusCode: code,
	}
}

/*
IdpsLoginDefault describes a response with status code -1, with default header values.

Error
*/
type IdpsLoginDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this idps login default response has a 2xx status code
func (o *IdpsLoginDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this idps login default response has a 3xx status code
func (o *IdpsLoginDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this idps login default response has a 4xx status code
func (o *IdpsLoginDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this idps login default response has a 5xx status code
func (o *IdpsLoginDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this idps login default response a status code equal to that given
func (o *IdpsLoginDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the idps login default response
func (o *IdpsLoginDefault) Code() int {
	return o._statusCode
}

func (o *IdpsLoginDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /idps/login][%d] IdpsLogin default %s", o._statusCode, payload)
}

func (o *IdpsLoginDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /idps/login][%d] IdpsLogin default %s", o._statusCode, payload)
}

func (o *IdpsLoginDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *IdpsLoginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
