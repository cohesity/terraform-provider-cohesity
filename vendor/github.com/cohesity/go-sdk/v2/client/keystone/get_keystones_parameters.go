// Code generated by go-swagger; DO NOT EDIT.

package keystone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetKeystonesParams creates a new GetKeystonesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetKeystonesParams() *GetKeystonesParams {
	return &GetKeystonesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetKeystonesParamsWithTimeout creates a new GetKeystonesParams object
// with the ability to set a timeout on a request.
func NewGetKeystonesParamsWithTimeout(timeout time.Duration) *GetKeystonesParams {
	return &GetKeystonesParams{
		timeout: timeout,
	}
}

// NewGetKeystonesParamsWithContext creates a new GetKeystonesParams object
// with the ability to set a context for a request.
func NewGetKeystonesParamsWithContext(ctx context.Context) *GetKeystonesParams {
	return &GetKeystonesParams{
		Context: ctx,
	}
}

// NewGetKeystonesParamsWithHTTPClient creates a new GetKeystonesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetKeystonesParamsWithHTTPClient(client *http.Client) *GetKeystonesParams {
	return &GetKeystonesParams{
		HTTPClient: client,
	}
}

/*
GetKeystonesParams contains all the parameters to send to the API endpoint

	for the get keystones operation.

	Typically these are written to a http.Request.
*/
type GetKeystonesParams struct {

	/* IncludeTenants.

	   If true, the response will include Keystones which were created by all tenants which the current user has permission to see. If false, then only Keystones created by the current user will be returned.
	*/
	IncludeTenants *bool

	/* Names.

	   Specifies a list of Keystone names.
	*/
	Names []string

	/* TenantIds.

	   TenantIds contains ids of the tenants for which objects are to be returned.
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get keystones params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetKeystonesParams) WithDefaults() *GetKeystonesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get keystones params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetKeystonesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get keystones params
func (o *GetKeystonesParams) WithTimeout(timeout time.Duration) *GetKeystonesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get keystones params
func (o *GetKeystonesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get keystones params
func (o *GetKeystonesParams) WithContext(ctx context.Context) *GetKeystonesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get keystones params
func (o *GetKeystonesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get keystones params
func (o *GetKeystonesParams) WithHTTPClient(client *http.Client) *GetKeystonesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get keystones params
func (o *GetKeystonesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeTenants adds the includeTenants to the get keystones params
func (o *GetKeystonesParams) WithIncludeTenants(includeTenants *bool) *GetKeystonesParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get keystones params
func (o *GetKeystonesParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithNames adds the names to the get keystones params
func (o *GetKeystonesParams) WithNames(names []string) *GetKeystonesParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the get keystones params
func (o *GetKeystonesParams) SetNames(names []string) {
	o.Names = names
}

// WithTenantIds adds the tenantIds to the get keystones params
func (o *GetKeystonesParams) WithTenantIds(tenantIds []string) *GetKeystonesParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get keystones params
func (o *GetKeystonesParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetKeystonesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetKeystones binds the parameter names
func (o *GetKeystonesParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: ""
	namesIS := swag.JoinByFormat(namesIC, "")

	return namesIS
}

// bindParamGetKeystones binds the parameter tenantIds
func (o *GetKeystonesParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
