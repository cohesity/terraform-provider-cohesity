// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchProtectedObjectsParams creates a new SearchProtectedObjectsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchProtectedObjectsParams() *SearchProtectedObjectsParams {
	return &SearchProtectedObjectsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchProtectedObjectsParamsWithTimeout creates a new SearchProtectedObjectsParams object
// with the ability to set a timeout on a request.
func NewSearchProtectedObjectsParamsWithTimeout(timeout time.Duration) *SearchProtectedObjectsParams {
	return &SearchProtectedObjectsParams{
		timeout: timeout,
	}
}

// NewSearchProtectedObjectsParamsWithContext creates a new SearchProtectedObjectsParams object
// with the ability to set a context for a request.
func NewSearchProtectedObjectsParamsWithContext(ctx context.Context) *SearchProtectedObjectsParams {
	return &SearchProtectedObjectsParams{
		Context: ctx,
	}
}

// NewSearchProtectedObjectsParamsWithHTTPClient creates a new SearchProtectedObjectsParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchProtectedObjectsParamsWithHTTPClient(client *http.Client) *SearchProtectedObjectsParams {
	return &SearchProtectedObjectsParams{
		HTTPClient: client,
	}
}

/*
SearchProtectedObjectsParams contains all the parameters to send to the API endpoint

	for the search protected objects operation.

	Typically these are written to a http.Request.
*/
type SearchProtectedObjectsParams struct {

	/* CdpProtectedOnly.

	   Specifies whether to only return the CDP protected objects.
	*/
	CdpProtectedOnly *bool

	/* Environments.

	   Specifies the environment type to filter objects.
	*/
	Environments []string

	/* FilterSnapshotFromUsecs.

	   Specifies the timestamp in Unix time epoch in microseconds to filter the objects if the Object has a successful snapshot after this value.

	   Format: int64
	*/
	FilterSnapshotFromUsecs *int64

	/* FilterSnapshotToUsecs.

	   Specifies the timestamp in Unix time epoch in microseconds to filter the objects if the Object has a successful snapshot before this value.

	   Format: int64
	*/
	FilterSnapshotToUsecs *int64

	/* IncludeTenants.

	   If true, the response will include Objects which belongs to all tenants which the current user has permission to see.
	*/
	IncludeTenants *bool

	/* ObjectActionKey.

	   Filter by ObjectActionKey, which uniquely represents protection of an object. An object can be protected in multiple ways but atmost once for a given combination of ObjectActionKey. When specified, latest snapshot info matching the objectActionKey is for corresponding object.
	*/
	ObjectActionKey *string

	/* ObjectIds.

	   Specifies a list of Object ids to filter.
	*/
	ObjectIds []int64

	/* OsTypes.

	   Specifies the operating system types to filter objects on.
	*/
	OsTypes []string

	/* ProtectionGroupIds.

	   Specifies a list of Protection Group ids to filter the objects. If specified, the objects protected by specified Protection Group ids will be returned.
	*/
	ProtectionGroupIds []string

	/* RegionIds.

	   Specifies a list of region ids. Only records from clusters having these region ids will be returned.
	*/
	RegionIds []string

	/* RequestInitiatorType.

	   Specifies the type of request from UI, which is used for services like magneto to determine the priority of requests.
	*/
	RequestInitiatorType *string

	/* RunInstanceIds.

	   Specifies a list of run instance ids. If specified only objects belonging to the provided run id will be retunrned.
	*/
	RunInstanceIds []int64

	/* SearchString.

	   Specifies the search string to filter the objects. This search string will be applicable for objectnames and Protection Group names. User can specify a wildcard character '*' as a suffix to a string where all object and their Protection Group names are matched with the prefix string. For example, if vm1 and vm2 are the names of objects, user can specify vm* to list the objects. If not specified, then all the objects with Protection Groups will be returned which will match other filtering criteria.
	*/
	SearchString *string

	/* SnapshotActions.

	   Specifies a list of recovery actions. Only snapshots that applies to these actions will be returned.
	*/
	SnapshotActions []string

	/* SourceIds.

	   Specifies a list of Protection Source object ids to filter the objects. If specified, the object which are present in those Sources will be returned.
	*/
	SourceIds []int64

	/* StorageDomainIds.

	   Specifies the Storage Domain ids to filter objects for which Protection Groups are writing data to Cohesity Views on the specified Storage Domains.
	*/
	StorageDomainIds []int64

	/* SubResultSize.

	   Specifies the size of objects to be fetched for a single subresult.

	   Format: int32
	*/
	SubResultSize *int32

	/* TenantIds.

	   TenantIds contains ids of the tenants for which objects are to be returned.
	*/
	TenantIds []string

	/* UseCachedData.

	   Specifies whether we can serve the GET request to the read replica cache cache. There is a lag of 15 seconds between the read replica and primary data source.
	*/
	UseCachedData *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search protected objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchProtectedObjectsParams) WithDefaults() *SearchProtectedObjectsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search protected objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchProtectedObjectsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search protected objects params
func (o *SearchProtectedObjectsParams) WithTimeout(timeout time.Duration) *SearchProtectedObjectsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search protected objects params
func (o *SearchProtectedObjectsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search protected objects params
func (o *SearchProtectedObjectsParams) WithContext(ctx context.Context) *SearchProtectedObjectsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search protected objects params
func (o *SearchProtectedObjectsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search protected objects params
func (o *SearchProtectedObjectsParams) WithHTTPClient(client *http.Client) *SearchProtectedObjectsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search protected objects params
func (o *SearchProtectedObjectsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCdpProtectedOnly adds the cdpProtectedOnly to the search protected objects params
func (o *SearchProtectedObjectsParams) WithCdpProtectedOnly(cdpProtectedOnly *bool) *SearchProtectedObjectsParams {
	o.SetCdpProtectedOnly(cdpProtectedOnly)
	return o
}

// SetCdpProtectedOnly adds the cdpProtectedOnly to the search protected objects params
func (o *SearchProtectedObjectsParams) SetCdpProtectedOnly(cdpProtectedOnly *bool) {
	o.CdpProtectedOnly = cdpProtectedOnly
}

// WithEnvironments adds the environments to the search protected objects params
func (o *SearchProtectedObjectsParams) WithEnvironments(environments []string) *SearchProtectedObjectsParams {
	o.SetEnvironments(environments)
	return o
}

// SetEnvironments adds the environments to the search protected objects params
func (o *SearchProtectedObjectsParams) SetEnvironments(environments []string) {
	o.Environments = environments
}

// WithFilterSnapshotFromUsecs adds the filterSnapshotFromUsecs to the search protected objects params
func (o *SearchProtectedObjectsParams) WithFilterSnapshotFromUsecs(filterSnapshotFromUsecs *int64) *SearchProtectedObjectsParams {
	o.SetFilterSnapshotFromUsecs(filterSnapshotFromUsecs)
	return o
}

// SetFilterSnapshotFromUsecs adds the filterSnapshotFromUsecs to the search protected objects params
func (o *SearchProtectedObjectsParams) SetFilterSnapshotFromUsecs(filterSnapshotFromUsecs *int64) {
	o.FilterSnapshotFromUsecs = filterSnapshotFromUsecs
}

// WithFilterSnapshotToUsecs adds the filterSnapshotToUsecs to the search protected objects params
func (o *SearchProtectedObjectsParams) WithFilterSnapshotToUsecs(filterSnapshotToUsecs *int64) *SearchProtectedObjectsParams {
	o.SetFilterSnapshotToUsecs(filterSnapshotToUsecs)
	return o
}

// SetFilterSnapshotToUsecs adds the filterSnapshotToUsecs to the search protected objects params
func (o *SearchProtectedObjectsParams) SetFilterSnapshotToUsecs(filterSnapshotToUsecs *int64) {
	o.FilterSnapshotToUsecs = filterSnapshotToUsecs
}

// WithIncludeTenants adds the includeTenants to the search protected objects params
func (o *SearchProtectedObjectsParams) WithIncludeTenants(includeTenants *bool) *SearchProtectedObjectsParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the search protected objects params
func (o *SearchProtectedObjectsParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithObjectActionKey adds the objectActionKey to the search protected objects params
func (o *SearchProtectedObjectsParams) WithObjectActionKey(objectActionKey *string) *SearchProtectedObjectsParams {
	o.SetObjectActionKey(objectActionKey)
	return o
}

// SetObjectActionKey adds the objectActionKey to the search protected objects params
func (o *SearchProtectedObjectsParams) SetObjectActionKey(objectActionKey *string) {
	o.ObjectActionKey = objectActionKey
}

// WithObjectIds adds the objectIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithObjectIds(objectIds []int64) *SearchProtectedObjectsParams {
	o.SetObjectIds(objectIds)
	return o
}

// SetObjectIds adds the objectIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetObjectIds(objectIds []int64) {
	o.ObjectIds = objectIds
}

// WithOsTypes adds the osTypes to the search protected objects params
func (o *SearchProtectedObjectsParams) WithOsTypes(osTypes []string) *SearchProtectedObjectsParams {
	o.SetOsTypes(osTypes)
	return o
}

// SetOsTypes adds the osTypes to the search protected objects params
func (o *SearchProtectedObjectsParams) SetOsTypes(osTypes []string) {
	o.OsTypes = osTypes
}

// WithProtectionGroupIds adds the protectionGroupIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithProtectionGroupIds(protectionGroupIds []string) *SearchProtectedObjectsParams {
	o.SetProtectionGroupIds(protectionGroupIds)
	return o
}

// SetProtectionGroupIds adds the protectionGroupIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetProtectionGroupIds(protectionGroupIds []string) {
	o.ProtectionGroupIds = protectionGroupIds
}

// WithRegionIds adds the regionIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithRegionIds(regionIds []string) *SearchProtectedObjectsParams {
	o.SetRegionIds(regionIds)
	return o
}

// SetRegionIds adds the regionIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetRegionIds(regionIds []string) {
	o.RegionIds = regionIds
}

// WithRequestInitiatorType adds the requestInitiatorType to the search protected objects params
func (o *SearchProtectedObjectsParams) WithRequestInitiatorType(requestInitiatorType *string) *SearchProtectedObjectsParams {
	o.SetRequestInitiatorType(requestInitiatorType)
	return o
}

// SetRequestInitiatorType adds the requestInitiatorType to the search protected objects params
func (o *SearchProtectedObjectsParams) SetRequestInitiatorType(requestInitiatorType *string) {
	o.RequestInitiatorType = requestInitiatorType
}

// WithRunInstanceIds adds the runInstanceIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithRunInstanceIds(runInstanceIds []int64) *SearchProtectedObjectsParams {
	o.SetRunInstanceIds(runInstanceIds)
	return o
}

// SetRunInstanceIds adds the runInstanceIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetRunInstanceIds(runInstanceIds []int64) {
	o.RunInstanceIds = runInstanceIds
}

// WithSearchString adds the searchString to the search protected objects params
func (o *SearchProtectedObjectsParams) WithSearchString(searchString *string) *SearchProtectedObjectsParams {
	o.SetSearchString(searchString)
	return o
}

// SetSearchString adds the searchString to the search protected objects params
func (o *SearchProtectedObjectsParams) SetSearchString(searchString *string) {
	o.SearchString = searchString
}

// WithSnapshotActions adds the snapshotActions to the search protected objects params
func (o *SearchProtectedObjectsParams) WithSnapshotActions(snapshotActions []string) *SearchProtectedObjectsParams {
	o.SetSnapshotActions(snapshotActions)
	return o
}

// SetSnapshotActions adds the snapshotActions to the search protected objects params
func (o *SearchProtectedObjectsParams) SetSnapshotActions(snapshotActions []string) {
	o.SnapshotActions = snapshotActions
}

// WithSourceIds adds the sourceIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithSourceIds(sourceIds []int64) *SearchProtectedObjectsParams {
	o.SetSourceIds(sourceIds)
	return o
}

// SetSourceIds adds the sourceIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetSourceIds(sourceIds []int64) {
	o.SourceIds = sourceIds
}

// WithStorageDomainIds adds the storageDomainIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithStorageDomainIds(storageDomainIds []int64) *SearchProtectedObjectsParams {
	o.SetStorageDomainIds(storageDomainIds)
	return o
}

// SetStorageDomainIds adds the storageDomainIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetStorageDomainIds(storageDomainIds []int64) {
	o.StorageDomainIds = storageDomainIds
}

// WithSubResultSize adds the subResultSize to the search protected objects params
func (o *SearchProtectedObjectsParams) WithSubResultSize(subResultSize *int32) *SearchProtectedObjectsParams {
	o.SetSubResultSize(subResultSize)
	return o
}

// SetSubResultSize adds the subResultSize to the search protected objects params
func (o *SearchProtectedObjectsParams) SetSubResultSize(subResultSize *int32) {
	o.SubResultSize = subResultSize
}

// WithTenantIds adds the tenantIds to the search protected objects params
func (o *SearchProtectedObjectsParams) WithTenantIds(tenantIds []string) *SearchProtectedObjectsParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the search protected objects params
func (o *SearchProtectedObjectsParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithUseCachedData adds the useCachedData to the search protected objects params
func (o *SearchProtectedObjectsParams) WithUseCachedData(useCachedData *bool) *SearchProtectedObjectsParams {
	o.SetUseCachedData(useCachedData)
	return o
}

// SetUseCachedData adds the useCachedData to the search protected objects params
func (o *SearchProtectedObjectsParams) SetUseCachedData(useCachedData *bool) {
	o.UseCachedData = useCachedData
}

// WriteToRequest writes these params to a swagger request
func (o *SearchProtectedObjectsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CdpProtectedOnly != nil {

		// query param cdpProtectedOnly
		var qrCdpProtectedOnly bool

		if o.CdpProtectedOnly != nil {
			qrCdpProtectedOnly = *o.CdpProtectedOnly
		}
		qCdpProtectedOnly := swag.FormatBool(qrCdpProtectedOnly)
		if qCdpProtectedOnly != "" {

			if err := r.SetQueryParam("cdpProtectedOnly", qCdpProtectedOnly); err != nil {
				return err
			}
		}
	}

	if o.Environments != nil {

		// binding items for environments
		joinedEnvironments := o.bindParamEnvironments(reg)

		// query array param environments
		if err := r.SetQueryParam("environments", joinedEnvironments...); err != nil {
			return err
		}
	}

	if o.FilterSnapshotFromUsecs != nil {

		// query param filterSnapshotFromUsecs
		var qrFilterSnapshotFromUsecs int64

		if o.FilterSnapshotFromUsecs != nil {
			qrFilterSnapshotFromUsecs = *o.FilterSnapshotFromUsecs
		}
		qFilterSnapshotFromUsecs := swag.FormatInt64(qrFilterSnapshotFromUsecs)
		if qFilterSnapshotFromUsecs != "" {

			if err := r.SetQueryParam("filterSnapshotFromUsecs", qFilterSnapshotFromUsecs); err != nil {
				return err
			}
		}
	}

	if o.FilterSnapshotToUsecs != nil {

		// query param filterSnapshotToUsecs
		var qrFilterSnapshotToUsecs int64

		if o.FilterSnapshotToUsecs != nil {
			qrFilterSnapshotToUsecs = *o.FilterSnapshotToUsecs
		}
		qFilterSnapshotToUsecs := swag.FormatInt64(qrFilterSnapshotToUsecs)
		if qFilterSnapshotToUsecs != "" {

			if err := r.SetQueryParam("filterSnapshotToUsecs", qFilterSnapshotToUsecs); err != nil {
				return err
			}
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.ObjectActionKey != nil {

		// query param objectActionKey
		var qrObjectActionKey string

		if o.ObjectActionKey != nil {
			qrObjectActionKey = *o.ObjectActionKey
		}
		qObjectActionKey := qrObjectActionKey
		if qObjectActionKey != "" {

			if err := r.SetQueryParam("objectActionKey", qObjectActionKey); err != nil {
				return err
			}
		}
	}

	if o.ObjectIds != nil {

		// binding items for objectIds
		joinedObjectIds := o.bindParamObjectIds(reg)

		// query array param objectIds
		if err := r.SetQueryParam("objectIds", joinedObjectIds...); err != nil {
			return err
		}
	}

	if o.OsTypes != nil {

		// binding items for osTypes
		joinedOsTypes := o.bindParamOsTypes(reg)

		// query array param osTypes
		if err := r.SetQueryParam("osTypes", joinedOsTypes...); err != nil {
			return err
		}
	}

	if o.ProtectionGroupIds != nil {

		// binding items for protectionGroupIds
		joinedProtectionGroupIds := o.bindParamProtectionGroupIds(reg)

		// query array param protectionGroupIds
		if err := r.SetQueryParam("protectionGroupIds", joinedProtectionGroupIds...); err != nil {
			return err
		}
	}

	if o.RegionIds != nil {

		// binding items for regionIds
		joinedRegionIds := o.bindParamRegionIds(reg)

		// query array param regionIds
		if err := r.SetQueryParam("regionIds", joinedRegionIds...); err != nil {
			return err
		}
	}

	if o.RequestInitiatorType != nil {

		// header param requestInitiatorType
		if err := r.SetHeaderParam("requestInitiatorType", *o.RequestInitiatorType); err != nil {
			return err
		}
	}

	if o.RunInstanceIds != nil {

		// binding items for runInstanceIds
		joinedRunInstanceIds := o.bindParamRunInstanceIds(reg)

		// query array param runInstanceIds
		if err := r.SetQueryParam("runInstanceIds", joinedRunInstanceIds...); err != nil {
			return err
		}
	}

	if o.SearchString != nil {

		// query param searchString
		var qrSearchString string

		if o.SearchString != nil {
			qrSearchString = *o.SearchString
		}
		qSearchString := qrSearchString
		if qSearchString != "" {

			if err := r.SetQueryParam("searchString", qSearchString); err != nil {
				return err
			}
		}
	}

	if o.SnapshotActions != nil {

		// binding items for snapshotActions
		joinedSnapshotActions := o.bindParamSnapshotActions(reg)

		// query array param snapshotActions
		if err := r.SetQueryParam("snapshotActions", joinedSnapshotActions...); err != nil {
			return err
		}
	}

	if o.SourceIds != nil {

		// binding items for sourceIds
		joinedSourceIds := o.bindParamSourceIds(reg)

		// query array param sourceIds
		if err := r.SetQueryParam("sourceIds", joinedSourceIds...); err != nil {
			return err
		}
	}

	if o.StorageDomainIds != nil {

		// binding items for storageDomainIds
		joinedStorageDomainIds := o.bindParamStorageDomainIds(reg)

		// query array param storageDomainIds
		if err := r.SetQueryParam("storageDomainIds", joinedStorageDomainIds...); err != nil {
			return err
		}
	}

	if o.SubResultSize != nil {

		// query param subResultSize
		var qrSubResultSize int32

		if o.SubResultSize != nil {
			qrSubResultSize = *o.SubResultSize
		}
		qSubResultSize := swag.FormatInt32(qrSubResultSize)
		if qSubResultSize != "" {

			if err := r.SetQueryParam("subResultSize", qSubResultSize); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.UseCachedData != nil {

		// query param useCachedData
		var qrUseCachedData bool

		if o.UseCachedData != nil {
			qrUseCachedData = *o.UseCachedData
		}
		qUseCachedData := swag.FormatBool(qrUseCachedData)
		if qUseCachedData != "" {

			if err := r.SetQueryParam("useCachedData", qUseCachedData); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSearchProtectedObjects binds the parameter environments
func (o *SearchProtectedObjectsParams) bindParamEnvironments(formats strfmt.Registry) []string {
	environmentsIR := o.Environments

	var environmentsIC []string
	for _, environmentsIIR := range environmentsIR { // explode []string

		environmentsIIV := environmentsIIR // string as string
		environmentsIC = append(environmentsIC, environmentsIIV)
	}

	// items.CollectionFormat: ""
	environmentsIS := swag.JoinByFormat(environmentsIC, "")

	return environmentsIS
}

// bindParamSearchProtectedObjects binds the parameter objectIds
func (o *SearchProtectedObjectsParams) bindParamObjectIds(formats strfmt.Registry) []string {
	objectIdsIR := o.ObjectIds

	var objectIdsIC []string
	for _, objectIdsIIR := range objectIdsIR { // explode []int64

		objectIdsIIV := swag.FormatInt64(objectIdsIIR) // int64 as string
		objectIdsIC = append(objectIdsIC, objectIdsIIV)
	}

	// items.CollectionFormat: ""
	objectIdsIS := swag.JoinByFormat(objectIdsIC, "")

	return objectIdsIS
}

// bindParamSearchProtectedObjects binds the parameter osTypes
func (o *SearchProtectedObjectsParams) bindParamOsTypes(formats strfmt.Registry) []string {
	osTypesIR := o.OsTypes

	var osTypesIC []string
	for _, osTypesIIR := range osTypesIR { // explode []string

		osTypesIIV := osTypesIIR // string as string
		osTypesIC = append(osTypesIC, osTypesIIV)
	}

	// items.CollectionFormat: ""
	osTypesIS := swag.JoinByFormat(osTypesIC, "")

	return osTypesIS
}

// bindParamSearchProtectedObjects binds the parameter protectionGroupIds
func (o *SearchProtectedObjectsParams) bindParamProtectionGroupIds(formats strfmt.Registry) []string {
	protectionGroupIdsIR := o.ProtectionGroupIds

	var protectionGroupIdsIC []string
	for _, protectionGroupIdsIIR := range protectionGroupIdsIR { // explode []string

		protectionGroupIdsIIV := protectionGroupIdsIIR // string as string
		protectionGroupIdsIC = append(protectionGroupIdsIC, protectionGroupIdsIIV)
	}

	// items.CollectionFormat: ""
	protectionGroupIdsIS := swag.JoinByFormat(protectionGroupIdsIC, "")

	return protectionGroupIdsIS
}

// bindParamSearchProtectedObjects binds the parameter regionIds
func (o *SearchProtectedObjectsParams) bindParamRegionIds(formats strfmt.Registry) []string {
	regionIdsIR := o.RegionIds

	var regionIdsIC []string
	for _, regionIdsIIR := range regionIdsIR { // explode []string

		regionIdsIIV := regionIdsIIR // string as string
		regionIdsIC = append(regionIdsIC, regionIdsIIV)
	}

	// items.CollectionFormat: ""
	regionIdsIS := swag.JoinByFormat(regionIdsIC, "")

	return regionIdsIS
}

// bindParamSearchProtectedObjects binds the parameter runInstanceIds
func (o *SearchProtectedObjectsParams) bindParamRunInstanceIds(formats strfmt.Registry) []string {
	runInstanceIdsIR := o.RunInstanceIds

	var runInstanceIdsIC []string
	for _, runInstanceIdsIIR := range runInstanceIdsIR { // explode []int64

		runInstanceIdsIIV := swag.FormatInt64(runInstanceIdsIIR) // int64 as string
		runInstanceIdsIC = append(runInstanceIdsIC, runInstanceIdsIIV)
	}

	// items.CollectionFormat: ""
	runInstanceIdsIS := swag.JoinByFormat(runInstanceIdsIC, "")

	return runInstanceIdsIS
}

// bindParamSearchProtectedObjects binds the parameter snapshotActions
func (o *SearchProtectedObjectsParams) bindParamSnapshotActions(formats strfmt.Registry) []string {
	snapshotActionsIR := o.SnapshotActions

	var snapshotActionsIC []string
	for _, snapshotActionsIIR := range snapshotActionsIR { // explode []string

		snapshotActionsIIV := snapshotActionsIIR // string as string
		snapshotActionsIC = append(snapshotActionsIC, snapshotActionsIIV)
	}

	// items.CollectionFormat: ""
	snapshotActionsIS := swag.JoinByFormat(snapshotActionsIC, "")

	return snapshotActionsIS
}

// bindParamSearchProtectedObjects binds the parameter sourceIds
func (o *SearchProtectedObjectsParams) bindParamSourceIds(formats strfmt.Registry) []string {
	sourceIdsIR := o.SourceIds

	var sourceIdsIC []string
	for _, sourceIdsIIR := range sourceIdsIR { // explode []int64

		sourceIdsIIV := swag.FormatInt64(sourceIdsIIR) // int64 as string
		sourceIdsIC = append(sourceIdsIC, sourceIdsIIV)
	}

	// items.CollectionFormat: ""
	sourceIdsIS := swag.JoinByFormat(sourceIdsIC, "")

	return sourceIdsIS
}

// bindParamSearchProtectedObjects binds the parameter storageDomainIds
func (o *SearchProtectedObjectsParams) bindParamStorageDomainIds(formats strfmt.Registry) []string {
	storageDomainIdsIR := o.StorageDomainIds

	var storageDomainIdsIC []string
	for _, storageDomainIdsIIR := range storageDomainIdsIR { // explode []int64

		storageDomainIdsIIV := swag.FormatInt64(storageDomainIdsIIR) // int64 as string
		storageDomainIdsIC = append(storageDomainIdsIC, storageDomainIdsIIV)
	}

	// items.CollectionFormat: ""
	storageDomainIdsIS := swag.JoinByFormat(storageDomainIdsIC, "")

	return storageDomainIdsIS
}

// bindParamSearchProtectedObjects binds the parameter tenantIds
func (o *SearchProtectedObjectsParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}
