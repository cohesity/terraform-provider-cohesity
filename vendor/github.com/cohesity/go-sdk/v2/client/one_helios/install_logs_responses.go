// Code generated by go-swagger; DO NOT EDIT.

package one_helios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// InstallLogsReader is a Reader for the InstallLogs structure.
type InstallLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstallLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewInstallLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInstallLogsOK creates a InstallLogsOK with default headers values
func NewInstallLogsOK() *InstallLogsOK {
	return &InstallLogsOK{}
}

/*
InstallLogsOK describes a response with status code 200, with default header values.

(empty)
*/
type InstallLogsOK struct {
	Payload *models.InstallLogsResponse
}

// IsSuccess returns true when this install logs o k response has a 2xx status code
func (o *InstallLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install logs o k response has a 3xx status code
func (o *InstallLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install logs o k response has a 4xx status code
func (o *InstallLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this install logs o k response has a 5xx status code
func (o *InstallLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this install logs o k response a status code equal to that given
func (o *InstallLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the install logs o k response
func (o *InstallLogsOK) Code() int {
	return 200
}

func (o *InstallLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /helios/services/install/logs][%d] installLogsOK %s", 200, payload)
}

func (o *InstallLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /helios/services/install/logs][%d] installLogsOK %s", 200, payload)
}

func (o *InstallLogsOK) GetPayload() *models.InstallLogsResponse {
	return o.Payload
}

func (o *InstallLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstallLogsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallLogsDefault creates a InstallLogsDefault with default headers values
func NewInstallLogsDefault(code int) *InstallLogsDefault {
	return &InstallLogsDefault{
		_statusCode: code,
	}
}

/*
InstallLogsDefault describes a response with status code -1, with default header values.

(empty)
*/
type InstallLogsDefault struct {
	_statusCode int

	Payload *models.AppOrchestratorError
}

// IsSuccess returns true when this install logs default response has a 2xx status code
func (o *InstallLogsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this install logs default response has a 3xx status code
func (o *InstallLogsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this install logs default response has a 4xx status code
func (o *InstallLogsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this install logs default response has a 5xx status code
func (o *InstallLogsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this install logs default response a status code equal to that given
func (o *InstallLogsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the install logs default response
func (o *InstallLogsDefault) Code() int {
	return o._statusCode
}

func (o *InstallLogsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /helios/services/install/logs][%d] InstallLogs default %s", o._statusCode, payload)
}

func (o *InstallLogsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /helios/services/install/logs][%d] InstallLogs default %s", o._statusCode, payload)
}

func (o *InstallLogsDefault) GetPayload() *models.AppOrchestratorError {
	return o.Payload
}

func (o *InstallLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppOrchestratorError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
