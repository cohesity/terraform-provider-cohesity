// Code generated by go-swagger; DO NOT EDIT.

package one_helios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// PerformServiceActionReader is a Reader for the PerformServiceAction structure.
type PerformServiceActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformServiceActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPerformServiceActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPerformServiceActionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPerformServiceActionOK creates a PerformServiceActionOK with default headers values
func NewPerformServiceActionOK() *PerformServiceActionOK {
	return &PerformServiceActionOK{}
}

/*
PerformServiceActionOK describes a response with status code 200, with default header values.

(empty)
*/
type PerformServiceActionOK struct {
	Payload *models.ServiceActionResponse
}

// IsSuccess returns true when this perform service action o k response has a 2xx status code
func (o *PerformServiceActionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this perform service action o k response has a 3xx status code
func (o *PerformServiceActionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this perform service action o k response has a 4xx status code
func (o *PerformServiceActionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this perform service action o k response has a 5xx status code
func (o *PerformServiceActionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this perform service action o k response a status code equal to that given
func (o *PerformServiceActionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the perform service action o k response
func (o *PerformServiceActionOK) Code() int {
	return 200
}

func (o *PerformServiceActionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /helios/services/ondemand/{serviceName}/action][%d] performServiceActionOK %s", 200, payload)
}

func (o *PerformServiceActionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /helios/services/ondemand/{serviceName}/action][%d] performServiceActionOK %s", 200, payload)
}

func (o *PerformServiceActionOK) GetPayload() *models.ServiceActionResponse {
	return o.Payload
}

func (o *PerformServiceActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformServiceActionDefault creates a PerformServiceActionDefault with default headers values
func NewPerformServiceActionDefault(code int) *PerformServiceActionDefault {
	return &PerformServiceActionDefault{
		_statusCode: code,
	}
}

/*
PerformServiceActionDefault describes a response with status code -1, with default header values.

(empty)
*/
type PerformServiceActionDefault struct {
	_statusCode int

	Payload *models.AppOrchestratorError
}

// IsSuccess returns true when this perform service action default response has a 2xx status code
func (o *PerformServiceActionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this perform service action default response has a 3xx status code
func (o *PerformServiceActionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this perform service action default response has a 4xx status code
func (o *PerformServiceActionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this perform service action default response has a 5xx status code
func (o *PerformServiceActionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this perform service action default response a status code equal to that given
func (o *PerformServiceActionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the perform service action default response
func (o *PerformServiceActionDefault) Code() int {
	return o._statusCode
}

func (o *PerformServiceActionDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /helios/services/ondemand/{serviceName}/action][%d] PerformServiceAction default %s", o._statusCode, payload)
}

func (o *PerformServiceActionDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /helios/services/ondemand/{serviceName}/action][%d] PerformServiceAction default %s", o._statusCode, payload)
}

func (o *PerformServiceActionDefault) GetPayload() *models.AppOrchestratorError {
	return o.Payload
}

func (o *PerformServiceActionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppOrchestratorError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
