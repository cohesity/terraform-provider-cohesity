// Code generated by go-swagger; DO NOT EDIT.

package data_tiering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDataTieringAnalysisGroupsParams creates a new GetDataTieringAnalysisGroupsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDataTieringAnalysisGroupsParams() *GetDataTieringAnalysisGroupsParams {
	return &GetDataTieringAnalysisGroupsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDataTieringAnalysisGroupsParamsWithTimeout creates a new GetDataTieringAnalysisGroupsParams object
// with the ability to set a timeout on a request.
func NewGetDataTieringAnalysisGroupsParamsWithTimeout(timeout time.Duration) *GetDataTieringAnalysisGroupsParams {
	return &GetDataTieringAnalysisGroupsParams{
		timeout: timeout,
	}
}

// NewGetDataTieringAnalysisGroupsParamsWithContext creates a new GetDataTieringAnalysisGroupsParams object
// with the ability to set a context for a request.
func NewGetDataTieringAnalysisGroupsParamsWithContext(ctx context.Context) *GetDataTieringAnalysisGroupsParams {
	return &GetDataTieringAnalysisGroupsParams{
		Context: ctx,
	}
}

// NewGetDataTieringAnalysisGroupsParamsWithHTTPClient creates a new GetDataTieringAnalysisGroupsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDataTieringAnalysisGroupsParamsWithHTTPClient(client *http.Client) *GetDataTieringAnalysisGroupsParams {
	return &GetDataTieringAnalysisGroupsParams{
		HTTPClient: client,
	}
}

/*
GetDataTieringAnalysisGroupsParams contains all the parameters to send to the API endpoint

	for the get data tiering analysis groups operation.

	Typically these are written to a http.Request.
*/
type GetDataTieringAnalysisGroupsParams struct {

	/* Ids.

	   Filter by a list of Analysis Group IDs.
	*/
	Ids []string

	/* IncludeLastRunStats.

	   If true, the response will include last run info. If it is false or not specified, the last run info won't be returned.
	*/
	IncludeLastRunStats *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get data tiering analysis groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDataTieringAnalysisGroupsParams) WithDefaults() *GetDataTieringAnalysisGroupsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get data tiering analysis groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDataTieringAnalysisGroupsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) WithTimeout(timeout time.Duration) *GetDataTieringAnalysisGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) WithContext(ctx context.Context) *GetDataTieringAnalysisGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) WithHTTPClient(client *http.Client) *GetDataTieringAnalysisGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) WithIds(ids []string) *GetDataTieringAnalysisGroupsParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithIncludeLastRunStats adds the includeLastRunStats to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) WithIncludeLastRunStats(includeLastRunStats *bool) *GetDataTieringAnalysisGroupsParams {
	o.SetIncludeLastRunStats(includeLastRunStats)
	return o
}

// SetIncludeLastRunStats adds the includeLastRunStats to the get data tiering analysis groups params
func (o *GetDataTieringAnalysisGroupsParams) SetIncludeLastRunStats(includeLastRunStats *bool) {
	o.IncludeLastRunStats = includeLastRunStats
}

// WriteToRequest writes these params to a swagger request
func (o *GetDataTieringAnalysisGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.IncludeLastRunStats != nil {

		// query param includeLastRunStats
		var qrIncludeLastRunStats bool

		if o.IncludeLastRunStats != nil {
			qrIncludeLastRunStats = *o.IncludeLastRunStats
		}
		qIncludeLastRunStats := swag.FormatBool(qrIncludeLastRunStats)
		if qIncludeLastRunStats != "" {

			if err := r.SetQueryParam("includeLastRunStats", qIncludeLastRunStats); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetDataTieringAnalysisGroups binds the parameter ids
func (o *GetDataTieringAnalysisGroupsParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: ""
	idsIS := swag.JoinByFormat(idsIC, "")

	return idsIS
}
