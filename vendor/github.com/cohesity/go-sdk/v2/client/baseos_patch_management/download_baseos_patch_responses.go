// Code generated by go-swagger; DO NOT EDIT.

package baseos_patch_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// DownloadBaseosPatchReader is a Reader for the DownloadBaseosPatch structure.
type DownloadBaseosPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadBaseosPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadBaseosPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDownloadBaseosPatchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDownloadBaseosPatchOK creates a DownloadBaseosPatchOK with default headers values
func NewDownloadBaseosPatchOK() *DownloadBaseosPatchOK {
	return &DownloadBaseosPatchOK{}
}

/*
DownloadBaseosPatchOK describes a response with status code 200, with default header values.

No Content
*/
type DownloadBaseosPatchOK struct {
}

// IsSuccess returns true when this download baseos patch o k response has a 2xx status code
func (o *DownloadBaseosPatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download baseos patch o k response has a 3xx status code
func (o *DownloadBaseosPatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download baseos patch o k response has a 4xx status code
func (o *DownloadBaseosPatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this download baseos patch o k response has a 5xx status code
func (o *DownloadBaseosPatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this download baseos patch o k response a status code equal to that given
func (o *DownloadBaseosPatchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the download baseos patch o k response
func (o *DownloadBaseosPatchOK) Code() int {
	return 200
}

func (o *DownloadBaseosPatchOK) Error() string {
	return fmt.Sprintf("[POST /patch-management/baseos-patch-download][%d] downloadBaseosPatchOK", 200)
}

func (o *DownloadBaseosPatchOK) String() string {
	return fmt.Sprintf("[POST /patch-management/baseos-patch-download][%d] downloadBaseosPatchOK", 200)
}

func (o *DownloadBaseosPatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadBaseosPatchDefault creates a DownloadBaseosPatchDefault with default headers values
func NewDownloadBaseosPatchDefault(code int) *DownloadBaseosPatchDefault {
	return &DownloadBaseosPatchDefault{
		_statusCode: code,
	}
}

/*
DownloadBaseosPatchDefault describes a response with status code -1, with default header values.

Error
*/
type DownloadBaseosPatchDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this download baseos patch default response has a 2xx status code
func (o *DownloadBaseosPatchDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this download baseos patch default response has a 3xx status code
func (o *DownloadBaseosPatchDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this download baseos patch default response has a 4xx status code
func (o *DownloadBaseosPatchDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this download baseos patch default response has a 5xx status code
func (o *DownloadBaseosPatchDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this download baseos patch default response a status code equal to that given
func (o *DownloadBaseosPatchDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the download baseos patch default response
func (o *DownloadBaseosPatchDefault) Code() int {
	return o._statusCode
}

func (o *DownloadBaseosPatchDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /patch-management/baseos-patch-download][%d] DownloadBaseosPatch default %s", o._statusCode, payload)
}

func (o *DownloadBaseosPatchDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /patch-management/baseos-patch-download][%d] DownloadBaseosPatch default %s", o._statusCode, payload)
}

func (o *DownloadBaseosPatchDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadBaseosPatchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
