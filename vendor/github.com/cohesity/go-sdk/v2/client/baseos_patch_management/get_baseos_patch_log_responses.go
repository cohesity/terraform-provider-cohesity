// Code generated by go-swagger; DO NOT EDIT.

package baseos_patch_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// GetBaseosPatchLogReader is a Reader for the GetBaseosPatchLog structure.
type GetBaseosPatchLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBaseosPatchLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBaseosPatchLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetBaseosPatchLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBaseosPatchLogOK creates a GetBaseosPatchLogOK with default headers values
func NewGetBaseosPatchLogOK() *GetBaseosPatchLogOK {
	return &GetBaseosPatchLogOK{}
}

/*
GetBaseosPatchLogOK describes a response with status code 200, with default header values.

Success
*/
type GetBaseosPatchLogOK struct {
	Payload *models.BaseosPatchLog
}

// IsSuccess returns true when this get baseos patch log o k response has a 2xx status code
func (o *GetBaseosPatchLogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get baseos patch log o k response has a 3xx status code
func (o *GetBaseosPatchLogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get baseos patch log o k response has a 4xx status code
func (o *GetBaseosPatchLogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get baseos patch log o k response has a 5xx status code
func (o *GetBaseosPatchLogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get baseos patch log o k response a status code equal to that given
func (o *GetBaseosPatchLogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get baseos patch log o k response
func (o *GetBaseosPatchLogOK) Code() int {
	return 200
}

func (o *GetBaseosPatchLogOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /patch-management/baseos-patch-log][%d] getBaseosPatchLogOK %s", 200, payload)
}

func (o *GetBaseosPatchLogOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /patch-management/baseos-patch-log][%d] getBaseosPatchLogOK %s", 200, payload)
}

func (o *GetBaseosPatchLogOK) GetPayload() *models.BaseosPatchLog {
	return o.Payload
}

func (o *GetBaseosPatchLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseosPatchLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseosPatchLogDefault creates a GetBaseosPatchLogDefault with default headers values
func NewGetBaseosPatchLogDefault(code int) *GetBaseosPatchLogDefault {
	return &GetBaseosPatchLogDefault{
		_statusCode: code,
	}
}

/*
GetBaseosPatchLogDefault describes a response with status code -1, with default header values.

Error
*/
type GetBaseosPatchLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get baseos patch log default response has a 2xx status code
func (o *GetBaseosPatchLogDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get baseos patch log default response has a 3xx status code
func (o *GetBaseosPatchLogDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get baseos patch log default response has a 4xx status code
func (o *GetBaseosPatchLogDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get baseos patch log default response has a 5xx status code
func (o *GetBaseosPatchLogDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get baseos patch log default response a status code equal to that given
func (o *GetBaseosPatchLogDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get baseos patch log default response
func (o *GetBaseosPatchLogDefault) Code() int {
	return o._statusCode
}

func (o *GetBaseosPatchLogDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /patch-management/baseos-patch-log][%d] GetBaseosPatchLog default %s", o._statusCode, payload)
}

func (o *GetBaseosPatchLogDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /patch-management/baseos-patch-log][%d] GetBaseosPatchLog default %s", o._statusCode, payload)
}

func (o *GetBaseosPatchLogDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBaseosPatchLogDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
