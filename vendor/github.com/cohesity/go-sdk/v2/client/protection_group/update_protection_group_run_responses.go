// Code generated by go-swagger; DO NOT EDIT.

package protection_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// UpdateProtectionGroupRunReader is a Reader for the UpdateProtectionGroupRun structure.
type UpdateProtectionGroupRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProtectionGroupRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 207:
		result := NewUpdateProtectionGroupRunMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateProtectionGroupRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateProtectionGroupRunMultiStatus creates a UpdateProtectionGroupRunMultiStatus with default headers values
func NewUpdateProtectionGroupRunMultiStatus() *UpdateProtectionGroupRunMultiStatus {
	return &UpdateProtectionGroupRunMultiStatus{}
}

/*
UpdateProtectionGroupRunMultiStatus describes a response with status code 207, with default header values.

Success
*/
type UpdateProtectionGroupRunMultiStatus struct {
	Payload *models.UpdateProtectionGroupRunResponseBody
}

// IsSuccess returns true when this update protection group run multi status response has a 2xx status code
func (o *UpdateProtectionGroupRunMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update protection group run multi status response has a 3xx status code
func (o *UpdateProtectionGroupRunMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update protection group run multi status response has a 4xx status code
func (o *UpdateProtectionGroupRunMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this update protection group run multi status response has a 5xx status code
func (o *UpdateProtectionGroupRunMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this update protection group run multi status response a status code equal to that given
func (o *UpdateProtectionGroupRunMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the update protection group run multi status response
func (o *UpdateProtectionGroupRunMultiStatus) Code() int {
	return 207
}

func (o *UpdateProtectionGroupRunMultiStatus) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /data-protect/protection-groups/{id}/runs][%d] updateProtectionGroupRunMultiStatus %s", 207, payload)
}

func (o *UpdateProtectionGroupRunMultiStatus) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /data-protect/protection-groups/{id}/runs][%d] updateProtectionGroupRunMultiStatus %s", 207, payload)
}

func (o *UpdateProtectionGroupRunMultiStatus) GetPayload() *models.UpdateProtectionGroupRunResponseBody {
	return o.Payload
}

func (o *UpdateProtectionGroupRunMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateProtectionGroupRunResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProtectionGroupRunDefault creates a UpdateProtectionGroupRunDefault with default headers values
func NewUpdateProtectionGroupRunDefault(code int) *UpdateProtectionGroupRunDefault {
	return &UpdateProtectionGroupRunDefault{
		_statusCode: code,
	}
}

/*
UpdateProtectionGroupRunDefault describes a response with status code -1, with default header values.

Error
*/
type UpdateProtectionGroupRunDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update protection group run default response has a 2xx status code
func (o *UpdateProtectionGroupRunDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update protection group run default response has a 3xx status code
func (o *UpdateProtectionGroupRunDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update protection group run default response has a 4xx status code
func (o *UpdateProtectionGroupRunDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update protection group run default response has a 5xx status code
func (o *UpdateProtectionGroupRunDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update protection group run default response a status code equal to that given
func (o *UpdateProtectionGroupRunDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update protection group run default response
func (o *UpdateProtectionGroupRunDefault) Code() int {
	return o._statusCode
}

func (o *UpdateProtectionGroupRunDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /data-protect/protection-groups/{id}/runs][%d] UpdateProtectionGroupRun default %s", o._statusCode, payload)
}

func (o *UpdateProtectionGroupRunDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /data-protect/protection-groups/{id}/runs][%d] UpdateProtectionGroupRun default %s", o._statusCode, payload)
}

func (o *UpdateProtectionGroupRunDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProtectionGroupRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
