// Code generated by go-swagger; DO NOT EDIT.

package protection_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteProtectionGroupParams creates a new DeleteProtectionGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteProtectionGroupParams() *DeleteProtectionGroupParams {
	return &DeleteProtectionGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteProtectionGroupParamsWithTimeout creates a new DeleteProtectionGroupParams object
// with the ability to set a timeout on a request.
func NewDeleteProtectionGroupParamsWithTimeout(timeout time.Duration) *DeleteProtectionGroupParams {
	return &DeleteProtectionGroupParams{
		timeout: timeout,
	}
}

// NewDeleteProtectionGroupParamsWithContext creates a new DeleteProtectionGroupParams object
// with the ability to set a context for a request.
func NewDeleteProtectionGroupParamsWithContext(ctx context.Context) *DeleteProtectionGroupParams {
	return &DeleteProtectionGroupParams{
		Context: ctx,
	}
}

// NewDeleteProtectionGroupParamsWithHTTPClient creates a new DeleteProtectionGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteProtectionGroupParamsWithHTTPClient(client *http.Client) *DeleteProtectionGroupParams {
	return &DeleteProtectionGroupParams{
		HTTPClient: client,
	}
}

/*
DeleteProtectionGroupParams contains all the parameters to send to the API endpoint

	for the delete protection group operation.

	Typically these are written to a http.Request.
*/
type DeleteProtectionGroupParams struct {

	/* DeleteSnapshots.

	   Specifies if Snapshots generated by the Protection Group should also be deleted when the Protection Group is deleted.
	*/
	DeleteSnapshots *bool

	/* ID.

	   Specifies a unique id of the Protection Group.
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete protection group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProtectionGroupParams) WithDefaults() *DeleteProtectionGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete protection group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProtectionGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete protection group params
func (o *DeleteProtectionGroupParams) WithTimeout(timeout time.Duration) *DeleteProtectionGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete protection group params
func (o *DeleteProtectionGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete protection group params
func (o *DeleteProtectionGroupParams) WithContext(ctx context.Context) *DeleteProtectionGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete protection group params
func (o *DeleteProtectionGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete protection group params
func (o *DeleteProtectionGroupParams) WithHTTPClient(client *http.Client) *DeleteProtectionGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete protection group params
func (o *DeleteProtectionGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleteSnapshots adds the deleteSnapshots to the delete protection group params
func (o *DeleteProtectionGroupParams) WithDeleteSnapshots(deleteSnapshots *bool) *DeleteProtectionGroupParams {
	o.SetDeleteSnapshots(deleteSnapshots)
	return o
}

// SetDeleteSnapshots adds the deleteSnapshots to the delete protection group params
func (o *DeleteProtectionGroupParams) SetDeleteSnapshots(deleteSnapshots *bool) {
	o.DeleteSnapshots = deleteSnapshots
}

// WithID adds the id to the delete protection group params
func (o *DeleteProtectionGroupParams) WithID(id string) *DeleteProtectionGroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete protection group params
func (o *DeleteProtectionGroupParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteProtectionGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DeleteSnapshots != nil {

		// query param deleteSnapshots
		var qrDeleteSnapshots bool

		if o.DeleteSnapshots != nil {
			qrDeleteSnapshots = *o.DeleteSnapshots
		}
		qDeleteSnapshots := swag.FormatBool(qrDeleteSnapshots)
		if qDeleteSnapshots != "" {

			if err := r.SetQueryParam("deleteSnapshots", qDeleteSnapshots); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
