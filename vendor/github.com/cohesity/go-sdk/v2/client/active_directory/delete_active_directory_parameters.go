// Code generated by go-swagger; DO NOT EDIT.

package active_directory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteActiveDirectoryParams creates a new DeleteActiveDirectoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteActiveDirectoryParams() *DeleteActiveDirectoryParams {
	return &DeleteActiveDirectoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteActiveDirectoryParamsWithTimeout creates a new DeleteActiveDirectoryParams object
// with the ability to set a timeout on a request.
func NewDeleteActiveDirectoryParamsWithTimeout(timeout time.Duration) *DeleteActiveDirectoryParams {
	return &DeleteActiveDirectoryParams{
		timeout: timeout,
	}
}

// NewDeleteActiveDirectoryParamsWithContext creates a new DeleteActiveDirectoryParams object
// with the ability to set a context for a request.
func NewDeleteActiveDirectoryParamsWithContext(ctx context.Context) *DeleteActiveDirectoryParams {
	return &DeleteActiveDirectoryParams{
		Context: ctx,
	}
}

// NewDeleteActiveDirectoryParamsWithHTTPClient creates a new DeleteActiveDirectoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteActiveDirectoryParamsWithHTTPClient(client *http.Client) *DeleteActiveDirectoryParams {
	return &DeleteActiveDirectoryParams{
		HTTPClient: client,
	}
}

/*
DeleteActiveDirectoryParams contains all the parameters to send to the API endpoint

	for the delete active directory operation.

	Typically these are written to a http.Request.
*/
type DeleteActiveDirectoryParams struct {

	/* ActiveDirectoryAdminPassword.

	   Specifies the password of the Active Directory Admin.
	*/
	ActiveDirectoryAdminPassword string

	/* ActiveDirectoryAdminUsername.

	   Specifies the username of the Active Directory Admin.
	*/
	ActiveDirectoryAdminUsername string

	/* ForceRemove.

	   To force delete the Active directory from cluster. This will skip all the checks that prevents cluster from leaving an AD domain.
	*/
	ForceRemove *bool

	/* ID.

	   Specifies id of an Active Directory.

	   Format: int64
	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete active directory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteActiveDirectoryParams) WithDefaults() *DeleteActiveDirectoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete active directory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteActiveDirectoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithTimeout(timeout time.Duration) *DeleteActiveDirectoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithContext(ctx context.Context) *DeleteActiveDirectoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithHTTPClient(client *http.Client) *DeleteActiveDirectoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActiveDirectoryAdminPassword adds the activeDirectoryAdminPassword to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithActiveDirectoryAdminPassword(activeDirectoryAdminPassword string) *DeleteActiveDirectoryParams {
	o.SetActiveDirectoryAdminPassword(activeDirectoryAdminPassword)
	return o
}

// SetActiveDirectoryAdminPassword adds the activeDirectoryAdminPassword to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetActiveDirectoryAdminPassword(activeDirectoryAdminPassword string) {
	o.ActiveDirectoryAdminPassword = activeDirectoryAdminPassword
}

// WithActiveDirectoryAdminUsername adds the activeDirectoryAdminUsername to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithActiveDirectoryAdminUsername(activeDirectoryAdminUsername string) *DeleteActiveDirectoryParams {
	o.SetActiveDirectoryAdminUsername(activeDirectoryAdminUsername)
	return o
}

// SetActiveDirectoryAdminUsername adds the activeDirectoryAdminUsername to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetActiveDirectoryAdminUsername(activeDirectoryAdminUsername string) {
	o.ActiveDirectoryAdminUsername = activeDirectoryAdminUsername
}

// WithForceRemove adds the forceRemove to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithForceRemove(forceRemove *bool) *DeleteActiveDirectoryParams {
	o.SetForceRemove(forceRemove)
	return o
}

// SetForceRemove adds the forceRemove to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetForceRemove(forceRemove *bool) {
	o.ForceRemove = forceRemove
}

// WithID adds the id to the delete active directory params
func (o *DeleteActiveDirectoryParams) WithID(id int64) *DeleteActiveDirectoryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete active directory params
func (o *DeleteActiveDirectoryParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteActiveDirectoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param activeDirectoryAdminPassword
	if err := r.SetHeaderParam("activeDirectoryAdminPassword", o.ActiveDirectoryAdminPassword); err != nil {
		return err
	}

	// header param activeDirectoryAdminUsername
	if err := r.SetHeaderParam("activeDirectoryAdminUsername", o.ActiveDirectoryAdminUsername); err != nil {
		return err
	}

	if o.ForceRemove != nil {

		// query param forceRemove
		var qrForceRemove bool

		if o.ForceRemove != nil {
			qrForceRemove = *o.ForceRemove
		}
		qForceRemove := swag.FormatBool(qrForceRemove)
		if qForceRemove != "" {

			if err := r.SetQueryParam("forceRemove", qForceRemove); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
