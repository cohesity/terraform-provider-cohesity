// Code generated by go-swagger; DO NOT EDIT.

package active_directory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// UpdateActiveDirectoryReader is a Reader for the UpdateActiveDirectory structure.
type UpdateActiveDirectoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateActiveDirectoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateActiveDirectoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateActiveDirectoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateActiveDirectoryOK creates a UpdateActiveDirectoryOK with default headers values
func NewUpdateActiveDirectoryOK() *UpdateActiveDirectoryOK {
	return &UpdateActiveDirectoryOK{}
}

/*
UpdateActiveDirectoryOK describes a response with status code 200, with default header values.

Success
*/
type UpdateActiveDirectoryOK struct {
	Payload *models.ActiveDirectory
}

// IsSuccess returns true when this update active directory o k response has a 2xx status code
func (o *UpdateActiveDirectoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update active directory o k response has a 3xx status code
func (o *UpdateActiveDirectoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active directory o k response has a 4xx status code
func (o *UpdateActiveDirectoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update active directory o k response has a 5xx status code
func (o *UpdateActiveDirectoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update active directory o k response a status code equal to that given
func (o *UpdateActiveDirectoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update active directory o k response
func (o *UpdateActiveDirectoryOK) Code() int {
	return 200
}

func (o *UpdateActiveDirectoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /active-directories/{id}][%d] updateActiveDirectoryOK %s", 200, payload)
}

func (o *UpdateActiveDirectoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /active-directories/{id}][%d] updateActiveDirectoryOK %s", 200, payload)
}

func (o *UpdateActiveDirectoryOK) GetPayload() *models.ActiveDirectory {
	return o.Payload
}

func (o *UpdateActiveDirectoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActiveDirectory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateActiveDirectoryDefault creates a UpdateActiveDirectoryDefault with default headers values
func NewUpdateActiveDirectoryDefault(code int) *UpdateActiveDirectoryDefault {
	return &UpdateActiveDirectoryDefault{
		_statusCode: code,
	}
}

/*
UpdateActiveDirectoryDefault describes a response with status code -1, with default header values.

Error
*/
type UpdateActiveDirectoryDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update active directory default response has a 2xx status code
func (o *UpdateActiveDirectoryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update active directory default response has a 3xx status code
func (o *UpdateActiveDirectoryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update active directory default response has a 4xx status code
func (o *UpdateActiveDirectoryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update active directory default response has a 5xx status code
func (o *UpdateActiveDirectoryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update active directory default response a status code equal to that given
func (o *UpdateActiveDirectoryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update active directory default response
func (o *UpdateActiveDirectoryDefault) Code() int {
	return o._statusCode
}

func (o *UpdateActiveDirectoryDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /active-directories/{id}][%d] UpdateActiveDirectory default %s", o._statusCode, payload)
}

func (o *UpdateActiveDirectoryDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /active-directories/{id}][%d] UpdateActiveDirectory default %s", o._statusCode, payload)
}

func (o *UpdateActiveDirectoryDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateActiveDirectoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
