// Code generated by go-swagger; DO NOT EDIT.

package object

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetEntityMetadataParams creates a new GetEntityMetadataParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEntityMetadataParams() *GetEntityMetadataParams {
	return &GetEntityMetadataParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEntityMetadataParamsWithTimeout creates a new GetEntityMetadataParams object
// with the ability to set a timeout on a request.
func NewGetEntityMetadataParamsWithTimeout(timeout time.Duration) *GetEntityMetadataParams {
	return &GetEntityMetadataParams{
		timeout: timeout,
	}
}

// NewGetEntityMetadataParamsWithContext creates a new GetEntityMetadataParams object
// with the ability to set a context for a request.
func NewGetEntityMetadataParamsWithContext(ctx context.Context) *GetEntityMetadataParams {
	return &GetEntityMetadataParams{
		Context: ctx,
	}
}

// NewGetEntityMetadataParamsWithHTTPClient creates a new GetEntityMetadataParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEntityMetadataParamsWithHTTPClient(client *http.Client) *GetEntityMetadataParams {
	return &GetEntityMetadataParams{
		HTTPClient: client,
	}
}

/*
GetEntityMetadataParams contains all the parameters to send to the API endpoint

	for the get entity metadata operation.

	Typically these are written to a http.Request.
*/
type GetEntityMetadataParams struct {

	/* EntityIds.

	   EntityIds contains ids of the entities for which objects are to be returned.
	*/
	EntityIds []int64

	/* SourceID.

	   Specifies the source ID for which objects should be returned.

	   Format: int64
	*/
	SourceID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get entity metadata params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEntityMetadataParams) WithDefaults() *GetEntityMetadataParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get entity metadata params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEntityMetadataParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get entity metadata params
func (o *GetEntityMetadataParams) WithTimeout(timeout time.Duration) *GetEntityMetadataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get entity metadata params
func (o *GetEntityMetadataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get entity metadata params
func (o *GetEntityMetadataParams) WithContext(ctx context.Context) *GetEntityMetadataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get entity metadata params
func (o *GetEntityMetadataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get entity metadata params
func (o *GetEntityMetadataParams) WithHTTPClient(client *http.Client) *GetEntityMetadataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get entity metadata params
func (o *GetEntityMetadataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntityIds adds the entityIds to the get entity metadata params
func (o *GetEntityMetadataParams) WithEntityIds(entityIds []int64) *GetEntityMetadataParams {
	o.SetEntityIds(entityIds)
	return o
}

// SetEntityIds adds the entityIds to the get entity metadata params
func (o *GetEntityMetadataParams) SetEntityIds(entityIds []int64) {
	o.EntityIds = entityIds
}

// WithSourceID adds the sourceID to the get entity metadata params
func (o *GetEntityMetadataParams) WithSourceID(sourceID int64) *GetEntityMetadataParams {
	o.SetSourceID(sourceID)
	return o
}

// SetSourceID adds the sourceId to the get entity metadata params
func (o *GetEntityMetadataParams) SetSourceID(sourceID int64) {
	o.SourceID = sourceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEntityMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EntityIds != nil {

		// binding items for entityIds
		joinedEntityIds := o.bindParamEntityIds(reg)

		// query array param entityIds
		if err := r.SetQueryParam("entityIds", joinedEntityIds...); err != nil {
			return err
		}
	}

	// path param sourceId
	if err := r.SetPathParam("sourceId", swag.FormatInt64(o.SourceID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetEntityMetadata binds the parameter entityIds
func (o *GetEntityMetadataParams) bindParamEntityIds(formats strfmt.Registry) []string {
	entityIdsIR := o.EntityIds

	var entityIdsIC []string
	for _, entityIdsIIR := range entityIdsIR { // explode []int64

		entityIdsIIV := swag.FormatInt64(entityIdsIIR) // int64 as string
		entityIdsIC = append(entityIdsIC, entityIdsIIV)
	}

	// items.CollectionFormat: ""
	entityIdsIS := swag.JoinByFormat(entityIdsIC, "")

	return entityIdsIS
}
