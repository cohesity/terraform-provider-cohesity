// Code generated by go-swagger; DO NOT EDIT.

package object

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetSourceHierarchyObjectsParams creates a new GetSourceHierarchyObjectsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSourceHierarchyObjectsParams() *GetSourceHierarchyObjectsParams {
	return &GetSourceHierarchyObjectsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSourceHierarchyObjectsParamsWithTimeout creates a new GetSourceHierarchyObjectsParams object
// with the ability to set a timeout on a request.
func NewGetSourceHierarchyObjectsParamsWithTimeout(timeout time.Duration) *GetSourceHierarchyObjectsParams {
	return &GetSourceHierarchyObjectsParams{
		timeout: timeout,
	}
}

// NewGetSourceHierarchyObjectsParamsWithContext creates a new GetSourceHierarchyObjectsParams object
// with the ability to set a context for a request.
func NewGetSourceHierarchyObjectsParamsWithContext(ctx context.Context) *GetSourceHierarchyObjectsParams {
	return &GetSourceHierarchyObjectsParams{
		Context: ctx,
	}
}

// NewGetSourceHierarchyObjectsParamsWithHTTPClient creates a new GetSourceHierarchyObjectsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSourceHierarchyObjectsParamsWithHTTPClient(client *http.Client) *GetSourceHierarchyObjectsParams {
	return &GetSourceHierarchyObjectsParams{
		HTTPClient: client,
	}
}

/*
GetSourceHierarchyObjectsParams contains all the parameters to send to the API endpoint

	for the get source hierarchy objects operation.

	Typically these are written to a http.Request.
*/
type GetSourceHierarchyObjectsParams struct {

	/* AcropolisObjectTypes.

	   Specifies the Acropolis object types to filter objects.
	*/
	AcropolisObjectTypes []string

	/* AdObjectTypes.

	   Specifies the AD object types to filter objects.
	*/
	AdObjectTypes []string

	/* AwsObjectTypes.

	   Specifies the AWS object types to filter objects.
	*/
	AwsObjectTypes []string

	/* AzureObjectTypes.

	   Specifies the Azure object types to filter objects.
	*/
	AzureObjectTypes []string

	/* CassandraObjectTypes.

	   Specifies the Cassandra object types to filter objects.
	*/
	CassandraObjectTypes []string

	/* CouchbaseObjectTypes.

	   Specifies the Couchbase object types to filter objects.
	*/
	CouchbaseObjectTypes []string

	/* ElastifileObjectTypes.

	   Specifies the Elastifile object types to filter objects.
	*/
	ElastifileObjectTypes []string

	/* ExchangeObjectTypes.

	   Specifies the Exchange object types to filter objects.
	*/
	ExchangeObjectTypes []string

	/* FlashbladeObjectTypes.

	   Specifies the Flashblade object types to filter objects.
	*/
	FlashbladeObjectTypes []string

	/* GcpObjectTypes.

	   Specifies the GCP object types to filter objects.
	*/
	GcpObjectTypes []string

	/* GenericNasObjectTypes.

	   Specifies the generic NAS object types to filter objects.
	*/
	GenericNasObjectTypes []string

	/* GpfsObjectTypes.

	   Specifies the GPFS object types to filter objects.
	*/
	GpfsObjectTypes []string

	/* HbaseObjectTypes.

	   Specifies the Hbase object types to filter objects.
	*/
	HbaseObjectTypes []string

	/* HdfsObjectTypes.

	   Specifies the HDFS object types to filter objects.
	*/
	HdfsObjectTypes []string

	/* HiveObjectTypes.

	   Specifies the Hive object types to filter objects.
	*/
	HiveObjectTypes []string

	/* HypervObjectTypes.

	   Specifies the HyperV object types to filter objects.
	*/
	HypervObjectTypes []string

	/* IncludeTenants.

	   If true, the response will include Objects which belongs to all tenants which the current user has permission to see.
	*/
	IncludeTenants *bool

	/* IsilonObjectTypes.

	   Specifies the Isilon object types to filter objects.
	*/
	IsilonObjectTypes []string

	/* KubernetesObjectTypes.

	   Specifies the Kubernetes object types to filter objects.
	*/
	KubernetesObjectTypes []string

	/* KvmObjectTypes.

	   Specifies the KVM object types to filter objects.
	*/
	KvmObjectTypes []string

	/* MongodbObjectTypes.

	   Specifies the Mongo DB object types to filter objects.
	*/
	MongodbObjectTypes []string

	/* MssqlObjectTypes.

	   Specifies the MSSQL object types to filter objects.
	*/
	MssqlObjectTypes []string

	/* NetappObjectTypes.

	   Specifies the Netapp object types to filter objects.
	*/
	NetappObjectTypes []string

	/* NimbleObjectTypes.

	   Specifies the Nimble object types to filter objects.
	*/
	NimbleObjectTypes []string

	/* O365ObjectTypes.

	   Specifies the Office 365 object types to filter objects.
	*/
	O365ObjectTypes []string

	/* OracleObjectTypes.

	   Specifies the Oracle object types to filter objects.
	*/
	OracleObjectTypes []string

	/* ParentID.

	   Specifies the parent ID under which objects should be returned.

	   Format: int64
	*/
	ParentID *int64

	/* PhysicalObjectTypes.

	   Specifies the Physical object types to filter objects.
	*/
	PhysicalObjectTypes []string

	/* PureObjectTypes.

	   Specifies the Pure object types to filter objects.
	*/
	PureObjectTypes []string

	/* SourceID.

	   Specifies the source ID for which objects should be returned.

	   Format: int64
	*/
	SourceID int64

	/* TenantIds.

	   TenantIds contains ids of the tenants for which objects are to be returned.
	*/
	TenantIds []string

	/* UseCachedData.

	   Specifies whether we can serve the GET request to the read replica cache. There is a lag of 15 seconds between the read replica and primary data source.
	*/
	UseCachedData *bool

	/* VmwareObjectTypes.

	   Specifies the VMware object types to filter objects.
	*/
	VmwareObjectTypes []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get source hierarchy objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSourceHierarchyObjectsParams) WithDefaults() *GetSourceHierarchyObjectsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get source hierarchy objects params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSourceHierarchyObjectsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithTimeout(timeout time.Duration) *GetSourceHierarchyObjectsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithContext(ctx context.Context) *GetSourceHierarchyObjectsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithHTTPClient(client *http.Client) *GetSourceHierarchyObjectsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcropolisObjectTypes adds the acropolisObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithAcropolisObjectTypes(acropolisObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetAcropolisObjectTypes(acropolisObjectTypes)
	return o
}

// SetAcropolisObjectTypes adds the acropolisObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetAcropolisObjectTypes(acropolisObjectTypes []string) {
	o.AcropolisObjectTypes = acropolisObjectTypes
}

// WithAdObjectTypes adds the adObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithAdObjectTypes(adObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetAdObjectTypes(adObjectTypes)
	return o
}

// SetAdObjectTypes adds the adObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetAdObjectTypes(adObjectTypes []string) {
	o.AdObjectTypes = adObjectTypes
}

// WithAwsObjectTypes adds the awsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithAwsObjectTypes(awsObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetAwsObjectTypes(awsObjectTypes)
	return o
}

// SetAwsObjectTypes adds the awsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetAwsObjectTypes(awsObjectTypes []string) {
	o.AwsObjectTypes = awsObjectTypes
}

// WithAzureObjectTypes adds the azureObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithAzureObjectTypes(azureObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetAzureObjectTypes(azureObjectTypes)
	return o
}

// SetAzureObjectTypes adds the azureObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetAzureObjectTypes(azureObjectTypes []string) {
	o.AzureObjectTypes = azureObjectTypes
}

// WithCassandraObjectTypes adds the cassandraObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithCassandraObjectTypes(cassandraObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetCassandraObjectTypes(cassandraObjectTypes)
	return o
}

// SetCassandraObjectTypes adds the cassandraObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetCassandraObjectTypes(cassandraObjectTypes []string) {
	o.CassandraObjectTypes = cassandraObjectTypes
}

// WithCouchbaseObjectTypes adds the couchbaseObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithCouchbaseObjectTypes(couchbaseObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetCouchbaseObjectTypes(couchbaseObjectTypes)
	return o
}

// SetCouchbaseObjectTypes adds the couchbaseObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetCouchbaseObjectTypes(couchbaseObjectTypes []string) {
	o.CouchbaseObjectTypes = couchbaseObjectTypes
}

// WithElastifileObjectTypes adds the elastifileObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithElastifileObjectTypes(elastifileObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetElastifileObjectTypes(elastifileObjectTypes)
	return o
}

// SetElastifileObjectTypes adds the elastifileObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetElastifileObjectTypes(elastifileObjectTypes []string) {
	o.ElastifileObjectTypes = elastifileObjectTypes
}

// WithExchangeObjectTypes adds the exchangeObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithExchangeObjectTypes(exchangeObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetExchangeObjectTypes(exchangeObjectTypes)
	return o
}

// SetExchangeObjectTypes adds the exchangeObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetExchangeObjectTypes(exchangeObjectTypes []string) {
	o.ExchangeObjectTypes = exchangeObjectTypes
}

// WithFlashbladeObjectTypes adds the flashbladeObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithFlashbladeObjectTypes(flashbladeObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetFlashbladeObjectTypes(flashbladeObjectTypes)
	return o
}

// SetFlashbladeObjectTypes adds the flashbladeObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetFlashbladeObjectTypes(flashbladeObjectTypes []string) {
	o.FlashbladeObjectTypes = flashbladeObjectTypes
}

// WithGcpObjectTypes adds the gcpObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithGcpObjectTypes(gcpObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetGcpObjectTypes(gcpObjectTypes)
	return o
}

// SetGcpObjectTypes adds the gcpObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetGcpObjectTypes(gcpObjectTypes []string) {
	o.GcpObjectTypes = gcpObjectTypes
}

// WithGenericNasObjectTypes adds the genericNasObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithGenericNasObjectTypes(genericNasObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetGenericNasObjectTypes(genericNasObjectTypes)
	return o
}

// SetGenericNasObjectTypes adds the genericNasObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetGenericNasObjectTypes(genericNasObjectTypes []string) {
	o.GenericNasObjectTypes = genericNasObjectTypes
}

// WithGpfsObjectTypes adds the gpfsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithGpfsObjectTypes(gpfsObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetGpfsObjectTypes(gpfsObjectTypes)
	return o
}

// SetGpfsObjectTypes adds the gpfsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetGpfsObjectTypes(gpfsObjectTypes []string) {
	o.GpfsObjectTypes = gpfsObjectTypes
}

// WithHbaseObjectTypes adds the hbaseObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithHbaseObjectTypes(hbaseObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetHbaseObjectTypes(hbaseObjectTypes)
	return o
}

// SetHbaseObjectTypes adds the hbaseObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetHbaseObjectTypes(hbaseObjectTypes []string) {
	o.HbaseObjectTypes = hbaseObjectTypes
}

// WithHdfsObjectTypes adds the hdfsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithHdfsObjectTypes(hdfsObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetHdfsObjectTypes(hdfsObjectTypes)
	return o
}

// SetHdfsObjectTypes adds the hdfsObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetHdfsObjectTypes(hdfsObjectTypes []string) {
	o.HdfsObjectTypes = hdfsObjectTypes
}

// WithHiveObjectTypes adds the hiveObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithHiveObjectTypes(hiveObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetHiveObjectTypes(hiveObjectTypes)
	return o
}

// SetHiveObjectTypes adds the hiveObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetHiveObjectTypes(hiveObjectTypes []string) {
	o.HiveObjectTypes = hiveObjectTypes
}

// WithHypervObjectTypes adds the hypervObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithHypervObjectTypes(hypervObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetHypervObjectTypes(hypervObjectTypes)
	return o
}

// SetHypervObjectTypes adds the hypervObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetHypervObjectTypes(hypervObjectTypes []string) {
	o.HypervObjectTypes = hypervObjectTypes
}

// WithIncludeTenants adds the includeTenants to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithIncludeTenants(includeTenants *bool) *GetSourceHierarchyObjectsParams {
	o.SetIncludeTenants(includeTenants)
	return o
}

// SetIncludeTenants adds the includeTenants to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetIncludeTenants(includeTenants *bool) {
	o.IncludeTenants = includeTenants
}

// WithIsilonObjectTypes adds the isilonObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithIsilonObjectTypes(isilonObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetIsilonObjectTypes(isilonObjectTypes)
	return o
}

// SetIsilonObjectTypes adds the isilonObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetIsilonObjectTypes(isilonObjectTypes []string) {
	o.IsilonObjectTypes = isilonObjectTypes
}

// WithKubernetesObjectTypes adds the kubernetesObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithKubernetesObjectTypes(kubernetesObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetKubernetesObjectTypes(kubernetesObjectTypes)
	return o
}

// SetKubernetesObjectTypes adds the kubernetesObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetKubernetesObjectTypes(kubernetesObjectTypes []string) {
	o.KubernetesObjectTypes = kubernetesObjectTypes
}

// WithKvmObjectTypes adds the kvmObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithKvmObjectTypes(kvmObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetKvmObjectTypes(kvmObjectTypes)
	return o
}

// SetKvmObjectTypes adds the kvmObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetKvmObjectTypes(kvmObjectTypes []string) {
	o.KvmObjectTypes = kvmObjectTypes
}

// WithMongodbObjectTypes adds the mongodbObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithMongodbObjectTypes(mongodbObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetMongodbObjectTypes(mongodbObjectTypes)
	return o
}

// SetMongodbObjectTypes adds the mongodbObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetMongodbObjectTypes(mongodbObjectTypes []string) {
	o.MongodbObjectTypes = mongodbObjectTypes
}

// WithMssqlObjectTypes adds the mssqlObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithMssqlObjectTypes(mssqlObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetMssqlObjectTypes(mssqlObjectTypes)
	return o
}

// SetMssqlObjectTypes adds the mssqlObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetMssqlObjectTypes(mssqlObjectTypes []string) {
	o.MssqlObjectTypes = mssqlObjectTypes
}

// WithNetappObjectTypes adds the netappObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithNetappObjectTypes(netappObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetNetappObjectTypes(netappObjectTypes)
	return o
}

// SetNetappObjectTypes adds the netappObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetNetappObjectTypes(netappObjectTypes []string) {
	o.NetappObjectTypes = netappObjectTypes
}

// WithNimbleObjectTypes adds the nimbleObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithNimbleObjectTypes(nimbleObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetNimbleObjectTypes(nimbleObjectTypes)
	return o
}

// SetNimbleObjectTypes adds the nimbleObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetNimbleObjectTypes(nimbleObjectTypes []string) {
	o.NimbleObjectTypes = nimbleObjectTypes
}

// WithO365ObjectTypes adds the o365ObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithO365ObjectTypes(o365ObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetO365ObjectTypes(o365ObjectTypes)
	return o
}

// SetO365ObjectTypes adds the o365ObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetO365ObjectTypes(o365ObjectTypes []string) {
	o.O365ObjectTypes = o365ObjectTypes
}

// WithOracleObjectTypes adds the oracleObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithOracleObjectTypes(oracleObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetOracleObjectTypes(oracleObjectTypes)
	return o
}

// SetOracleObjectTypes adds the oracleObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetOracleObjectTypes(oracleObjectTypes []string) {
	o.OracleObjectTypes = oracleObjectTypes
}

// WithParentID adds the parentID to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithParentID(parentID *int64) *GetSourceHierarchyObjectsParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetParentID(parentID *int64) {
	o.ParentID = parentID
}

// WithPhysicalObjectTypes adds the physicalObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithPhysicalObjectTypes(physicalObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetPhysicalObjectTypes(physicalObjectTypes)
	return o
}

// SetPhysicalObjectTypes adds the physicalObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetPhysicalObjectTypes(physicalObjectTypes []string) {
	o.PhysicalObjectTypes = physicalObjectTypes
}

// WithPureObjectTypes adds the pureObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithPureObjectTypes(pureObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetPureObjectTypes(pureObjectTypes)
	return o
}

// SetPureObjectTypes adds the pureObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetPureObjectTypes(pureObjectTypes []string) {
	o.PureObjectTypes = pureObjectTypes
}

// WithSourceID adds the sourceID to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithSourceID(sourceID int64) *GetSourceHierarchyObjectsParams {
	o.SetSourceID(sourceID)
	return o
}

// SetSourceID adds the sourceId to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetSourceID(sourceID int64) {
	o.SourceID = sourceID
}

// WithTenantIds adds the tenantIds to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithTenantIds(tenantIds []string) *GetSourceHierarchyObjectsParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WithUseCachedData adds the useCachedData to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithUseCachedData(useCachedData *bool) *GetSourceHierarchyObjectsParams {
	o.SetUseCachedData(useCachedData)
	return o
}

// SetUseCachedData adds the useCachedData to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetUseCachedData(useCachedData *bool) {
	o.UseCachedData = useCachedData
}

// WithVmwareObjectTypes adds the vmwareObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) WithVmwareObjectTypes(vmwareObjectTypes []string) *GetSourceHierarchyObjectsParams {
	o.SetVmwareObjectTypes(vmwareObjectTypes)
	return o
}

// SetVmwareObjectTypes adds the vmwareObjectTypes to the get source hierarchy objects params
func (o *GetSourceHierarchyObjectsParams) SetVmwareObjectTypes(vmwareObjectTypes []string) {
	o.VmwareObjectTypes = vmwareObjectTypes
}

// WriteToRequest writes these params to a swagger request
func (o *GetSourceHierarchyObjectsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcropolisObjectTypes != nil {

		// binding items for acropolisObjectTypes
		joinedAcropolisObjectTypes := o.bindParamAcropolisObjectTypes(reg)

		// query array param acropolisObjectTypes
		if err := r.SetQueryParam("acropolisObjectTypes", joinedAcropolisObjectTypes...); err != nil {
			return err
		}
	}

	if o.AdObjectTypes != nil {

		// binding items for adObjectTypes
		joinedAdObjectTypes := o.bindParamAdObjectTypes(reg)

		// query array param adObjectTypes
		if err := r.SetQueryParam("adObjectTypes", joinedAdObjectTypes...); err != nil {
			return err
		}
	}

	if o.AwsObjectTypes != nil {

		// binding items for awsObjectTypes
		joinedAwsObjectTypes := o.bindParamAwsObjectTypes(reg)

		// query array param awsObjectTypes
		if err := r.SetQueryParam("awsObjectTypes", joinedAwsObjectTypes...); err != nil {
			return err
		}
	}

	if o.AzureObjectTypes != nil {

		// binding items for azureObjectTypes
		joinedAzureObjectTypes := o.bindParamAzureObjectTypes(reg)

		// query array param azureObjectTypes
		if err := r.SetQueryParam("azureObjectTypes", joinedAzureObjectTypes...); err != nil {
			return err
		}
	}

	if o.CassandraObjectTypes != nil {

		// binding items for cassandraObjectTypes
		joinedCassandraObjectTypes := o.bindParamCassandraObjectTypes(reg)

		// query array param cassandraObjectTypes
		if err := r.SetQueryParam("cassandraObjectTypes", joinedCassandraObjectTypes...); err != nil {
			return err
		}
	}

	if o.CouchbaseObjectTypes != nil {

		// binding items for couchbaseObjectTypes
		joinedCouchbaseObjectTypes := o.bindParamCouchbaseObjectTypes(reg)

		// query array param couchbaseObjectTypes
		if err := r.SetQueryParam("couchbaseObjectTypes", joinedCouchbaseObjectTypes...); err != nil {
			return err
		}
	}

	if o.ElastifileObjectTypes != nil {

		// binding items for elastifileObjectTypes
		joinedElastifileObjectTypes := o.bindParamElastifileObjectTypes(reg)

		// query array param elastifileObjectTypes
		if err := r.SetQueryParam("elastifileObjectTypes", joinedElastifileObjectTypes...); err != nil {
			return err
		}
	}

	if o.ExchangeObjectTypes != nil {

		// binding items for exchangeObjectTypes
		joinedExchangeObjectTypes := o.bindParamExchangeObjectTypes(reg)

		// query array param exchangeObjectTypes
		if err := r.SetQueryParam("exchangeObjectTypes", joinedExchangeObjectTypes...); err != nil {
			return err
		}
	}

	if o.FlashbladeObjectTypes != nil {

		// binding items for flashbladeObjectTypes
		joinedFlashbladeObjectTypes := o.bindParamFlashbladeObjectTypes(reg)

		// query array param flashbladeObjectTypes
		if err := r.SetQueryParam("flashbladeObjectTypes", joinedFlashbladeObjectTypes...); err != nil {
			return err
		}
	}

	if o.GcpObjectTypes != nil {

		// binding items for gcpObjectTypes
		joinedGcpObjectTypes := o.bindParamGcpObjectTypes(reg)

		// query array param gcpObjectTypes
		if err := r.SetQueryParam("gcpObjectTypes", joinedGcpObjectTypes...); err != nil {
			return err
		}
	}

	if o.GenericNasObjectTypes != nil {

		// binding items for genericNasObjectTypes
		joinedGenericNasObjectTypes := o.bindParamGenericNasObjectTypes(reg)

		// query array param genericNasObjectTypes
		if err := r.SetQueryParam("genericNasObjectTypes", joinedGenericNasObjectTypes...); err != nil {
			return err
		}
	}

	if o.GpfsObjectTypes != nil {

		// binding items for gpfsObjectTypes
		joinedGpfsObjectTypes := o.bindParamGpfsObjectTypes(reg)

		// query array param gpfsObjectTypes
		if err := r.SetQueryParam("gpfsObjectTypes", joinedGpfsObjectTypes...); err != nil {
			return err
		}
	}

	if o.HbaseObjectTypes != nil {

		// binding items for hbaseObjectTypes
		joinedHbaseObjectTypes := o.bindParamHbaseObjectTypes(reg)

		// query array param hbaseObjectTypes
		if err := r.SetQueryParam("hbaseObjectTypes", joinedHbaseObjectTypes...); err != nil {
			return err
		}
	}

	if o.HdfsObjectTypes != nil {

		// binding items for hdfsObjectTypes
		joinedHdfsObjectTypes := o.bindParamHdfsObjectTypes(reg)

		// query array param hdfsObjectTypes
		if err := r.SetQueryParam("hdfsObjectTypes", joinedHdfsObjectTypes...); err != nil {
			return err
		}
	}

	if o.HiveObjectTypes != nil {

		// binding items for hiveObjectTypes
		joinedHiveObjectTypes := o.bindParamHiveObjectTypes(reg)

		// query array param hiveObjectTypes
		if err := r.SetQueryParam("hiveObjectTypes", joinedHiveObjectTypes...); err != nil {
			return err
		}
	}

	if o.HypervObjectTypes != nil {

		// binding items for hypervObjectTypes
		joinedHypervObjectTypes := o.bindParamHypervObjectTypes(reg)

		// query array param hypervObjectTypes
		if err := r.SetQueryParam("hypervObjectTypes", joinedHypervObjectTypes...); err != nil {
			return err
		}
	}

	if o.IncludeTenants != nil {

		// query param includeTenants
		var qrIncludeTenants bool

		if o.IncludeTenants != nil {
			qrIncludeTenants = *o.IncludeTenants
		}
		qIncludeTenants := swag.FormatBool(qrIncludeTenants)
		if qIncludeTenants != "" {

			if err := r.SetQueryParam("includeTenants", qIncludeTenants); err != nil {
				return err
			}
		}
	}

	if o.IsilonObjectTypes != nil {

		// binding items for isilonObjectTypes
		joinedIsilonObjectTypes := o.bindParamIsilonObjectTypes(reg)

		// query array param isilonObjectTypes
		if err := r.SetQueryParam("isilonObjectTypes", joinedIsilonObjectTypes...); err != nil {
			return err
		}
	}

	if o.KubernetesObjectTypes != nil {

		// binding items for kubernetesObjectTypes
		joinedKubernetesObjectTypes := o.bindParamKubernetesObjectTypes(reg)

		// query array param kubernetesObjectTypes
		if err := r.SetQueryParam("kubernetesObjectTypes", joinedKubernetesObjectTypes...); err != nil {
			return err
		}
	}

	if o.KvmObjectTypes != nil {

		// binding items for kvmObjectTypes
		joinedKvmObjectTypes := o.bindParamKvmObjectTypes(reg)

		// query array param kvmObjectTypes
		if err := r.SetQueryParam("kvmObjectTypes", joinedKvmObjectTypes...); err != nil {
			return err
		}
	}

	if o.MongodbObjectTypes != nil {

		// binding items for mongodbObjectTypes
		joinedMongodbObjectTypes := o.bindParamMongodbObjectTypes(reg)

		// query array param mongodbObjectTypes
		if err := r.SetQueryParam("mongodbObjectTypes", joinedMongodbObjectTypes...); err != nil {
			return err
		}
	}

	if o.MssqlObjectTypes != nil {

		// binding items for mssqlObjectTypes
		joinedMssqlObjectTypes := o.bindParamMssqlObjectTypes(reg)

		// query array param mssqlObjectTypes
		if err := r.SetQueryParam("mssqlObjectTypes", joinedMssqlObjectTypes...); err != nil {
			return err
		}
	}

	if o.NetappObjectTypes != nil {

		// binding items for netappObjectTypes
		joinedNetappObjectTypes := o.bindParamNetappObjectTypes(reg)

		// query array param netappObjectTypes
		if err := r.SetQueryParam("netappObjectTypes", joinedNetappObjectTypes...); err != nil {
			return err
		}
	}

	if o.NimbleObjectTypes != nil {

		// binding items for nimbleObjectTypes
		joinedNimbleObjectTypes := o.bindParamNimbleObjectTypes(reg)

		// query array param nimbleObjectTypes
		if err := r.SetQueryParam("nimbleObjectTypes", joinedNimbleObjectTypes...); err != nil {
			return err
		}
	}

	if o.O365ObjectTypes != nil {

		// binding items for o365ObjectTypes
		joinedO365ObjectTypes := o.bindParamO365ObjectTypes(reg)

		// query array param o365ObjectTypes
		if err := r.SetQueryParam("o365ObjectTypes", joinedO365ObjectTypes...); err != nil {
			return err
		}
	}

	if o.OracleObjectTypes != nil {

		// binding items for oracleObjectTypes
		joinedOracleObjectTypes := o.bindParamOracleObjectTypes(reg)

		// query array param oracleObjectTypes
		if err := r.SetQueryParam("oracleObjectTypes", joinedOracleObjectTypes...); err != nil {
			return err
		}
	}

	if o.ParentID != nil {

		// query param parentId
		var qrParentID int64

		if o.ParentID != nil {
			qrParentID = *o.ParentID
		}
		qParentID := swag.FormatInt64(qrParentID)
		if qParentID != "" {

			if err := r.SetQueryParam("parentId", qParentID); err != nil {
				return err
			}
		}
	}

	if o.PhysicalObjectTypes != nil {

		// binding items for physicalObjectTypes
		joinedPhysicalObjectTypes := o.bindParamPhysicalObjectTypes(reg)

		// query array param physicalObjectTypes
		if err := r.SetQueryParam("physicalObjectTypes", joinedPhysicalObjectTypes...); err != nil {
			return err
		}
	}

	if o.PureObjectTypes != nil {

		// binding items for pureObjectTypes
		joinedPureObjectTypes := o.bindParamPureObjectTypes(reg)

		// query array param pureObjectTypes
		if err := r.SetQueryParam("pureObjectTypes", joinedPureObjectTypes...); err != nil {
			return err
		}
	}

	// path param sourceId
	if err := r.SetPathParam("sourceId", swag.FormatInt64(o.SourceID)); err != nil {
		return err
	}

	if o.TenantIds != nil {

		// binding items for tenantIds
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenantIds
		if err := r.SetQueryParam("tenantIds", joinedTenantIds...); err != nil {
			return err
		}
	}

	if o.UseCachedData != nil {

		// query param useCachedData
		var qrUseCachedData bool

		if o.UseCachedData != nil {
			qrUseCachedData = *o.UseCachedData
		}
		qUseCachedData := swag.FormatBool(qrUseCachedData)
		if qUseCachedData != "" {

			if err := r.SetQueryParam("useCachedData", qUseCachedData); err != nil {
				return err
			}
		}
	}

	if o.VmwareObjectTypes != nil {

		// binding items for vmwareObjectTypes
		joinedVmwareObjectTypes := o.bindParamVmwareObjectTypes(reg)

		// query array param vmwareObjectTypes
		if err := r.SetQueryParam("vmwareObjectTypes", joinedVmwareObjectTypes...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetSourceHierarchyObjects binds the parameter acropolisObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamAcropolisObjectTypes(formats strfmt.Registry) []string {
	acropolisObjectTypesIR := o.AcropolisObjectTypes

	var acropolisObjectTypesIC []string
	for _, acropolisObjectTypesIIR := range acropolisObjectTypesIR { // explode []string

		acropolisObjectTypesIIV := acropolisObjectTypesIIR // string as string
		acropolisObjectTypesIC = append(acropolisObjectTypesIC, acropolisObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	acropolisObjectTypesIS := swag.JoinByFormat(acropolisObjectTypesIC, "")

	return acropolisObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter adObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamAdObjectTypes(formats strfmt.Registry) []string {
	adObjectTypesIR := o.AdObjectTypes

	var adObjectTypesIC []string
	for _, adObjectTypesIIR := range adObjectTypesIR { // explode []string

		adObjectTypesIIV := adObjectTypesIIR // string as string
		adObjectTypesIC = append(adObjectTypesIC, adObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	adObjectTypesIS := swag.JoinByFormat(adObjectTypesIC, "")

	return adObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter awsObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamAwsObjectTypes(formats strfmt.Registry) []string {
	awsObjectTypesIR := o.AwsObjectTypes

	var awsObjectTypesIC []string
	for _, awsObjectTypesIIR := range awsObjectTypesIR { // explode []string

		awsObjectTypesIIV := awsObjectTypesIIR // string as string
		awsObjectTypesIC = append(awsObjectTypesIC, awsObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	awsObjectTypesIS := swag.JoinByFormat(awsObjectTypesIC, "")

	return awsObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter azureObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamAzureObjectTypes(formats strfmt.Registry) []string {
	azureObjectTypesIR := o.AzureObjectTypes

	var azureObjectTypesIC []string
	for _, azureObjectTypesIIR := range azureObjectTypesIR { // explode []string

		azureObjectTypesIIV := azureObjectTypesIIR // string as string
		azureObjectTypesIC = append(azureObjectTypesIC, azureObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	azureObjectTypesIS := swag.JoinByFormat(azureObjectTypesIC, "")

	return azureObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter cassandraObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamCassandraObjectTypes(formats strfmt.Registry) []string {
	cassandraObjectTypesIR := o.CassandraObjectTypes

	var cassandraObjectTypesIC []string
	for _, cassandraObjectTypesIIR := range cassandraObjectTypesIR { // explode []string

		cassandraObjectTypesIIV := cassandraObjectTypesIIR // string as string
		cassandraObjectTypesIC = append(cassandraObjectTypesIC, cassandraObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	cassandraObjectTypesIS := swag.JoinByFormat(cassandraObjectTypesIC, "")

	return cassandraObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter couchbaseObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamCouchbaseObjectTypes(formats strfmt.Registry) []string {
	couchbaseObjectTypesIR := o.CouchbaseObjectTypes

	var couchbaseObjectTypesIC []string
	for _, couchbaseObjectTypesIIR := range couchbaseObjectTypesIR { // explode []string

		couchbaseObjectTypesIIV := couchbaseObjectTypesIIR // string as string
		couchbaseObjectTypesIC = append(couchbaseObjectTypesIC, couchbaseObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	couchbaseObjectTypesIS := swag.JoinByFormat(couchbaseObjectTypesIC, "")

	return couchbaseObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter elastifileObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamElastifileObjectTypes(formats strfmt.Registry) []string {
	elastifileObjectTypesIR := o.ElastifileObjectTypes

	var elastifileObjectTypesIC []string
	for _, elastifileObjectTypesIIR := range elastifileObjectTypesIR { // explode []string

		elastifileObjectTypesIIV := elastifileObjectTypesIIR // string as string
		elastifileObjectTypesIC = append(elastifileObjectTypesIC, elastifileObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	elastifileObjectTypesIS := swag.JoinByFormat(elastifileObjectTypesIC, "")

	return elastifileObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter exchangeObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamExchangeObjectTypes(formats strfmt.Registry) []string {
	exchangeObjectTypesIR := o.ExchangeObjectTypes

	var exchangeObjectTypesIC []string
	for _, exchangeObjectTypesIIR := range exchangeObjectTypesIR { // explode []string

		exchangeObjectTypesIIV := exchangeObjectTypesIIR // string as string
		exchangeObjectTypesIC = append(exchangeObjectTypesIC, exchangeObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	exchangeObjectTypesIS := swag.JoinByFormat(exchangeObjectTypesIC, "")

	return exchangeObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter flashbladeObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamFlashbladeObjectTypes(formats strfmt.Registry) []string {
	flashbladeObjectTypesIR := o.FlashbladeObjectTypes

	var flashbladeObjectTypesIC []string
	for _, flashbladeObjectTypesIIR := range flashbladeObjectTypesIR { // explode []string

		flashbladeObjectTypesIIV := flashbladeObjectTypesIIR // string as string
		flashbladeObjectTypesIC = append(flashbladeObjectTypesIC, flashbladeObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	flashbladeObjectTypesIS := swag.JoinByFormat(flashbladeObjectTypesIC, "")

	return flashbladeObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter gcpObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamGcpObjectTypes(formats strfmt.Registry) []string {
	gcpObjectTypesIR := o.GcpObjectTypes

	var gcpObjectTypesIC []string
	for _, gcpObjectTypesIIR := range gcpObjectTypesIR { // explode []string

		gcpObjectTypesIIV := gcpObjectTypesIIR // string as string
		gcpObjectTypesIC = append(gcpObjectTypesIC, gcpObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	gcpObjectTypesIS := swag.JoinByFormat(gcpObjectTypesIC, "")

	return gcpObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter genericNasObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamGenericNasObjectTypes(formats strfmt.Registry) []string {
	genericNasObjectTypesIR := o.GenericNasObjectTypes

	var genericNasObjectTypesIC []string
	for _, genericNasObjectTypesIIR := range genericNasObjectTypesIR { // explode []string

		genericNasObjectTypesIIV := genericNasObjectTypesIIR // string as string
		genericNasObjectTypesIC = append(genericNasObjectTypesIC, genericNasObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	genericNasObjectTypesIS := swag.JoinByFormat(genericNasObjectTypesIC, "")

	return genericNasObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter gpfsObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamGpfsObjectTypes(formats strfmt.Registry) []string {
	gpfsObjectTypesIR := o.GpfsObjectTypes

	var gpfsObjectTypesIC []string
	for _, gpfsObjectTypesIIR := range gpfsObjectTypesIR { // explode []string

		gpfsObjectTypesIIV := gpfsObjectTypesIIR // string as string
		gpfsObjectTypesIC = append(gpfsObjectTypesIC, gpfsObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	gpfsObjectTypesIS := swag.JoinByFormat(gpfsObjectTypesIC, "")

	return gpfsObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter hbaseObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamHbaseObjectTypes(formats strfmt.Registry) []string {
	hbaseObjectTypesIR := o.HbaseObjectTypes

	var hbaseObjectTypesIC []string
	for _, hbaseObjectTypesIIR := range hbaseObjectTypesIR { // explode []string

		hbaseObjectTypesIIV := hbaseObjectTypesIIR // string as string
		hbaseObjectTypesIC = append(hbaseObjectTypesIC, hbaseObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	hbaseObjectTypesIS := swag.JoinByFormat(hbaseObjectTypesIC, "")

	return hbaseObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter hdfsObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamHdfsObjectTypes(formats strfmt.Registry) []string {
	hdfsObjectTypesIR := o.HdfsObjectTypes

	var hdfsObjectTypesIC []string
	for _, hdfsObjectTypesIIR := range hdfsObjectTypesIR { // explode []string

		hdfsObjectTypesIIV := hdfsObjectTypesIIR // string as string
		hdfsObjectTypesIC = append(hdfsObjectTypesIC, hdfsObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	hdfsObjectTypesIS := swag.JoinByFormat(hdfsObjectTypesIC, "")

	return hdfsObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter hiveObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamHiveObjectTypes(formats strfmt.Registry) []string {
	hiveObjectTypesIR := o.HiveObjectTypes

	var hiveObjectTypesIC []string
	for _, hiveObjectTypesIIR := range hiveObjectTypesIR { // explode []string

		hiveObjectTypesIIV := hiveObjectTypesIIR // string as string
		hiveObjectTypesIC = append(hiveObjectTypesIC, hiveObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	hiveObjectTypesIS := swag.JoinByFormat(hiveObjectTypesIC, "")

	return hiveObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter hypervObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamHypervObjectTypes(formats strfmt.Registry) []string {
	hypervObjectTypesIR := o.HypervObjectTypes

	var hypervObjectTypesIC []string
	for _, hypervObjectTypesIIR := range hypervObjectTypesIR { // explode []string

		hypervObjectTypesIIV := hypervObjectTypesIIR // string as string
		hypervObjectTypesIC = append(hypervObjectTypesIC, hypervObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	hypervObjectTypesIS := swag.JoinByFormat(hypervObjectTypesIC, "")

	return hypervObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter isilonObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamIsilonObjectTypes(formats strfmt.Registry) []string {
	isilonObjectTypesIR := o.IsilonObjectTypes

	var isilonObjectTypesIC []string
	for _, isilonObjectTypesIIR := range isilonObjectTypesIR { // explode []string

		isilonObjectTypesIIV := isilonObjectTypesIIR // string as string
		isilonObjectTypesIC = append(isilonObjectTypesIC, isilonObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	isilonObjectTypesIS := swag.JoinByFormat(isilonObjectTypesIC, "")

	return isilonObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter kubernetesObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamKubernetesObjectTypes(formats strfmt.Registry) []string {
	kubernetesObjectTypesIR := o.KubernetesObjectTypes

	var kubernetesObjectTypesIC []string
	for _, kubernetesObjectTypesIIR := range kubernetesObjectTypesIR { // explode []string

		kubernetesObjectTypesIIV := kubernetesObjectTypesIIR // string as string
		kubernetesObjectTypesIC = append(kubernetesObjectTypesIC, kubernetesObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	kubernetesObjectTypesIS := swag.JoinByFormat(kubernetesObjectTypesIC, "")

	return kubernetesObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter kvmObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamKvmObjectTypes(formats strfmt.Registry) []string {
	kvmObjectTypesIR := o.KvmObjectTypes

	var kvmObjectTypesIC []string
	for _, kvmObjectTypesIIR := range kvmObjectTypesIR { // explode []string

		kvmObjectTypesIIV := kvmObjectTypesIIR // string as string
		kvmObjectTypesIC = append(kvmObjectTypesIC, kvmObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	kvmObjectTypesIS := swag.JoinByFormat(kvmObjectTypesIC, "")

	return kvmObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter mongodbObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamMongodbObjectTypes(formats strfmt.Registry) []string {
	mongodbObjectTypesIR := o.MongodbObjectTypes

	var mongodbObjectTypesIC []string
	for _, mongodbObjectTypesIIR := range mongodbObjectTypesIR { // explode []string

		mongodbObjectTypesIIV := mongodbObjectTypesIIR // string as string
		mongodbObjectTypesIC = append(mongodbObjectTypesIC, mongodbObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	mongodbObjectTypesIS := swag.JoinByFormat(mongodbObjectTypesIC, "")

	return mongodbObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter mssqlObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamMssqlObjectTypes(formats strfmt.Registry) []string {
	mssqlObjectTypesIR := o.MssqlObjectTypes

	var mssqlObjectTypesIC []string
	for _, mssqlObjectTypesIIR := range mssqlObjectTypesIR { // explode []string

		mssqlObjectTypesIIV := mssqlObjectTypesIIR // string as string
		mssqlObjectTypesIC = append(mssqlObjectTypesIC, mssqlObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	mssqlObjectTypesIS := swag.JoinByFormat(mssqlObjectTypesIC, "")

	return mssqlObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter netappObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamNetappObjectTypes(formats strfmt.Registry) []string {
	netappObjectTypesIR := o.NetappObjectTypes

	var netappObjectTypesIC []string
	for _, netappObjectTypesIIR := range netappObjectTypesIR { // explode []string

		netappObjectTypesIIV := netappObjectTypesIIR // string as string
		netappObjectTypesIC = append(netappObjectTypesIC, netappObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	netappObjectTypesIS := swag.JoinByFormat(netappObjectTypesIC, "")

	return netappObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter nimbleObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamNimbleObjectTypes(formats strfmt.Registry) []string {
	nimbleObjectTypesIR := o.NimbleObjectTypes

	var nimbleObjectTypesIC []string
	for _, nimbleObjectTypesIIR := range nimbleObjectTypesIR { // explode []string

		nimbleObjectTypesIIV := nimbleObjectTypesIIR // string as string
		nimbleObjectTypesIC = append(nimbleObjectTypesIC, nimbleObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	nimbleObjectTypesIS := swag.JoinByFormat(nimbleObjectTypesIC, "")

	return nimbleObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter o365ObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamO365ObjectTypes(formats strfmt.Registry) []string {
	o365ObjectTypesIR := o.O365ObjectTypes

	var o365ObjectTypesIC []string
	for _, o365ObjectTypesIIR := range o365ObjectTypesIR { // explode []string

		o365ObjectTypesIIV := o365ObjectTypesIIR // string as string
		o365ObjectTypesIC = append(o365ObjectTypesIC, o365ObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	o365ObjectTypesIS := swag.JoinByFormat(o365ObjectTypesIC, "")

	return o365ObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter oracleObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamOracleObjectTypes(formats strfmt.Registry) []string {
	oracleObjectTypesIR := o.OracleObjectTypes

	var oracleObjectTypesIC []string
	for _, oracleObjectTypesIIR := range oracleObjectTypesIR { // explode []string

		oracleObjectTypesIIV := oracleObjectTypesIIR // string as string
		oracleObjectTypesIC = append(oracleObjectTypesIC, oracleObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	oracleObjectTypesIS := swag.JoinByFormat(oracleObjectTypesIC, "")

	return oracleObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter physicalObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamPhysicalObjectTypes(formats strfmt.Registry) []string {
	physicalObjectTypesIR := o.PhysicalObjectTypes

	var physicalObjectTypesIC []string
	for _, physicalObjectTypesIIR := range physicalObjectTypesIR { // explode []string

		physicalObjectTypesIIV := physicalObjectTypesIIR // string as string
		physicalObjectTypesIC = append(physicalObjectTypesIC, physicalObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	physicalObjectTypesIS := swag.JoinByFormat(physicalObjectTypesIC, "")

	return physicalObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter pureObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamPureObjectTypes(formats strfmt.Registry) []string {
	pureObjectTypesIR := o.PureObjectTypes

	var pureObjectTypesIC []string
	for _, pureObjectTypesIIR := range pureObjectTypesIR { // explode []string

		pureObjectTypesIIV := pureObjectTypesIIR // string as string
		pureObjectTypesIC = append(pureObjectTypesIC, pureObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	pureObjectTypesIS := swag.JoinByFormat(pureObjectTypesIC, "")

	return pureObjectTypesIS
}

// bindParamGetSourceHierarchyObjects binds the parameter tenantIds
func (o *GetSourceHierarchyObjectsParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: ""
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "")

	return tenantIdsIS
}

// bindParamGetSourceHierarchyObjects binds the parameter vmwareObjectTypes
func (o *GetSourceHierarchyObjectsParams) bindParamVmwareObjectTypes(formats strfmt.Registry) []string {
	vmwareObjectTypesIR := o.VmwareObjectTypes

	var vmwareObjectTypesIC []string
	for _, vmwareObjectTypesIIR := range vmwareObjectTypesIR { // explode []string

		vmwareObjectTypesIIV := vmwareObjectTypesIIR // string as string
		vmwareObjectTypesIC = append(vmwareObjectTypesIC, vmwareObjectTypesIIV)
	}

	// items.CollectionFormat: ""
	vmwareObjectTypesIS := swag.JoinByFormat(vmwareObjectTypesIC, "")

	return vmwareObjectTypesIS
}
