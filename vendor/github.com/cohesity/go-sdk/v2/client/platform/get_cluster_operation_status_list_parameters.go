// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetClusterOperationStatusListParams creates a new GetClusterOperationStatusListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetClusterOperationStatusListParams() *GetClusterOperationStatusListParams {
	return &GetClusterOperationStatusListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetClusterOperationStatusListParamsWithTimeout creates a new GetClusterOperationStatusListParams object
// with the ability to set a timeout on a request.
func NewGetClusterOperationStatusListParamsWithTimeout(timeout time.Duration) *GetClusterOperationStatusListParams {
	return &GetClusterOperationStatusListParams{
		timeout: timeout,
	}
}

// NewGetClusterOperationStatusListParamsWithContext creates a new GetClusterOperationStatusListParams object
// with the ability to set a context for a request.
func NewGetClusterOperationStatusListParamsWithContext(ctx context.Context) *GetClusterOperationStatusListParams {
	return &GetClusterOperationStatusListParams{
		Context: ctx,
	}
}

// NewGetClusterOperationStatusListParamsWithHTTPClient creates a new GetClusterOperationStatusListParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetClusterOperationStatusListParamsWithHTTPClient(client *http.Client) *GetClusterOperationStatusListParams {
	return &GetClusterOperationStatusListParams{
		HTTPClient: client,
	}
}

/*
GetClusterOperationStatusListParams contains all the parameters to send to the API endpoint

	for the get cluster operation status list operation.

	Typically these are written to a http.Request.
*/
type GetClusterOperationStatusListParams struct {

	/* EndTime.

	   Filters operations that ended before the specified time. Applicable only for patch apply, revert, and upgrade operations

	   Format: int64
	*/
	EndTime *int64

	/* IncludeEventLogs.

	   Controls whether event logs should be included in the query results. If set to true, 'operationIds' becomes mandatory. The default value is false. Applicable only for patch apply, revert, and upgrade operations
	*/
	IncludeEventLogs *bool

	/* IncludeFinishedOperations.

	   Controls whether finished operations should be included in the query results. The default value is false. Applicable only for patch apply, revert, and upgrade operations
	*/
	IncludeFinishedOperations *bool

	/* OperationIds.

	   One or more operation ids to query for.
	*/
	OperationIds []string

	/* OperationTypes.

	   One or more operation types to query for.
	*/
	OperationTypes []string

	/* StartTime.

	   Filters operations that started after the specified time. Applicable only for patch apply, revert, and upgrade operations

	   Format: int64
	*/
	StartTime *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get cluster operation status list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClusterOperationStatusListParams) WithDefaults() *GetClusterOperationStatusListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get cluster operation status list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClusterOperationStatusListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithTimeout(timeout time.Duration) *GetClusterOperationStatusListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithContext(ctx context.Context) *GetClusterOperationStatusListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithHTTPClient(client *http.Client) *GetClusterOperationStatusListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTime adds the endTime to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithEndTime(endTime *int64) *GetClusterOperationStatusListParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetEndTime(endTime *int64) {
	o.EndTime = endTime
}

// WithIncludeEventLogs adds the includeEventLogs to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithIncludeEventLogs(includeEventLogs *bool) *GetClusterOperationStatusListParams {
	o.SetIncludeEventLogs(includeEventLogs)
	return o
}

// SetIncludeEventLogs adds the includeEventLogs to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetIncludeEventLogs(includeEventLogs *bool) {
	o.IncludeEventLogs = includeEventLogs
}

// WithIncludeFinishedOperations adds the includeFinishedOperations to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithIncludeFinishedOperations(includeFinishedOperations *bool) *GetClusterOperationStatusListParams {
	o.SetIncludeFinishedOperations(includeFinishedOperations)
	return o
}

// SetIncludeFinishedOperations adds the includeFinishedOperations to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetIncludeFinishedOperations(includeFinishedOperations *bool) {
	o.IncludeFinishedOperations = includeFinishedOperations
}

// WithOperationIds adds the operationIds to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithOperationIds(operationIds []string) *GetClusterOperationStatusListParams {
	o.SetOperationIds(operationIds)
	return o
}

// SetOperationIds adds the operationIds to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetOperationIds(operationIds []string) {
	o.OperationIds = operationIds
}

// WithOperationTypes adds the operationTypes to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithOperationTypes(operationTypes []string) *GetClusterOperationStatusListParams {
	o.SetOperationTypes(operationTypes)
	return o
}

// SetOperationTypes adds the operationTypes to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetOperationTypes(operationTypes []string) {
	o.OperationTypes = operationTypes
}

// WithStartTime adds the startTime to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) WithStartTime(startTime *int64) *GetClusterOperationStatusListParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get cluster operation status list params
func (o *GetClusterOperationStatusListParams) SetStartTime(startTime *int64) {
	o.StartTime = startTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetClusterOperationStatusListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime int64

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := swag.FormatInt64(qrEndTime)
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.IncludeEventLogs != nil {

		// query param includeEventLogs
		var qrIncludeEventLogs bool

		if o.IncludeEventLogs != nil {
			qrIncludeEventLogs = *o.IncludeEventLogs
		}
		qIncludeEventLogs := swag.FormatBool(qrIncludeEventLogs)
		if qIncludeEventLogs != "" {

			if err := r.SetQueryParam("includeEventLogs", qIncludeEventLogs); err != nil {
				return err
			}
		}
	}

	if o.IncludeFinishedOperations != nil {

		// query param includeFinishedOperations
		var qrIncludeFinishedOperations bool

		if o.IncludeFinishedOperations != nil {
			qrIncludeFinishedOperations = *o.IncludeFinishedOperations
		}
		qIncludeFinishedOperations := swag.FormatBool(qrIncludeFinishedOperations)
		if qIncludeFinishedOperations != "" {

			if err := r.SetQueryParam("includeFinishedOperations", qIncludeFinishedOperations); err != nil {
				return err
			}
		}
	}

	if o.OperationIds != nil {

		// binding items for operationIds
		joinedOperationIds := o.bindParamOperationIds(reg)

		// query array param operationIds
		if err := r.SetQueryParam("operationIds", joinedOperationIds...); err != nil {
			return err
		}
	}

	if o.OperationTypes != nil {

		// binding items for operationTypes
		joinedOperationTypes := o.bindParamOperationTypes(reg)

		// query array param operationTypes
		if err := r.SetQueryParam("operationTypes", joinedOperationTypes...); err != nil {
			return err
		}
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime int64

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := swag.FormatInt64(qrStartTime)
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetClusterOperationStatusList binds the parameter operationIds
func (o *GetClusterOperationStatusListParams) bindParamOperationIds(formats strfmt.Registry) []string {
	operationIdsIR := o.OperationIds

	var operationIdsIC []string
	for _, operationIdsIIR := range operationIdsIR { // explode []string

		operationIdsIIV := operationIdsIIR // string as string
		operationIdsIC = append(operationIdsIC, operationIdsIIV)
	}

	// items.CollectionFormat: ""
	operationIdsIS := swag.JoinByFormat(operationIdsIC, "")

	return operationIdsIS
}

// bindParamGetClusterOperationStatusList binds the parameter operationTypes
func (o *GetClusterOperationStatusListParams) bindParamOperationTypes(formats strfmt.Registry) []string {
	operationTypesIR := o.OperationTypes

	var operationTypesIC []string
	for _, operationTypesIIR := range operationTypesIR { // explode []string

		operationTypesIIV := operationTypesIIR // string as string
		operationTypesIC = append(operationTypesIC, operationTypesIIV)
	}

	// items.CollectionFormat: ""
	operationTypesIS := swag.JoinByFormat(operationTypesIC, "")

	return operationTypesIS
}
