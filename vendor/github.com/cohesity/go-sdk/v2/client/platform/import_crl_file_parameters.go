// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewImportCrlFileParams creates a new ImportCrlFileParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewImportCrlFileParams() *ImportCrlFileParams {
	return &ImportCrlFileParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewImportCrlFileParamsWithTimeout creates a new ImportCrlFileParams object
// with the ability to set a timeout on a request.
func NewImportCrlFileParamsWithTimeout(timeout time.Duration) *ImportCrlFileParams {
	return &ImportCrlFileParams{
		timeout: timeout,
	}
}

// NewImportCrlFileParamsWithContext creates a new ImportCrlFileParams object
// with the ability to set a context for a request.
func NewImportCrlFileParamsWithContext(ctx context.Context) *ImportCrlFileParams {
	return &ImportCrlFileParams{
		Context: ctx,
	}
}

// NewImportCrlFileParamsWithHTTPClient creates a new ImportCrlFileParams object
// with the ability to set a custom HTTPClient for a request.
func NewImportCrlFileParamsWithHTTPClient(client *http.Client) *ImportCrlFileParams {
	return &ImportCrlFileParams{
		HTTPClient: client,
	}
}

/*
ImportCrlFileParams contains all the parameters to send to the API endpoint

	for the import crl file operation.

	Typically these are written to a http.Request.
*/
type ImportCrlFileParams struct {

	// Crlfile.
	Crlfile runtime.NamedReadCloser

	// FileName.
	FileName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the import crl file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ImportCrlFileParams) WithDefaults() *ImportCrlFileParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the import crl file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ImportCrlFileParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the import crl file params
func (o *ImportCrlFileParams) WithTimeout(timeout time.Duration) *ImportCrlFileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import crl file params
func (o *ImportCrlFileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import crl file params
func (o *ImportCrlFileParams) WithContext(ctx context.Context) *ImportCrlFileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import crl file params
func (o *ImportCrlFileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import crl file params
func (o *ImportCrlFileParams) WithHTTPClient(client *http.Client) *ImportCrlFileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import crl file params
func (o *ImportCrlFileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCrlfile adds the crlfile to the import crl file params
func (o *ImportCrlFileParams) WithCrlfile(crlfile runtime.NamedReadCloser) *ImportCrlFileParams {
	o.SetCrlfile(crlfile)
	return o
}

// SetCrlfile adds the crlfile to the import crl file params
func (o *ImportCrlFileParams) SetCrlfile(crlfile runtime.NamedReadCloser) {
	o.Crlfile = crlfile
}

// WithFileName adds the fileName to the import crl file params
func (o *ImportCrlFileParams) WithFileName(fileName string) *ImportCrlFileParams {
	o.SetFileName(fileName)
	return o
}

// SetFileName adds the fileName to the import crl file params
func (o *ImportCrlFileParams) SetFileName(fileName string) {
	o.FileName = fileName
}

// WriteToRequest writes these params to a swagger request
func (o *ImportCrlFileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	// form file param crlfile
	if err := r.SetFileParam("crlfile", o.Crlfile); err != nil {
		return err
	}

	// form param fileName
	frFileName := o.FileName
	fFileName := frFileName
	if fFileName != "" {
		if err := r.SetFormParam("fileName", fFileName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
