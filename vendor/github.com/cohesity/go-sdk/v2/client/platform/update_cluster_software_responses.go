// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// UpdateClusterSoftwareReader is a Reader for the UpdateClusterSoftware structure.
type UpdateClusterSoftwareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterSoftwareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewUpdateClusterSoftwareAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateClusterSoftwareDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateClusterSoftwareAccepted creates a UpdateClusterSoftwareAccepted with default headers values
func NewUpdateClusterSoftwareAccepted() *UpdateClusterSoftwareAccepted {
	return &UpdateClusterSoftwareAccepted{}
}

/*
UpdateClusterSoftwareAccepted describes a response with status code 202, with default header values.

Success
*/
type UpdateClusterSoftwareAccepted struct {
	Payload models.ClusterSWUpdateResponseParams
}

// IsSuccess returns true when this update cluster software accepted response has a 2xx status code
func (o *UpdateClusterSoftwareAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster software accepted response has a 3xx status code
func (o *UpdateClusterSoftwareAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster software accepted response has a 4xx status code
func (o *UpdateClusterSoftwareAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster software accepted response has a 5xx status code
func (o *UpdateClusterSoftwareAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster software accepted response a status code equal to that given
func (o *UpdateClusterSoftwareAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the update cluster software accepted response
func (o *UpdateClusterSoftwareAccepted) Code() int {
	return 202
}

func (o *UpdateClusterSoftwareAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /clusters/softwares][%d] updateClusterSoftwareAccepted %s", 202, payload)
}

func (o *UpdateClusterSoftwareAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /clusters/softwares][%d] updateClusterSoftwareAccepted %s", 202, payload)
}

func (o *UpdateClusterSoftwareAccepted) GetPayload() models.ClusterSWUpdateResponseParams {
	return o.Payload
}

func (o *UpdateClusterSoftwareAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSoftwareDefault creates a UpdateClusterSoftwareDefault with default headers values
func NewUpdateClusterSoftwareDefault(code int) *UpdateClusterSoftwareDefault {
	return &UpdateClusterSoftwareDefault{
		_statusCode: code,
	}
}

/*
UpdateClusterSoftwareDefault describes a response with status code -1, with default header values.

Error
*/
type UpdateClusterSoftwareDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update cluster software default response has a 2xx status code
func (o *UpdateClusterSoftwareDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update cluster software default response has a 3xx status code
func (o *UpdateClusterSoftwareDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update cluster software default response has a 4xx status code
func (o *UpdateClusterSoftwareDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update cluster software default response has a 5xx status code
func (o *UpdateClusterSoftwareDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update cluster software default response a status code equal to that given
func (o *UpdateClusterSoftwareDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update cluster software default response
func (o *UpdateClusterSoftwareDefault) Code() int {
	return o._statusCode
}

func (o *UpdateClusterSoftwareDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /clusters/softwares][%d] UpdateClusterSoftware default %s", o._statusCode, payload)
}

func (o *UpdateClusterSoftwareDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /clusters/softwares][%d] UpdateClusterSoftware default %s", o._statusCode, payload)
}

func (o *UpdateClusterSoftwareDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateClusterSoftwareDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
