// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cohesity/go-sdk/v2/models"
)

// UpgradeCheckRunTestsReader is a Reader for the UpgradeCheckRunTests structure.
type UpgradeCheckRunTestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpgradeCheckRunTestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpgradeCheckRunTestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpgradeCheckRunTestsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpgradeCheckRunTestsOK creates a UpgradeCheckRunTestsOK with default headers values
func NewUpgradeCheckRunTestsOK() *UpgradeCheckRunTestsOK {
	return &UpgradeCheckRunTestsOK{}
}

/*
UpgradeCheckRunTestsOK describes a response with status code 200, with default header values.

Success
*/
type UpgradeCheckRunTestsOK struct {
	Payload *models.UpgradeCheckRunTestsResult
}

// IsSuccess returns true when this upgrade check run tests o k response has a 2xx status code
func (o *UpgradeCheckRunTestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upgrade check run tests o k response has a 3xx status code
func (o *UpgradeCheckRunTestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upgrade check run tests o k response has a 4xx status code
func (o *UpgradeCheckRunTestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upgrade check run tests o k response has a 5xx status code
func (o *UpgradeCheckRunTestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upgrade check run tests o k response a status code equal to that given
func (o *UpgradeCheckRunTestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upgrade check run tests o k response
func (o *UpgradeCheckRunTestsOK) Code() int {
	return 200
}

func (o *UpgradeCheckRunTestsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cluster/upgrade-checks][%d] upgradeCheckRunTestsOK %s", 200, payload)
}

func (o *UpgradeCheckRunTestsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cluster/upgrade-checks][%d] upgradeCheckRunTestsOK %s", 200, payload)
}

func (o *UpgradeCheckRunTestsOK) GetPayload() *models.UpgradeCheckRunTestsResult {
	return o.Payload
}

func (o *UpgradeCheckRunTestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpgradeCheckRunTestsResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeCheckRunTestsDefault creates a UpgradeCheckRunTestsDefault with default headers values
func NewUpgradeCheckRunTestsDefault(code int) *UpgradeCheckRunTestsDefault {
	return &UpgradeCheckRunTestsDefault{
		_statusCode: code,
	}
}

/*
UpgradeCheckRunTestsDefault describes a response with status code -1, with default header values.

Error
*/
type UpgradeCheckRunTestsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this upgrade check run tests default response has a 2xx status code
func (o *UpgradeCheckRunTestsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this upgrade check run tests default response has a 3xx status code
func (o *UpgradeCheckRunTestsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this upgrade check run tests default response has a 4xx status code
func (o *UpgradeCheckRunTestsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this upgrade check run tests default response has a 5xx status code
func (o *UpgradeCheckRunTestsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this upgrade check run tests default response a status code equal to that given
func (o *UpgradeCheckRunTestsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the upgrade check run tests default response
func (o *UpgradeCheckRunTestsDefault) Code() int {
	return o._statusCode
}

func (o *UpgradeCheckRunTestsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cluster/upgrade-checks][%d] UpgradeCheckRunTests default %s", o._statusCode, payload)
}

func (o *UpgradeCheckRunTestsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cluster/upgrade-checks][%d] UpgradeCheckRunTests default %s", o._statusCode, payload)
}

func (o *UpgradeCheckRunTestsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpgradeCheckRunTestsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
