// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetChassisParams creates a new GetChassisParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetChassisParams() *GetChassisParams {
	return &GetChassisParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetChassisParamsWithTimeout creates a new GetChassisParams object
// with the ability to set a timeout on a request.
func NewGetChassisParamsWithTimeout(timeout time.Duration) *GetChassisParams {
	return &GetChassisParams{
		timeout: timeout,
	}
}

// NewGetChassisParamsWithContext creates a new GetChassisParams object
// with the ability to set a context for a request.
func NewGetChassisParamsWithContext(ctx context.Context) *GetChassisParams {
	return &GetChassisParams{
		Context: ctx,
	}
}

// NewGetChassisParamsWithHTTPClient creates a new GetChassisParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetChassisParamsWithHTTPClient(client *http.Client) *GetChassisParams {
	return &GetChassisParams{
		HTTPClient: client,
	}
}

/*
GetChassisParams contains all the parameters to send to the API endpoint

	for the get chassis operation.

	Typically these are written to a http.Request.
*/
type GetChassisParams struct {

	/* NoRackAssigned.

	   Filters chassis that have no rack assigned.
	*/
	NoRackAssigned *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get chassis params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetChassisParams) WithDefaults() *GetChassisParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get chassis params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetChassisParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get chassis params
func (o *GetChassisParams) WithTimeout(timeout time.Duration) *GetChassisParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get chassis params
func (o *GetChassisParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get chassis params
func (o *GetChassisParams) WithContext(ctx context.Context) *GetChassisParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get chassis params
func (o *GetChassisParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get chassis params
func (o *GetChassisParams) WithHTTPClient(client *http.Client) *GetChassisParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get chassis params
func (o *GetChassisParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNoRackAssigned adds the noRackAssigned to the get chassis params
func (o *GetChassisParams) WithNoRackAssigned(noRackAssigned *bool) *GetChassisParams {
	o.SetNoRackAssigned(noRackAssigned)
	return o
}

// SetNoRackAssigned adds the noRackAssigned to the get chassis params
func (o *GetChassisParams) SetNoRackAssigned(noRackAssigned *bool) {
	o.NoRackAssigned = noRackAssigned
}

// WriteToRequest writes these params to a swagger request
func (o *GetChassisParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.NoRackAssigned != nil {

		// query param noRackAssigned
		var qrNoRackAssigned bool

		if o.NoRackAssigned != nil {
			qrNoRackAssigned = *o.NoRackAssigned
		}
		qNoRackAssigned := swag.FormatBool(qrNoRackAssigned)
		if qNoRackAssigned != "" {

			if err := r.SetQueryParam("noRackAssigned", qNoRackAssigned); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
