// Code generated by go-swagger; DO NOT EDIT.

package tenant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cohesity/go-sdk/v2/models"
)

// CreateTenantReader is a Reader for the CreateTenant structure.
type CreateTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateTenantCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateTenantDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateTenantCreated creates a CreateTenantCreated with default headers values
func NewCreateTenantCreated() *CreateTenantCreated {
	return &CreateTenantCreated{}
}

/*
CreateTenantCreated describes a response with status code 201, with default header values.

Success
*/
type CreateTenantCreated struct {
	Payload *models.TenantInfo
}

// IsSuccess returns true when this create tenant created response has a 2xx status code
func (o *CreateTenantCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create tenant created response has a 3xx status code
func (o *CreateTenantCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create tenant created response has a 4xx status code
func (o *CreateTenantCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create tenant created response has a 5xx status code
func (o *CreateTenantCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create tenant created response a status code equal to that given
func (o *CreateTenantCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create tenant created response
func (o *CreateTenantCreated) Code() int {
	return 201
}

func (o *CreateTenantCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tenants][%d] createTenantCreated %s", 201, payload)
}

func (o *CreateTenantCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tenants][%d] createTenantCreated %s", 201, payload)
}

func (o *CreateTenantCreated) GetPayload() *models.TenantInfo {
	return o.Payload
}

func (o *CreateTenantCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TenantInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTenantDefault creates a CreateTenantDefault with default headers values
func NewCreateTenantDefault(code int) *CreateTenantDefault {
	return &CreateTenantDefault{
		_statusCode: code,
	}
}

/*
CreateTenantDefault describes a response with status code -1, with default header values.

Error
*/
type CreateTenantDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this create tenant default response has a 2xx status code
func (o *CreateTenantDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create tenant default response has a 3xx status code
func (o *CreateTenantDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create tenant default response has a 4xx status code
func (o *CreateTenantDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create tenant default response has a 5xx status code
func (o *CreateTenantDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create tenant default response a status code equal to that given
func (o *CreateTenantDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create tenant default response
func (o *CreateTenantDefault) Code() int {
	return o._statusCode
}

func (o *CreateTenantDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tenants][%d] CreateTenant default %s", o._statusCode, payload)
}

func (o *CreateTenantDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /tenants][%d] CreateTenant default %s", o._statusCode, payload)
}

func (o *CreateTenantDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateTenantDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateTenantBody create tenant body
swagger:model CreateTenantBody
*/
type CreateTenantBody struct {
	models.CreateTenantParams

	// network
	Network *models.TenantNetwork `json:"network,omitempty"`

	CreateTenantParamsBodyAllOf2
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *CreateTenantBody) UnmarshalJSON(raw []byte) error {
	// CreateTenantParamsBodyAO0
	var createTenantParamsBodyAO0 models.CreateTenantParams
	if err := swag.ReadJSON(raw, &createTenantParamsBodyAO0); err != nil {
		return err
	}
	o.CreateTenantParams = createTenantParamsBodyAO0

	// CreateTenantParamsBodyAO1
	var dataCreateTenantParamsBodyAO1 struct {
		Network *models.TenantNetwork `json:"network,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataCreateTenantParamsBodyAO1); err != nil {
		return err
	}

	o.Network = dataCreateTenantParamsBodyAO1.Network

	// CreateTenantParamsBodyAO2
	var createTenantParamsBodyAO2 CreateTenantParamsBodyAllOf2
	if err := swag.ReadJSON(raw, &createTenantParamsBodyAO2); err != nil {
		return err
	}
	o.CreateTenantParamsBodyAllOf2 = createTenantParamsBodyAO2

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o CreateTenantBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	createTenantParamsBodyAO0, err := swag.WriteJSON(o.CreateTenantParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, createTenantParamsBodyAO0)
	var dataCreateTenantParamsBodyAO1 struct {
		Network *models.TenantNetwork `json:"network,omitempty"`
	}

	dataCreateTenantParamsBodyAO1.Network = o.Network

	jsonDataCreateTenantParamsBodyAO1, errCreateTenantParamsBodyAO1 := swag.WriteJSON(dataCreateTenantParamsBodyAO1)
	if errCreateTenantParamsBodyAO1 != nil {
		return nil, errCreateTenantParamsBodyAO1
	}
	_parts = append(_parts, jsonDataCreateTenantParamsBodyAO1)

	createTenantParamsBodyAO2, err := swag.WriteJSON(o.CreateTenantParamsBodyAllOf2)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, createTenantParamsBodyAO2)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this create tenant body
func (o *CreateTenantBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.CreateTenantParams
	if err := o.CreateTenantParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNetwork(formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with CreateTenantParamsBodyAllOf2

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateTenantBody) validateNetwork(formats strfmt.Registry) error {

	if swag.IsZero(o.Network) { // not required
		return nil
	}

	if o.Network != nil {
		if err := o.Network.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "network")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "network")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create tenant body based on the context it is used
func (o *CreateTenantBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.CreateTenantParams
	if err := o.CreateTenantParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateNetwork(ctx, formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with CreateTenantParamsBodyAllOf2

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateTenantBody) contextValidateNetwork(ctx context.Context, formats strfmt.Registry) error {

	if o.Network != nil {

		if swag.IsZero(o.Network) { // not required
			return nil
		}

		if err := o.Network.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "network")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "network")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateTenantBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateTenantBody) UnmarshalBinary(b []byte) error {
	var res CreateTenantBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateTenantParamsBodyAllOf2 create tenant params body all of2
swagger:model CreateTenantParamsBodyAllOf2
*/
type CreateTenantParamsBodyAllOf2 interface{}
