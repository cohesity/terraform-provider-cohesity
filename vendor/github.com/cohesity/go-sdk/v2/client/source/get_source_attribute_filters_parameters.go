// Code generated by go-swagger; DO NOT EDIT.

package source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSourceAttributeFiltersParams creates a new GetSourceAttributeFiltersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSourceAttributeFiltersParams() *GetSourceAttributeFiltersParams {
	return &GetSourceAttributeFiltersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSourceAttributeFiltersParamsWithTimeout creates a new GetSourceAttributeFiltersParams object
// with the ability to set a timeout on a request.
func NewGetSourceAttributeFiltersParamsWithTimeout(timeout time.Duration) *GetSourceAttributeFiltersParams {
	return &GetSourceAttributeFiltersParams{
		timeout: timeout,
	}
}

// NewGetSourceAttributeFiltersParamsWithContext creates a new GetSourceAttributeFiltersParams object
// with the ability to set a context for a request.
func NewGetSourceAttributeFiltersParamsWithContext(ctx context.Context) *GetSourceAttributeFiltersParams {
	return &GetSourceAttributeFiltersParams{
		Context: ctx,
	}
}

// NewGetSourceAttributeFiltersParamsWithHTTPClient creates a new GetSourceAttributeFiltersParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSourceAttributeFiltersParamsWithHTTPClient(client *http.Client) *GetSourceAttributeFiltersParams {
	return &GetSourceAttributeFiltersParams{
		HTTPClient: client,
	}
}

/*
GetSourceAttributeFiltersParams contains all the parameters to send to the API endpoint

	for the get source attribute filters operation.

	Typically these are written to a http.Request.
*/
type GetSourceAttributeFiltersParams struct {

	/* Environment.

	   Specifies the environment type of the Protection Source.
	*/
	Environment *string

	/* SourceUUID.

	   Specifies the source UUID of the parent entity.
	*/
	SourceUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get source attribute filters params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSourceAttributeFiltersParams) WithDefaults() *GetSourceAttributeFiltersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get source attribute filters params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSourceAttributeFiltersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) WithTimeout(timeout time.Duration) *GetSourceAttributeFiltersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) WithContext(ctx context.Context) *GetSourceAttributeFiltersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) WithHTTPClient(client *http.Client) *GetSourceAttributeFiltersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironment adds the environment to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) WithEnvironment(environment *string) *GetSourceAttributeFiltersParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) SetEnvironment(environment *string) {
	o.Environment = environment
}

// WithSourceUUID adds the sourceUUID to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) WithSourceUUID(sourceUUID string) *GetSourceAttributeFiltersParams {
	o.SetSourceUUID(sourceUUID)
	return o
}

// SetSourceUUID adds the sourceUuid to the get source attribute filters params
func (o *GetSourceAttributeFiltersParams) SetSourceUUID(sourceUUID string) {
	o.SourceUUID = sourceUUID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSourceAttributeFiltersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Environment != nil {

		// query param environment
		var qrEnvironment string

		if o.Environment != nil {
			qrEnvironment = *o.Environment
		}
		qEnvironment := qrEnvironment
		if qEnvironment != "" {

			if err := r.SetQueryParam("environment", qEnvironment); err != nil {
				return err
			}
		}
	}

	// query param sourceUuid
	qrSourceUUID := o.SourceUUID
	qSourceUUID := qrSourceUUID
	if qSourceUUID != "" {

		if err := r.SetQueryParam("sourceUuid", qSourceUUID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
