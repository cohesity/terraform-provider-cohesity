// Code generated by go-swagger; DO NOT EDIT.

package source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUnregisterM365BackupControllerParams creates a new UnregisterM365BackupControllerParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUnregisterM365BackupControllerParams() *UnregisterM365BackupControllerParams {
	return &UnregisterM365BackupControllerParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUnregisterM365BackupControllerParamsWithTimeout creates a new UnregisterM365BackupControllerParams object
// with the ability to set a timeout on a request.
func NewUnregisterM365BackupControllerParamsWithTimeout(timeout time.Duration) *UnregisterM365BackupControllerParams {
	return &UnregisterM365BackupControllerParams{
		timeout: timeout,
	}
}

// NewUnregisterM365BackupControllerParamsWithContext creates a new UnregisterM365BackupControllerParams object
// with the ability to set a context for a request.
func NewUnregisterM365BackupControllerParamsWithContext(ctx context.Context) *UnregisterM365BackupControllerParams {
	return &UnregisterM365BackupControllerParams{
		Context: ctx,
	}
}

// NewUnregisterM365BackupControllerParamsWithHTTPClient creates a new UnregisterM365BackupControllerParams object
// with the ability to set a custom HTTPClient for a request.
func NewUnregisterM365BackupControllerParamsWithHTTPClient(client *http.Client) *UnregisterM365BackupControllerParams {
	return &UnregisterM365BackupControllerParams{
		HTTPClient: client,
	}
}

/*
UnregisterM365BackupControllerParams contains all the parameters to send to the API endpoint

	for the unregister m365 backup controller operation.

	Typically these are written to a http.Request.
*/
type UnregisterM365BackupControllerParams struct {

	/* AzureToken.

	   Specifies the JWT obtained through user with the scope as BackupRestore-Control.ReadWrite.All
	*/
	AzureToken *string

	/* ID.

	   Specifies the Service App ID for the registered M365 Backup Controller when Cohesity App is the active Controller.
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the unregister m365 backup controller params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UnregisterM365BackupControllerParams) WithDefaults() *UnregisterM365BackupControllerParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the unregister m365 backup controller params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UnregisterM365BackupControllerParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) WithTimeout(timeout time.Duration) *UnregisterM365BackupControllerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) WithContext(ctx context.Context) *UnregisterM365BackupControllerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) WithHTTPClient(client *http.Client) *UnregisterM365BackupControllerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAzureToken adds the azureToken to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) WithAzureToken(azureToken *string) *UnregisterM365BackupControllerParams {
	o.SetAzureToken(azureToken)
	return o
}

// SetAzureToken adds the azureToken to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) SetAzureToken(azureToken *string) {
	o.AzureToken = azureToken
}

// WithID adds the id to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) WithID(id string) *UnregisterM365BackupControllerParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the unregister m365 backup controller params
func (o *UnregisterM365BackupControllerParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UnregisterM365BackupControllerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AzureToken != nil {

		// header param azureToken
		if err := r.SetHeaderParam("azureToken", *o.AzureToken); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
