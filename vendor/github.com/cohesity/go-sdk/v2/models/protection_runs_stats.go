// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProtectionRunsStats Specifies the statistics of protection runs.
//
// swagger:model ProtectionRunsStats
type ProtectionRunsStats struct {

	// Specifies the status of protection runs.
	// Enum: ["Running","Canceled","Failed","Succeeded","SucceededWithWarning"]
	ProtectionRunStatus *string `json:"protectionRunStatus,omitempty"`

	// Specifies the number of protection runs.
	ProtectionRunsCount *int64 `json:"protectionRunsCount,omitempty"`
}

// Validate validates this protection runs stats
func (m *ProtectionRunsStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProtectionRunStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var protectionRunsStatsTypeProtectionRunStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Running","Canceled","Failed","Succeeded","SucceededWithWarning"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protectionRunsStatsTypeProtectionRunStatusPropEnum = append(protectionRunsStatsTypeProtectionRunStatusPropEnum, v)
	}
}

const (

	// ProtectionRunsStatsProtectionRunStatusRunning captures enum value "Running"
	ProtectionRunsStatsProtectionRunStatusRunning string = "Running"

	// ProtectionRunsStatsProtectionRunStatusCanceled captures enum value "Canceled"
	ProtectionRunsStatsProtectionRunStatusCanceled string = "Canceled"

	// ProtectionRunsStatsProtectionRunStatusFailed captures enum value "Failed"
	ProtectionRunsStatsProtectionRunStatusFailed string = "Failed"

	// ProtectionRunsStatsProtectionRunStatusSucceeded captures enum value "Succeeded"
	ProtectionRunsStatsProtectionRunStatusSucceeded string = "Succeeded"

	// ProtectionRunsStatsProtectionRunStatusSucceededWithWarning captures enum value "SucceededWithWarning"
	ProtectionRunsStatsProtectionRunStatusSucceededWithWarning string = "SucceededWithWarning"
)

// prop value enum
func (m *ProtectionRunsStats) validateProtectionRunStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, protectionRunsStatsTypeProtectionRunStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ProtectionRunsStats) validateProtectionRunStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectionRunStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectionRunStatusEnum("protectionRunStatus", "body", *m.ProtectionRunStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this protection runs stats based on context it is used
func (m *ProtectionRunsStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtectionRunsStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectionRunsStats) UnmarshalBinary(b []byte) error {
	var res ProtectionRunsStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
