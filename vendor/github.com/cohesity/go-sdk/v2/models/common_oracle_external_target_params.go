// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonOracleExternalTargetParams Oracle External Target Request Common Params for archival purpose type.
//
// Specifies the common parameters which are specific to Oracle related External Targets.
//
// swagger:model CommonOracleExternalTargetParams
type CommonOracleExternalTargetParams struct {

	// Specifies the bucket name of the external target.
	// Required: true
	BucketName *string `json:"bucketName"`

	// Specifies the region of the external target.
	// Required: true
	Region *string `json:"region"`

	// Specifies the access key id of the external target.
	// Required: true
	AccessKeyID *string `json:"accessKeyId"`

	// Specifies the storage access key of the external target.
	StorageAccessKey *string `json:"storageAccessKey,omitempty"`

	// Specifies the tenancy of the external target.
	// Required: true
	Tenancy *string `json:"tenancy"`
}

// Validate validates this common oracle external target params
func (m *CommonOracleExternalTargetParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucketName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAccessKeyID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenancy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonOracleExternalTargetParams) validateBucketName(formats strfmt.Registry) error {

	if err := validate.Required("bucketName", "body", m.BucketName); err != nil {
		return err
	}

	return nil
}

func (m *CommonOracleExternalTargetParams) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

func (m *CommonOracleExternalTargetParams) validateAccessKeyID(formats strfmt.Registry) error {

	if err := validate.Required("accessKeyId", "body", m.AccessKeyID); err != nil {
		return err
	}

	return nil
}

func (m *CommonOracleExternalTargetParams) validateTenancy(formats strfmt.Registry) error {

	if err := validate.Required("tenancy", "body", m.Tenancy); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this common oracle external target params based on context it is used
func (m *CommonOracleExternalTargetParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonOracleExternalTargetParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonOracleExternalTargetParams) UnmarshalBinary(b []byte) error {
	var res CommonOracleExternalTargetParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
