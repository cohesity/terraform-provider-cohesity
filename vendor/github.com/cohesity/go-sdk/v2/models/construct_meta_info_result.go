// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConstructMetaInfoResult ConstructMetaInfoResult
//
// Result to store meta-info from an object snapshot and additional information.
//
// swagger:model ConstructMetaInfoResult
type ConstructMetaInfoResult struct {

	// Specifies the environment type for fetching the meta Info.
	// Enum: ["kVMware","kHyperV","kVCD","kAzure","kGCP","kKVM","kAcropolis","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kPhysical","kPhysicalFiles","kGPFS","kElastifile","kNetapp","kGenericNas","kIsilon","kFlashBlade","kPure","kIbmFlashSystem","kSQL","kExchange","kAD","kOracle","kView","kRemoteAdapter","kO365","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kKubernetes","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kSAPHANA","kUDA","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]
	Environment *string `json:"environment,omitempty"`

	// Specifies 3 Maps required to fill pfile text box.
	OracleParams *OracleRestoreMetaInfoResult `json:"oracleParams,omitempty"`

	// Specifies the meta info params for salesforce object.
	SfdcParams *SfdcMetaInfoResult `json:"sfdcParams,omitempty"`
}

// Validate validates this construct meta info result
func (m *ConstructMetaInfoResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOracleParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSfdcParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var constructMetaInfoResultTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kVCD","kAzure","kGCP","kKVM","kAcropolis","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kPhysical","kPhysicalFiles","kGPFS","kElastifile","kNetapp","kGenericNas","kIsilon","kFlashBlade","kPure","kIbmFlashSystem","kSQL","kExchange","kAD","kOracle","kView","kRemoteAdapter","kO365","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kKubernetes","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kSAPHANA","kUDA","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		constructMetaInfoResultTypeEnvironmentPropEnum = append(constructMetaInfoResultTypeEnvironmentPropEnum, v)
	}
}

const (

	// ConstructMetaInfoResultEnvironmentKVMware captures enum value "kVMware"
	ConstructMetaInfoResultEnvironmentKVMware string = "kVMware"

	// ConstructMetaInfoResultEnvironmentKHyperV captures enum value "kHyperV"
	ConstructMetaInfoResultEnvironmentKHyperV string = "kHyperV"

	// ConstructMetaInfoResultEnvironmentKVCD captures enum value "kVCD"
	ConstructMetaInfoResultEnvironmentKVCD string = "kVCD"

	// ConstructMetaInfoResultEnvironmentKAzure captures enum value "kAzure"
	ConstructMetaInfoResultEnvironmentKAzure string = "kAzure"

	// ConstructMetaInfoResultEnvironmentKGCP captures enum value "kGCP"
	ConstructMetaInfoResultEnvironmentKGCP string = "kGCP"

	// ConstructMetaInfoResultEnvironmentKKVM captures enum value "kKVM"
	ConstructMetaInfoResultEnvironmentKKVM string = "kKVM"

	// ConstructMetaInfoResultEnvironmentKAcropolis captures enum value "kAcropolis"
	ConstructMetaInfoResultEnvironmentKAcropolis string = "kAcropolis"

	// ConstructMetaInfoResultEnvironmentKAWS captures enum value "kAWS"
	ConstructMetaInfoResultEnvironmentKAWS string = "kAWS"

	// ConstructMetaInfoResultEnvironmentKAWSNative captures enum value "kAWSNative"
	ConstructMetaInfoResultEnvironmentKAWSNative string = "kAWSNative"

	// ConstructMetaInfoResultEnvironmentKAwsS3 captures enum value "kAwsS3"
	ConstructMetaInfoResultEnvironmentKAwsS3 string = "kAwsS3"

	// ConstructMetaInfoResultEnvironmentKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	ConstructMetaInfoResultEnvironmentKAWSSnapshotManager string = "kAWSSnapshotManager"

	// ConstructMetaInfoResultEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	ConstructMetaInfoResultEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// ConstructMetaInfoResultEnvironmentKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	ConstructMetaInfoResultEnvironmentKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// ConstructMetaInfoResultEnvironmentKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	ConstructMetaInfoResultEnvironmentKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// ConstructMetaInfoResultEnvironmentKAwsRDSPostgres captures enum value "kAwsRDSPostgres"
	ConstructMetaInfoResultEnvironmentKAwsRDSPostgres string = "kAwsRDSPostgres"

	// ConstructMetaInfoResultEnvironmentKAwsAuroraPostgres captures enum value "kAwsAuroraPostgres"
	ConstructMetaInfoResultEnvironmentKAwsAuroraPostgres string = "kAwsAuroraPostgres"

	// ConstructMetaInfoResultEnvironmentKAzureNative captures enum value "kAzureNative"
	ConstructMetaInfoResultEnvironmentKAzureNative string = "kAzureNative"

	// ConstructMetaInfoResultEnvironmentKAzureSQL captures enum value "kAzureSQL"
	ConstructMetaInfoResultEnvironmentKAzureSQL string = "kAzureSQL"

	// ConstructMetaInfoResultEnvironmentKAzureSnapshotManager captures enum value "kAzureSnapshotManager"
	ConstructMetaInfoResultEnvironmentKAzureSnapshotManager string = "kAzureSnapshotManager"

	// ConstructMetaInfoResultEnvironmentKPhysical captures enum value "kPhysical"
	ConstructMetaInfoResultEnvironmentKPhysical string = "kPhysical"

	// ConstructMetaInfoResultEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	ConstructMetaInfoResultEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// ConstructMetaInfoResultEnvironmentKGPFS captures enum value "kGPFS"
	ConstructMetaInfoResultEnvironmentKGPFS string = "kGPFS"

	// ConstructMetaInfoResultEnvironmentKElastifile captures enum value "kElastifile"
	ConstructMetaInfoResultEnvironmentKElastifile string = "kElastifile"

	// ConstructMetaInfoResultEnvironmentKNetapp captures enum value "kNetapp"
	ConstructMetaInfoResultEnvironmentKNetapp string = "kNetapp"

	// ConstructMetaInfoResultEnvironmentKGenericNas captures enum value "kGenericNas"
	ConstructMetaInfoResultEnvironmentKGenericNas string = "kGenericNas"

	// ConstructMetaInfoResultEnvironmentKIsilon captures enum value "kIsilon"
	ConstructMetaInfoResultEnvironmentKIsilon string = "kIsilon"

	// ConstructMetaInfoResultEnvironmentKFlashBlade captures enum value "kFlashBlade"
	ConstructMetaInfoResultEnvironmentKFlashBlade string = "kFlashBlade"

	// ConstructMetaInfoResultEnvironmentKPure captures enum value "kPure"
	ConstructMetaInfoResultEnvironmentKPure string = "kPure"

	// ConstructMetaInfoResultEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	ConstructMetaInfoResultEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// ConstructMetaInfoResultEnvironmentKSQL captures enum value "kSQL"
	ConstructMetaInfoResultEnvironmentKSQL string = "kSQL"

	// ConstructMetaInfoResultEnvironmentKExchange captures enum value "kExchange"
	ConstructMetaInfoResultEnvironmentKExchange string = "kExchange"

	// ConstructMetaInfoResultEnvironmentKAD captures enum value "kAD"
	ConstructMetaInfoResultEnvironmentKAD string = "kAD"

	// ConstructMetaInfoResultEnvironmentKOracle captures enum value "kOracle"
	ConstructMetaInfoResultEnvironmentKOracle string = "kOracle"

	// ConstructMetaInfoResultEnvironmentKView captures enum value "kView"
	ConstructMetaInfoResultEnvironmentKView string = "kView"

	// ConstructMetaInfoResultEnvironmentKRemoteAdapter captures enum value "kRemoteAdapter"
	ConstructMetaInfoResultEnvironmentKRemoteAdapter string = "kRemoteAdapter"

	// ConstructMetaInfoResultEnvironmentKO365 captures enum value "kO365"
	ConstructMetaInfoResultEnvironmentKO365 string = "kO365"

	// ConstructMetaInfoResultEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	ConstructMetaInfoResultEnvironmentKO365PublicFolders string = "kO365PublicFolders"

	// ConstructMetaInfoResultEnvironmentKO365Teams captures enum value "kO365Teams"
	ConstructMetaInfoResultEnvironmentKO365Teams string = "kO365Teams"

	// ConstructMetaInfoResultEnvironmentKO365Group captures enum value "kO365Group"
	ConstructMetaInfoResultEnvironmentKO365Group string = "kO365Group"

	// ConstructMetaInfoResultEnvironmentKO365Exchange captures enum value "kO365Exchange"
	ConstructMetaInfoResultEnvironmentKO365Exchange string = "kO365Exchange"

	// ConstructMetaInfoResultEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	ConstructMetaInfoResultEnvironmentKO365OneDrive string = "kO365OneDrive"

	// ConstructMetaInfoResultEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	ConstructMetaInfoResultEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// ConstructMetaInfoResultEnvironmentKKubernetes captures enum value "kKubernetes"
	ConstructMetaInfoResultEnvironmentKKubernetes string = "kKubernetes"

	// ConstructMetaInfoResultEnvironmentKCassandra captures enum value "kCassandra"
	ConstructMetaInfoResultEnvironmentKCassandra string = "kCassandra"

	// ConstructMetaInfoResultEnvironmentKMongoDB captures enum value "kMongoDB"
	ConstructMetaInfoResultEnvironmentKMongoDB string = "kMongoDB"

	// ConstructMetaInfoResultEnvironmentKCouchbase captures enum value "kCouchbase"
	ConstructMetaInfoResultEnvironmentKCouchbase string = "kCouchbase"

	// ConstructMetaInfoResultEnvironmentKHdfs captures enum value "kHdfs"
	ConstructMetaInfoResultEnvironmentKHdfs string = "kHdfs"

	// ConstructMetaInfoResultEnvironmentKHive captures enum value "kHive"
	ConstructMetaInfoResultEnvironmentKHive string = "kHive"

	// ConstructMetaInfoResultEnvironmentKHBase captures enum value "kHBase"
	ConstructMetaInfoResultEnvironmentKHBase string = "kHBase"

	// ConstructMetaInfoResultEnvironmentKSAPHANA captures enum value "kSAPHANA"
	ConstructMetaInfoResultEnvironmentKSAPHANA string = "kSAPHANA"

	// ConstructMetaInfoResultEnvironmentKUDA captures enum value "kUDA"
	ConstructMetaInfoResultEnvironmentKUDA string = "kUDA"

	// ConstructMetaInfoResultEnvironmentKSfdc captures enum value "kSfdc"
	ConstructMetaInfoResultEnvironmentKSfdc string = "kSfdc"

	// ConstructMetaInfoResultEnvironmentKO365ExchangeCSM captures enum value "kO365ExchangeCSM"
	ConstructMetaInfoResultEnvironmentKO365ExchangeCSM string = "kO365ExchangeCSM"

	// ConstructMetaInfoResultEnvironmentKO365OneDriveCSM captures enum value "kO365OneDriveCSM"
	ConstructMetaInfoResultEnvironmentKO365OneDriveCSM string = "kO365OneDriveCSM"

	// ConstructMetaInfoResultEnvironmentKO365SharepointCSM captures enum value "kO365SharepointCSM"
	ConstructMetaInfoResultEnvironmentKO365SharepointCSM string = "kO365SharepointCSM"
)

// prop value enum
func (m *ConstructMetaInfoResult) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, constructMetaInfoResultTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConstructMetaInfoResult) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

func (m *ConstructMetaInfoResult) validateOracleParams(formats strfmt.Registry) error {
	if swag.IsZero(m.OracleParams) { // not required
		return nil
	}

	if m.OracleParams != nil {
		if err := m.OracleParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("oracleParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("oracleParams")
			}
			return err
		}
	}

	return nil
}

func (m *ConstructMetaInfoResult) validateSfdcParams(formats strfmt.Registry) error {
	if swag.IsZero(m.SfdcParams) { // not required
		return nil
	}

	if m.SfdcParams != nil {
		if err := m.SfdcParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfdcParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("sfdcParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this construct meta info result based on the context it is used
func (m *ConstructMetaInfoResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOracleParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSfdcParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConstructMetaInfoResult) contextValidateOracleParams(ctx context.Context, formats strfmt.Registry) error {

	if m.OracleParams != nil {

		if swag.IsZero(m.OracleParams) { // not required
			return nil
		}

		if err := m.OracleParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("oracleParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("oracleParams")
			}
			return err
		}
	}

	return nil
}

func (m *ConstructMetaInfoResult) contextValidateSfdcParams(ctx context.Context, formats strfmt.Registry) error {

	if m.SfdcParams != nil {

		if swag.IsZero(m.SfdcParams) { // not required
			return nil
		}

		if err := m.SfdcParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfdcParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("sfdcParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConstructMetaInfoResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConstructMetaInfoResult) UnmarshalBinary(b []byte) error {
	var res ConstructMetaInfoResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
