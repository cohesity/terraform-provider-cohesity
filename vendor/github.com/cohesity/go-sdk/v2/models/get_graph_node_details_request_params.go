// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetGraphNodeDetailsRequestParams Get Graph Node Details Query Params
//
// Specifies the request parameters to query graph node relations for a given node id.
//
// swagger:model GetGraphNodeDetailsRequestParams
type GetGraphNodeDetailsRequestParams struct {

	// Specifies the node type
	// Required: true
	NodeType *string `json:"nodeType"`

	// If set to false only the node info will be returned, else the relations matching the below relation filters will be returned. Defaults to false.
	QueryRelation *bool `json:"queryRelation,omitempty"`

	// If set to false the response will only return name, type and is_root fields filled in each node/relation. If set to true all the attributes for the nodes and its relations are also returned. Defaults to true.
	IncludeAttributes *bool `json:"includeAttributes,omitempty"`

	// Specifies the filter params for graph node relations.
	RelationFilter struct {
		GraphNodeRelationFilterParams
	} `json:"relationFilter,omitempty"`

	// Specifies a cookie which can be passed in by the user in order to retrieve the next page of results.
	PaginationCookie *string `json:"paginationCookie,omitempty"`

	// Specifies the number of graph node relations to be fetched for the specified pagination cookie.
	Count int32 `json:"count,omitempty"`
}

// Validate validates this get graph node details request params
func (m *GetGraphNodeDetailsRequestParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodeType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRelationFilter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetGraphNodeDetailsRequestParams) validateNodeType(formats strfmt.Registry) error {

	if err := validate.Required("nodeType", "body", m.NodeType); err != nil {
		return err
	}

	return nil
}

func (m *GetGraphNodeDetailsRequestParams) validateRelationFilter(formats strfmt.Registry) error {
	if swag.IsZero(m.RelationFilter) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this get graph node details request params based on the context it is used
func (m *GetGraphNodeDetailsRequestParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRelationFilter(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetGraphNodeDetailsRequestParams) contextValidateRelationFilter(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GetGraphNodeDetailsRequestParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetGraphNodeDetailsRequestParams) UnmarshalBinary(b []byte) error {
	var res GetGraphNodeDetailsRequestParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
