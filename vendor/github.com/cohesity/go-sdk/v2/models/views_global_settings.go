// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ViewsGlobalSettings Specifies the Global Settings for SmartFiles.
//
// swagger:model ViewsGlobalSettings
type ViewsGlobalSettings struct {

	// Specifies if SMB Authentication should be enabled.
	EnableSmbAuth *bool `json:"enableSmbAuth,omitempty"`

	// Specifies if SMB Multi-Channel should be enabled.
	EnableSmbMultiChannel *bool `json:"enableSmbMultiChannel,omitempty"`

	// Specifies the visibility of Remote Cohesity Views for external clients.
	EnableRemoteViewsVisibility *bool `json:"enableRemoteViewsVisibility,omitempty"`

	// Specifies the visibility of Remote Cohesity Views on Cohesity GUI.
	EnableRemoteViewsGuiVisibility *bool `json:"enableRemoteViewsGuiVisibility,omitempty"`

	// Specifies the list of domain names for S3 Virtual Hosted Style Paths. If set, all the Cohesity S3 Views in the cluster can be accessed using any of the specified domain names.
	S3VirtualHostedDomainNames []string `json:"s3VirtualHostedDomainNames"`
}

// Validate validates this views global settings
func (m *ViewsGlobalSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this views global settings based on context it is used
func (m *ViewsGlobalSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ViewsGlobalSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ViewsGlobalSettings) UnmarshalBinary(b []byte) error {
	var res ViewsGlobalSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
