// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProtectionGroupInfo Protection Group Info
//
// Specifies basic information about a Protection Group.
//
// swagger:model ProtectionGroupInfo
type ProtectionGroupInfo struct {

	// This field is deprecated. 'protectionGroupId' should be used instead.
	// Specifies the id of the Protection Group.
	GroupID *int64 `json:"groupId,omitempty"`

	// Specifies the protection group id.
	ProtectionGroupID *string `json:"protectionGroupId,omitempty"`

	// Specifies the name of the Protection Group.
	GroupName *string `json:"groupName,omitempty"`

	// Specifies if the Protection Group's run is paused.
	IsPaused *bool `json:"isPaused,omitempty"`

	// Specifies the type of the Protection Group such as View or Puppeteer.
	// 'Puppeteer' refers to a Remote Adapter Group.
	// Supported environment types such as 'View', 'SQL', 'VMware', etc.
	// NOTE: 'Puppeteer' refers to Cohesity's Remote Adapter.
	// 'VMware' indicates the VMware Protection Source environment.
	// 'HyperV' indicates the HyperV Protection Source environment.
	// 'SQL' indicates the SQL Protection Source environment.
	// 'View' indicates the View Protection Source environment.
	// 'Puppeteer' indicates the Cohesity's Remote Adapter.
	// 'Physical' indicates the physical Protection Source environment.
	// 'Pure' indicates the Pure Storage Protection Source environment.
	// 'Nimble' indicates the Nimble Storage Protection Source environment.
	// 'Azure' indicates the Microsoft's Azure Protection Source environment.
	// 'Netapp' indicates the Netapp Protection Source environment.
	// 'Agent' indicates the Agent Protection Source environment.
	// 'GenericNas' indicates the Generic Network Attached Storage Protection
	// Source environment.
	// 'Acropolis' indicates the Acropolis Protection Source environment.
	// 'PhsicalFiles' indicates the Physical Files Protection Source environment.
	// 'Isilon' indicates the Dell EMC's Isilon Protection Source environment.
	// 'GPFS' indicates IBM's GPFS Protection Source environment.
	// 'KVM' indicates the KVM Protection Source environment.
	// 'AWS' indicates the AWS Protection Source environment.
	// 'Exchange' indicates the Exchange Protection Source environment.
	// 'HyperVVSS' indicates the HyperV VSS Protection Source
	// environment.
	// 'Oracle' indicates the Oracle Protection Source environment.
	// 'GCP' indicates the Google Cloud Platform Protection Source environment.
	// 'FlashBlade' indicates the Flash Blade Protection Source environment.
	// 'AWSNative' indicates the AWS Native Protection Source environment.
	// 'O365' indicates the Office 365 Protection Source environment.
	// 'O365Outlook' indicates Office 365 outlook Protection Source environment.
	// 'HyperFlex' indicates the Hyper Flex Protection Source environment.
	// 'GCPNative' indicates the GCP Native Protection Source environment.
	// 'AzureNative' indicates the Azure Native Protection Source environment.
	// 'Kubernetes' indicates a Kubernetes Protection Source environment.
	// 'Elastifile' indicates Elastifile Protection Source environment.
	// 'AD' indicates Active Directory Protection Source environment.
	// Enum: ["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kSAPHANA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]
	Type *string `json:"type,omitempty"`

	// Specifies information about the last run for this Protection Group.
	LastRun *ProtectionGroupRun `json:"lastRun,omitempty"`
}

// Validate validates this protection group info
func (m *ProtectionGroupInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastRun(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var protectionGroupInfoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kSAPHANA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		protectionGroupInfoTypeTypePropEnum = append(protectionGroupInfoTypeTypePropEnum, v)
	}
}

const (

	// ProtectionGroupInfoTypeKVMware captures enum value "kVMware"
	ProtectionGroupInfoTypeKVMware string = "kVMware"

	// ProtectionGroupInfoTypeKHyperV captures enum value "kHyperV"
	ProtectionGroupInfoTypeKHyperV string = "kHyperV"

	// ProtectionGroupInfoTypeKVCD captures enum value "kVCD"
	ProtectionGroupInfoTypeKVCD string = "kVCD"

	// ProtectionGroupInfoTypeKSQL captures enum value "kSQL"
	ProtectionGroupInfoTypeKSQL string = "kSQL"

	// ProtectionGroupInfoTypeKView captures enum value "kView"
	ProtectionGroupInfoTypeKView string = "kView"

	// ProtectionGroupInfoTypeKRemoteAdapter captures enum value "kRemoteAdapter"
	ProtectionGroupInfoTypeKRemoteAdapter string = "kRemoteAdapter"

	// ProtectionGroupInfoTypeKPhysical captures enum value "kPhysical"
	ProtectionGroupInfoTypeKPhysical string = "kPhysical"

	// ProtectionGroupInfoTypeKPure captures enum value "kPure"
	ProtectionGroupInfoTypeKPure string = "kPure"

	// ProtectionGroupInfoTypeKIbmFlashSystem captures enum value "kIbmFlashSystem"
	ProtectionGroupInfoTypeKIbmFlashSystem string = "kIbmFlashSystem"

	// ProtectionGroupInfoTypeKAzure captures enum value "kAzure"
	ProtectionGroupInfoTypeKAzure string = "kAzure"

	// ProtectionGroupInfoTypeKNetapp captures enum value "kNetapp"
	ProtectionGroupInfoTypeKNetapp string = "kNetapp"

	// ProtectionGroupInfoTypeKGenericNas captures enum value "kGenericNas"
	ProtectionGroupInfoTypeKGenericNas string = "kGenericNas"

	// ProtectionGroupInfoTypeKAcropolis captures enum value "kAcropolis"
	ProtectionGroupInfoTypeKAcropolis string = "kAcropolis"

	// ProtectionGroupInfoTypeKIsilon captures enum value "kIsilon"
	ProtectionGroupInfoTypeKIsilon string = "kIsilon"

	// ProtectionGroupInfoTypeKKVM captures enum value "kKVM"
	ProtectionGroupInfoTypeKKVM string = "kKVM"

	// ProtectionGroupInfoTypeKAWS captures enum value "kAWS"
	ProtectionGroupInfoTypeKAWS string = "kAWS"

	// ProtectionGroupInfoTypeKAWSNative captures enum value "kAWSNative"
	ProtectionGroupInfoTypeKAWSNative string = "kAWSNative"

	// ProtectionGroupInfoTypeKAwsS3 captures enum value "kAwsS3"
	ProtectionGroupInfoTypeKAwsS3 string = "kAwsS3"

	// ProtectionGroupInfoTypeKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	ProtectionGroupInfoTypeKAWSSnapshotManager string = "kAWSSnapshotManager"

	// ProtectionGroupInfoTypeKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	ProtectionGroupInfoTypeKRDSSnapshotManager string = "kRDSSnapshotManager"

	// ProtectionGroupInfoTypeKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	ProtectionGroupInfoTypeKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// ProtectionGroupInfoTypeKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	ProtectionGroupInfoTypeKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// ProtectionGroupInfoTypeKAwsRDSPostgres captures enum value "kAwsRDSPostgres"
	ProtectionGroupInfoTypeKAwsRDSPostgres string = "kAwsRDSPostgres"

	// ProtectionGroupInfoTypeKAwsAuroraPostgres captures enum value "kAwsAuroraPostgres"
	ProtectionGroupInfoTypeKAwsAuroraPostgres string = "kAwsAuroraPostgres"

	// ProtectionGroupInfoTypeKAzureNative captures enum value "kAzureNative"
	ProtectionGroupInfoTypeKAzureNative string = "kAzureNative"

	// ProtectionGroupInfoTypeKAzureSQL captures enum value "kAzureSQL"
	ProtectionGroupInfoTypeKAzureSQL string = "kAzureSQL"

	// ProtectionGroupInfoTypeKAzureSnapshotManager captures enum value "kAzureSnapshotManager"
	ProtectionGroupInfoTypeKAzureSnapshotManager string = "kAzureSnapshotManager"

	// ProtectionGroupInfoTypeKExchange captures enum value "kExchange"
	ProtectionGroupInfoTypeKExchange string = "kExchange"

	// ProtectionGroupInfoTypeKOracle captures enum value "kOracle"
	ProtectionGroupInfoTypeKOracle string = "kOracle"

	// ProtectionGroupInfoTypeKGCP captures enum value "kGCP"
	ProtectionGroupInfoTypeKGCP string = "kGCP"

	// ProtectionGroupInfoTypeKFlashBlade captures enum value "kFlashBlade"
	ProtectionGroupInfoTypeKFlashBlade string = "kFlashBlade"

	// ProtectionGroupInfoTypeKO365 captures enum value "kO365"
	ProtectionGroupInfoTypeKO365 string = "kO365"

	// ProtectionGroupInfoTypeKHyperFlex captures enum value "kHyperFlex"
	ProtectionGroupInfoTypeKHyperFlex string = "kHyperFlex"

	// ProtectionGroupInfoTypeKAD captures enum value "kAD"
	ProtectionGroupInfoTypeKAD string = "kAD"

	// ProtectionGroupInfoTypeKGPFS captures enum value "kGPFS"
	ProtectionGroupInfoTypeKGPFS string = "kGPFS"

	// ProtectionGroupInfoTypeKKubernetes captures enum value "kKubernetes"
	ProtectionGroupInfoTypeKKubernetes string = "kKubernetes"

	// ProtectionGroupInfoTypeKNimble captures enum value "kNimble"
	ProtectionGroupInfoTypeKNimble string = "kNimble"

	// ProtectionGroupInfoTypeKElastifile captures enum value "kElastifile"
	ProtectionGroupInfoTypeKElastifile string = "kElastifile"

	// ProtectionGroupInfoTypeKCassandra captures enum value "kCassandra"
	ProtectionGroupInfoTypeKCassandra string = "kCassandra"

	// ProtectionGroupInfoTypeKMongoDB captures enum value "kMongoDB"
	ProtectionGroupInfoTypeKMongoDB string = "kMongoDB"

	// ProtectionGroupInfoTypeKCouchbase captures enum value "kCouchbase"
	ProtectionGroupInfoTypeKCouchbase string = "kCouchbase"

	// ProtectionGroupInfoTypeKHdfs captures enum value "kHdfs"
	ProtectionGroupInfoTypeKHdfs string = "kHdfs"

	// ProtectionGroupInfoTypeKHive captures enum value "kHive"
	ProtectionGroupInfoTypeKHive string = "kHive"

	// ProtectionGroupInfoTypeKHBase captures enum value "kHBase"
	ProtectionGroupInfoTypeKHBase string = "kHBase"

	// ProtectionGroupInfoTypeKUDA captures enum value "kUDA"
	ProtectionGroupInfoTypeKUDA string = "kUDA"

	// ProtectionGroupInfoTypeKSAPHANA captures enum value "kSAPHANA"
	ProtectionGroupInfoTypeKSAPHANA string = "kSAPHANA"

	// ProtectionGroupInfoTypeKO365Sharepoint captures enum value "kO365Sharepoint"
	ProtectionGroupInfoTypeKO365Sharepoint string = "kO365Sharepoint"

	// ProtectionGroupInfoTypeKO365PublicFolders captures enum value "kO365PublicFolders"
	ProtectionGroupInfoTypeKO365PublicFolders string = "kO365PublicFolders"

	// ProtectionGroupInfoTypeKO365Teams captures enum value "kO365Teams"
	ProtectionGroupInfoTypeKO365Teams string = "kO365Teams"

	// ProtectionGroupInfoTypeKO365Group captures enum value "kO365Group"
	ProtectionGroupInfoTypeKO365Group string = "kO365Group"

	// ProtectionGroupInfoTypeKO365Exchange captures enum value "kO365Exchange"
	ProtectionGroupInfoTypeKO365Exchange string = "kO365Exchange"

	// ProtectionGroupInfoTypeKO365OneDrive captures enum value "kO365OneDrive"
	ProtectionGroupInfoTypeKO365OneDrive string = "kO365OneDrive"

	// ProtectionGroupInfoTypeKSfdc captures enum value "kSfdc"
	ProtectionGroupInfoTypeKSfdc string = "kSfdc"

	// ProtectionGroupInfoTypeKO365ExchangeCSM captures enum value "kO365ExchangeCSM"
	ProtectionGroupInfoTypeKO365ExchangeCSM string = "kO365ExchangeCSM"

	// ProtectionGroupInfoTypeKO365OneDriveCSM captures enum value "kO365OneDriveCSM"
	ProtectionGroupInfoTypeKO365OneDriveCSM string = "kO365OneDriveCSM"

	// ProtectionGroupInfoTypeKO365SharepointCSM captures enum value "kO365SharepointCSM"
	ProtectionGroupInfoTypeKO365SharepointCSM string = "kO365SharepointCSM"
)

// prop value enum
func (m *ProtectionGroupInfo) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, protectionGroupInfoTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ProtectionGroupInfo) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

func (m *ProtectionGroupInfo) validateLastRun(formats strfmt.Registry) error {
	if swag.IsZero(m.LastRun) { // not required
		return nil
	}

	if m.LastRun != nil {
		if err := m.LastRun.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastRun")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("lastRun")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this protection group info based on the context it is used
func (m *ProtectionGroupInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLastRun(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProtectionGroupInfo) contextValidateLastRun(ctx context.Context, formats strfmt.Registry) error {

	if m.LastRun != nil {

		if swag.IsZero(m.LastRun) { // not required
			return nil
		}

		if err := m.LastRun.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastRun")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("lastRun")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProtectionGroupInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectionGroupInfo) UnmarshalBinary(b []byte) error {
	var res ProtectionGroupInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
