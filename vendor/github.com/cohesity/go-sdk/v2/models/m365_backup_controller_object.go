// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// M365BackupControllerObject Get M365 Backup Controller
//
// Specifies the Service App Info for the Backup Controller for the Cohesity App for against a specific tenant.
//
// swagger:model M365BackupControllerObject
type M365BackupControllerObject struct {

	// Specifies the Service App ID of the M365 backup Controller
	ID *string `json:"id,omitempty"`

	// Specifies the Service App status
	// Enum: ["Inactive","PendingInactive","PendingActive","Active"]
	Status *string `json:"status,omitempty"`

	// Specifies the Service App registration time in Epoch secs
	RegistrationTimeSecs *int64 `json:"registrationTimeSecs,omitempty"`

	// Specifies the time in Epoch secs from which this App will be or has been the active controller.
	EffectiveTimeSecs *int64 `json:"effectiveTimeSecs,omitempty"`
}

// Validate validates this m365 backup controller object
func (m *M365BackupControllerObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var m365BackupControllerObjectTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Inactive","PendingInactive","PendingActive","Active"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		m365BackupControllerObjectTypeStatusPropEnum = append(m365BackupControllerObjectTypeStatusPropEnum, v)
	}
}

const (

	// M365BackupControllerObjectStatusInactive captures enum value "Inactive"
	M365BackupControllerObjectStatusInactive string = "Inactive"

	// M365BackupControllerObjectStatusPendingInactive captures enum value "PendingInactive"
	M365BackupControllerObjectStatusPendingInactive string = "PendingInactive"

	// M365BackupControllerObjectStatusPendingActive captures enum value "PendingActive"
	M365BackupControllerObjectStatusPendingActive string = "PendingActive"

	// M365BackupControllerObjectStatusActive captures enum value "Active"
	M365BackupControllerObjectStatusActive string = "Active"
)

// prop value enum
func (m *M365BackupControllerObject) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, m365BackupControllerObjectTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *M365BackupControllerObject) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this m365 backup controller object based on context it is used
func (m *M365BackupControllerObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *M365BackupControllerObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *M365BackupControllerObject) UnmarshalBinary(b []byte) error {
	var res M365BackupControllerObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
