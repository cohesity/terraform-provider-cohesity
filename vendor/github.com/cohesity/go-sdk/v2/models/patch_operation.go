// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PatchOperation Patch Operation.
//
// Specifies a patch operation.
//
// swagger:model PatchOperation
type PatchOperation struct {

	// Specifies the name of the service.
	Service string `json:"service,omitempty"`

	// Specifies the description of the service.
	Component string `json:"component,omitempty"`

	// Specifies the version of the patch.
	Version string `json:"version,omitempty"`

	// Specifies the version it replaced.
	VersionReplaced string `json:"versionReplaced,omitempty"`

	// Specifies what patch management operation was performed
	Operation string `json:"operation,omitempty"`

	// Specifies the time when the patch operation was done in Unix epoch in milliseconds.
	OperationTimeMsecs int64 `json:"operationTimeMsecs,omitempty"`

	// Specifies the user who performed the operation.
	User string `json:"user,omitempty"`

	// Specifies the domain of the user.
	Domain string `json:"domain,omitempty"`
}

// Validate validates this patch operation
func (m *PatchOperation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this patch operation based on context it is used
func (m *PatchOperation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PatchOperation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchOperation) UnmarshalBinary(b []byte) error {
	var res PatchOperation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
