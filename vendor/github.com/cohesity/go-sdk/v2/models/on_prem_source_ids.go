// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OnPremSourceIds List of Source IDs
//
// List of source ids for a cluster.
//
// swagger:model OnPremSourceIds
type OnPremSourceIds struct {

	// Specifies a list of source ids. Only files found in these sources will be returned.
	// Unique: true
	SourceIds []int64 `json:"sourceIds"`
}

// Validate validates this on prem source ids
func (m *OnPremSourceIds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSourceIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OnPremSourceIds) validateSourceIds(formats strfmt.Registry) error {
	if swag.IsZero(m.SourceIds) { // not required
		return nil
	}

	if err := validate.UniqueItems("sourceIds", "body", m.SourceIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this on prem source ids based on context it is used
func (m *OnPremSourceIds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OnPremSourceIds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OnPremSourceIds) UnmarshalBinary(b []byte) error {
	var res OnPremSourceIds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
