// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdCustomAttributesTypeParams Specifies the properties accociated to a CustomAttributes type user id mapping.
//
// swagger:model AdCustomAttributesTypeParams
type AdCustomAttributesTypeParams struct {

	// Specifies the custom field name in Active Directory user properties to get the UID.
	// Required: true
	UIDAttrName *string `json:"uidAttrName"`

	// Specifies the custom field name in Active Directory user properties to get the GID.
	// Required: true
	GidAttrName *string `json:"gidAttrName"`

	// Specifies a fallback user id mapping param in case the primary config does not work.
	// Required: true
	FallbackOption *FallbackUserIDMappingParams `json:"fallbackOption"`
}

// Validate validates this ad custom attributes type params
func (m *AdCustomAttributesTypeParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUIDAttrName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGidAttrName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFallbackOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdCustomAttributesTypeParams) validateUIDAttrName(formats strfmt.Registry) error {

	if err := validate.Required("uidAttrName", "body", m.UIDAttrName); err != nil {
		return err
	}

	return nil
}

func (m *AdCustomAttributesTypeParams) validateGidAttrName(formats strfmt.Registry) error {

	if err := validate.Required("gidAttrName", "body", m.GidAttrName); err != nil {
		return err
	}

	return nil
}

func (m *AdCustomAttributesTypeParams) validateFallbackOption(formats strfmt.Registry) error {

	if err := validate.Required("fallbackOption", "body", m.FallbackOption); err != nil {
		return err
	}

	if m.FallbackOption != nil {
		if err := m.FallbackOption.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fallbackOption")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("fallbackOption")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this ad custom attributes type params based on the context it is used
func (m *AdCustomAttributesTypeParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateFallbackOption(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdCustomAttributesTypeParams) contextValidateFallbackOption(ctx context.Context, formats strfmt.Registry) error {

	if m.FallbackOption != nil {

		if err := m.FallbackOption.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fallbackOption")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("fallbackOption")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdCustomAttributesTypeParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdCustomAttributesTypeParams) UnmarshalBinary(b []byte) error {
	var res AdCustomAttributesTypeParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
