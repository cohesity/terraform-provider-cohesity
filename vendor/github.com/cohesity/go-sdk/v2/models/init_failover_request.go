// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InitFailoverRequest Init Failover Request.
//
// Specifies the failover request parameters to initiate a failover.
//
// swagger:model InitFailoverRequest
type InitFailoverRequest struct {

	// Specifies the details about source cluster involved in the failover operation.
	SourceCluster *FailoverSourceCluster `json:"sourceCluster,omitempty"`

	// Specifies the details about replcaition cluster involved in the failover operation.
	ReplicationCluster *FailoverReplicaCluster `json:"replicationCluster,omitempty"`

	// If this field is specified then protection groups will be looked up only for this specific environment
	// Enum: ["kVMware","kHyperV","kVCD","kAzure","kGCP","kKVM","kAcropolis","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kPhysical","kPhysicalFiles","kGPFS","kElastifile","kNetapp","kGenericNas","kIsilon","kFlashBlade","kPure","kIbmFlashSystem","kSQL","kExchange","kAD","kOracle","kView","kRemoteAdapter","kO365","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kKubernetes","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kSAPHANA","kUDA","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]
	ProtectionGroupEnvironment *string `json:"protectionGroupEnvironment,omitempty"`
}

// Validate validates this init failover request
func (m *InitFailoverRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSourceCluster(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReplicationCluster(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtectionGroupEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InitFailoverRequest) validateSourceCluster(formats strfmt.Registry) error {
	if swag.IsZero(m.SourceCluster) { // not required
		return nil
	}

	if m.SourceCluster != nil {
		if err := m.SourceCluster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sourceCluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("sourceCluster")
			}
			return err
		}
	}

	return nil
}

func (m *InitFailoverRequest) validateReplicationCluster(formats strfmt.Registry) error {
	if swag.IsZero(m.ReplicationCluster) { // not required
		return nil
	}

	if m.ReplicationCluster != nil {
		if err := m.ReplicationCluster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("replicationCluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("replicationCluster")
			}
			return err
		}
	}

	return nil
}

var initFailoverRequestTypeProtectionGroupEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kVCD","kAzure","kGCP","kKVM","kAcropolis","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAzureNative","kAzureSQL","kAzureSnapshotManager","kPhysical","kPhysicalFiles","kGPFS","kElastifile","kNetapp","kGenericNas","kIsilon","kFlashBlade","kPure","kIbmFlashSystem","kSQL","kExchange","kAD","kOracle","kView","kRemoteAdapter","kO365","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kO365Sharepoint","kKubernetes","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kSAPHANA","kUDA","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		initFailoverRequestTypeProtectionGroupEnvironmentPropEnum = append(initFailoverRequestTypeProtectionGroupEnvironmentPropEnum, v)
	}
}

const (

	// InitFailoverRequestProtectionGroupEnvironmentKVMware captures enum value "kVMware"
	InitFailoverRequestProtectionGroupEnvironmentKVMware string = "kVMware"

	// InitFailoverRequestProtectionGroupEnvironmentKHyperV captures enum value "kHyperV"
	InitFailoverRequestProtectionGroupEnvironmentKHyperV string = "kHyperV"

	// InitFailoverRequestProtectionGroupEnvironmentKVCD captures enum value "kVCD"
	InitFailoverRequestProtectionGroupEnvironmentKVCD string = "kVCD"

	// InitFailoverRequestProtectionGroupEnvironmentKAzure captures enum value "kAzure"
	InitFailoverRequestProtectionGroupEnvironmentKAzure string = "kAzure"

	// InitFailoverRequestProtectionGroupEnvironmentKGCP captures enum value "kGCP"
	InitFailoverRequestProtectionGroupEnvironmentKGCP string = "kGCP"

	// InitFailoverRequestProtectionGroupEnvironmentKKVM captures enum value "kKVM"
	InitFailoverRequestProtectionGroupEnvironmentKKVM string = "kKVM"

	// InitFailoverRequestProtectionGroupEnvironmentKAcropolis captures enum value "kAcropolis"
	InitFailoverRequestProtectionGroupEnvironmentKAcropolis string = "kAcropolis"

	// InitFailoverRequestProtectionGroupEnvironmentKAWS captures enum value "kAWS"
	InitFailoverRequestProtectionGroupEnvironmentKAWS string = "kAWS"

	// InitFailoverRequestProtectionGroupEnvironmentKAWSNative captures enum value "kAWSNative"
	InitFailoverRequestProtectionGroupEnvironmentKAWSNative string = "kAWSNative"

	// InitFailoverRequestProtectionGroupEnvironmentKAwsS3 captures enum value "kAwsS3"
	InitFailoverRequestProtectionGroupEnvironmentKAwsS3 string = "kAwsS3"

	// InitFailoverRequestProtectionGroupEnvironmentKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	InitFailoverRequestProtectionGroupEnvironmentKAWSSnapshotManager string = "kAWSSnapshotManager"

	// InitFailoverRequestProtectionGroupEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	InitFailoverRequestProtectionGroupEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// InitFailoverRequestProtectionGroupEnvironmentKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	InitFailoverRequestProtectionGroupEnvironmentKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// InitFailoverRequestProtectionGroupEnvironmentKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	InitFailoverRequestProtectionGroupEnvironmentKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// InitFailoverRequestProtectionGroupEnvironmentKAwsRDSPostgres captures enum value "kAwsRDSPostgres"
	InitFailoverRequestProtectionGroupEnvironmentKAwsRDSPostgres string = "kAwsRDSPostgres"

	// InitFailoverRequestProtectionGroupEnvironmentKAwsAuroraPostgres captures enum value "kAwsAuroraPostgres"
	InitFailoverRequestProtectionGroupEnvironmentKAwsAuroraPostgres string = "kAwsAuroraPostgres"

	// InitFailoverRequestProtectionGroupEnvironmentKAzureNative captures enum value "kAzureNative"
	InitFailoverRequestProtectionGroupEnvironmentKAzureNative string = "kAzureNative"

	// InitFailoverRequestProtectionGroupEnvironmentKAzureSQL captures enum value "kAzureSQL"
	InitFailoverRequestProtectionGroupEnvironmentKAzureSQL string = "kAzureSQL"

	// InitFailoverRequestProtectionGroupEnvironmentKAzureSnapshotManager captures enum value "kAzureSnapshotManager"
	InitFailoverRequestProtectionGroupEnvironmentKAzureSnapshotManager string = "kAzureSnapshotManager"

	// InitFailoverRequestProtectionGroupEnvironmentKPhysical captures enum value "kPhysical"
	InitFailoverRequestProtectionGroupEnvironmentKPhysical string = "kPhysical"

	// InitFailoverRequestProtectionGroupEnvironmentKPhysicalFiles captures enum value "kPhysicalFiles"
	InitFailoverRequestProtectionGroupEnvironmentKPhysicalFiles string = "kPhysicalFiles"

	// InitFailoverRequestProtectionGroupEnvironmentKGPFS captures enum value "kGPFS"
	InitFailoverRequestProtectionGroupEnvironmentKGPFS string = "kGPFS"

	// InitFailoverRequestProtectionGroupEnvironmentKElastifile captures enum value "kElastifile"
	InitFailoverRequestProtectionGroupEnvironmentKElastifile string = "kElastifile"

	// InitFailoverRequestProtectionGroupEnvironmentKNetapp captures enum value "kNetapp"
	InitFailoverRequestProtectionGroupEnvironmentKNetapp string = "kNetapp"

	// InitFailoverRequestProtectionGroupEnvironmentKGenericNas captures enum value "kGenericNas"
	InitFailoverRequestProtectionGroupEnvironmentKGenericNas string = "kGenericNas"

	// InitFailoverRequestProtectionGroupEnvironmentKIsilon captures enum value "kIsilon"
	InitFailoverRequestProtectionGroupEnvironmentKIsilon string = "kIsilon"

	// InitFailoverRequestProtectionGroupEnvironmentKFlashBlade captures enum value "kFlashBlade"
	InitFailoverRequestProtectionGroupEnvironmentKFlashBlade string = "kFlashBlade"

	// InitFailoverRequestProtectionGroupEnvironmentKPure captures enum value "kPure"
	InitFailoverRequestProtectionGroupEnvironmentKPure string = "kPure"

	// InitFailoverRequestProtectionGroupEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	InitFailoverRequestProtectionGroupEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// InitFailoverRequestProtectionGroupEnvironmentKSQL captures enum value "kSQL"
	InitFailoverRequestProtectionGroupEnvironmentKSQL string = "kSQL"

	// InitFailoverRequestProtectionGroupEnvironmentKExchange captures enum value "kExchange"
	InitFailoverRequestProtectionGroupEnvironmentKExchange string = "kExchange"

	// InitFailoverRequestProtectionGroupEnvironmentKAD captures enum value "kAD"
	InitFailoverRequestProtectionGroupEnvironmentKAD string = "kAD"

	// InitFailoverRequestProtectionGroupEnvironmentKOracle captures enum value "kOracle"
	InitFailoverRequestProtectionGroupEnvironmentKOracle string = "kOracle"

	// InitFailoverRequestProtectionGroupEnvironmentKView captures enum value "kView"
	InitFailoverRequestProtectionGroupEnvironmentKView string = "kView"

	// InitFailoverRequestProtectionGroupEnvironmentKRemoteAdapter captures enum value "kRemoteAdapter"
	InitFailoverRequestProtectionGroupEnvironmentKRemoteAdapter string = "kRemoteAdapter"

	// InitFailoverRequestProtectionGroupEnvironmentKO365 captures enum value "kO365"
	InitFailoverRequestProtectionGroupEnvironmentKO365 string = "kO365"

	// InitFailoverRequestProtectionGroupEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	InitFailoverRequestProtectionGroupEnvironmentKO365PublicFolders string = "kO365PublicFolders"

	// InitFailoverRequestProtectionGroupEnvironmentKO365Teams captures enum value "kO365Teams"
	InitFailoverRequestProtectionGroupEnvironmentKO365Teams string = "kO365Teams"

	// InitFailoverRequestProtectionGroupEnvironmentKO365Group captures enum value "kO365Group"
	InitFailoverRequestProtectionGroupEnvironmentKO365Group string = "kO365Group"

	// InitFailoverRequestProtectionGroupEnvironmentKO365Exchange captures enum value "kO365Exchange"
	InitFailoverRequestProtectionGroupEnvironmentKO365Exchange string = "kO365Exchange"

	// InitFailoverRequestProtectionGroupEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	InitFailoverRequestProtectionGroupEnvironmentKO365OneDrive string = "kO365OneDrive"

	// InitFailoverRequestProtectionGroupEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	InitFailoverRequestProtectionGroupEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// InitFailoverRequestProtectionGroupEnvironmentKKubernetes captures enum value "kKubernetes"
	InitFailoverRequestProtectionGroupEnvironmentKKubernetes string = "kKubernetes"

	// InitFailoverRequestProtectionGroupEnvironmentKCassandra captures enum value "kCassandra"
	InitFailoverRequestProtectionGroupEnvironmentKCassandra string = "kCassandra"

	// InitFailoverRequestProtectionGroupEnvironmentKMongoDB captures enum value "kMongoDB"
	InitFailoverRequestProtectionGroupEnvironmentKMongoDB string = "kMongoDB"

	// InitFailoverRequestProtectionGroupEnvironmentKCouchbase captures enum value "kCouchbase"
	InitFailoverRequestProtectionGroupEnvironmentKCouchbase string = "kCouchbase"

	// InitFailoverRequestProtectionGroupEnvironmentKHdfs captures enum value "kHdfs"
	InitFailoverRequestProtectionGroupEnvironmentKHdfs string = "kHdfs"

	// InitFailoverRequestProtectionGroupEnvironmentKHive captures enum value "kHive"
	InitFailoverRequestProtectionGroupEnvironmentKHive string = "kHive"

	// InitFailoverRequestProtectionGroupEnvironmentKHBase captures enum value "kHBase"
	InitFailoverRequestProtectionGroupEnvironmentKHBase string = "kHBase"

	// InitFailoverRequestProtectionGroupEnvironmentKSAPHANA captures enum value "kSAPHANA"
	InitFailoverRequestProtectionGroupEnvironmentKSAPHANA string = "kSAPHANA"

	// InitFailoverRequestProtectionGroupEnvironmentKUDA captures enum value "kUDA"
	InitFailoverRequestProtectionGroupEnvironmentKUDA string = "kUDA"

	// InitFailoverRequestProtectionGroupEnvironmentKSfdc captures enum value "kSfdc"
	InitFailoverRequestProtectionGroupEnvironmentKSfdc string = "kSfdc"

	// InitFailoverRequestProtectionGroupEnvironmentKO365ExchangeCSM captures enum value "kO365ExchangeCSM"
	InitFailoverRequestProtectionGroupEnvironmentKO365ExchangeCSM string = "kO365ExchangeCSM"

	// InitFailoverRequestProtectionGroupEnvironmentKO365OneDriveCSM captures enum value "kO365OneDriveCSM"
	InitFailoverRequestProtectionGroupEnvironmentKO365OneDriveCSM string = "kO365OneDriveCSM"

	// InitFailoverRequestProtectionGroupEnvironmentKO365SharepointCSM captures enum value "kO365SharepointCSM"
	InitFailoverRequestProtectionGroupEnvironmentKO365SharepointCSM string = "kO365SharepointCSM"
)

// prop value enum
func (m *InitFailoverRequest) validateProtectionGroupEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, initFailoverRequestTypeProtectionGroupEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InitFailoverRequest) validateProtectionGroupEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectionGroupEnvironment) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectionGroupEnvironmentEnum("protectionGroupEnvironment", "body", *m.ProtectionGroupEnvironment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this init failover request based on the context it is used
func (m *InitFailoverRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSourceCluster(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateReplicationCluster(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InitFailoverRequest) contextValidateSourceCluster(ctx context.Context, formats strfmt.Registry) error {

	if m.SourceCluster != nil {

		if swag.IsZero(m.SourceCluster) { // not required
			return nil
		}

		if err := m.SourceCluster.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sourceCluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("sourceCluster")
			}
			return err
		}
	}

	return nil
}

func (m *InitFailoverRequest) contextValidateReplicationCluster(ctx context.Context, formats strfmt.Registry) error {

	if m.ReplicationCluster != nil {

		if swag.IsZero(m.ReplicationCluster) { // not required
			return nil
		}

		if err := m.ReplicationCluster.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("replicationCluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("replicationCluster")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InitFailoverRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InitFailoverRequest) UnmarshalBinary(b []byte) error {
	var res InitFailoverRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
