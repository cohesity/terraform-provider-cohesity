// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DataUsageStats Data Usage Statistics.
//
// Specifies the data usage metric of the data stored on the Cohesity
// Cluster or Storage Domains (View Boxes).
//
// swagger:model DataUsageStats
type DataUsageStats struct {

	// Specifies the total data written on cloud tiers, as computed by the
	// Cohesity Cluster.
	CloudDataWrittenBytes *int64 `json:"cloudDataWrittenBytes,omitempty"`

	// Specifies Timestamp of CloudDataWrittenBytes.
	CloudDataWrittenBytesTimestampUsec *int64 `json:"cloudDataWrittenBytesTimestampUsec,omitempty"`

	// Specifies the total cloud capacity, as computed by the Cohesity Cluster,
	// after the size of the data has been reduced by change-block tracking,
	// compression and deduplication.
	CloudTotalPhysicalUsageBytes *int64 `json:"cloudTotalPhysicalUsageBytes,omitempty"`

	// Specifies Timestamp of CloudTotalPhysicalUsageBytes.
	CloudTotalPhysicalUsageBytesTimestampUsec *int64 `json:"cloudTotalPhysicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the data read from the protected objects by the Cohesity
	// Cluster before any data reduction using deduplication and compression.
	DataInBytes *int64 `json:"dataInBytes,omitempty"`

	// Specifies the size of the data has been reduced by change-block
	// tracking and deduplication but before compression or data is replicated to
	// other nodes as per RF or Erasure Coding policy.
	DataInBytesAfterDedup *int64 `json:"dataInBytesAfterDedup,omitempty"`

	// Specifies Timestamp of DataInBytesAfterDedup.
	DataInBytesAfterDedupTimestampUsec *int64 `json:"dataInBytesAfterDedupTimestampUsec,omitempty"`

	// Specifies Timestamp of DataInBytes.
	DataInBytesTimestampUsec *int64 `json:"dataInBytesTimestampUsec,omitempty"`

	// Specifies the logical data used by Data Protect on Cohesity cluster.
	DataProtectLogicalUsageBytes *int64 `json:"dataProtectLogicalUsageBytes,omitempty"`

	// Specifies Timestamp of DataProtectLogicalUsageBytes.
	DataProtectLogicalUsageBytesTimestampUsec *int64 `json:"dataProtectLogicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the physical data used by Data Protect on Cohesity cluster.
	DataProtectPhysicalUsageBytes *int64 `json:"dataProtectPhysicalUsageBytes,omitempty"`

	// Specifies Timestamp of DataProtectPhysicalUsageBytes.
	DataProtectPhysicalUsageBytesTimestampUsec *int64 `json:"dataProtectPhysicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the data written after it has been reduced by deduplication
	// and compression. This does not include resiliency impact.
	DataWrittenBytes *int64 `json:"dataWrittenBytes,omitempty"`

	// Specifies Timestamp of DataWrittenBytes.
	DataWrittenBytesTimestampUsec *int64 `json:"dataWrittenBytesTimestampUsec,omitempty"`

	// Specifies the logical data used by File services on Cohesity cluster.
	FileServicesLogicalUsageBytes *int64 `json:"fileServicesLogicalUsageBytes,omitempty"`

	// Specifies Timestamp of FileServicesLogicalUsageBytes.
	FileServicesLogicalUsageBytesTimestampUsec *int64 `json:"fileServicesLogicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the physical data used by File services on Cohesity cluster.
	FileServicesPhysicalUsageBytes *int64 `json:"fileServicesPhysicalUsageBytes,omitempty"`

	// Specifies Timestamp of FileServicesPhysicalUsageBytes.
	FileServicesPhysicalUsageBytesTimestampUsec *int64 `json:"fileServicesPhysicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the total data written on local tiers, as computed by the
	// Cohesity Cluster, after the size of the data has been reduced by
	// change-block tracking, deduplication and compression. This does not
	// include resiliency impact.
	LocalDataWrittenBytes *int64 `json:"localDataWrittenBytes,omitempty"`

	// Specifies Timestamp of LocalDataWrittenBytes.
	LocalDataWrittenBytesTimestampUsec *int64 `json:"localDataWrittenBytesTimestampUsec,omitempty"`

	// Specifies the size of the data has been replicated to other nodes as per
	// RF or Erasure Coding policy.
	LocalTierResiliencyImpactBytes *int64 `json:"localTierResiliencyImpactBytes,omitempty"`

	// Specifies Timestamp of LocalTierResiliencyImpactBytes.
	LocalTierResiliencyImpactBytesTimestampUsec *int64 `json:"localTierResiliencyImpactBytesTimestampUsec,omitempty"`

	// Specifies the total local capacity, as computed by the Cohesity Cluster,
	// after the size of the data has been reduced by change-block tracking,
	// compression and deduplication.
	LocalTotalPhysicalUsageBytes *int64 `json:"localTotalPhysicalUsageBytes,omitempty"`

	// Specifies Timestamp of LocalTotalPhysicalUsageBytes.
	LocalTotalPhysicalUsageBytesTimestampUsec *int64 `json:"localTotalPhysicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the logical usage as computed by the Cohesity Cluster. This
	// field is computed on a same frequency as 'StorageConsumedBytes',
	// and it may not be the latest value. It is used to compute reduction ratio.
	OutdatedLogicalUsageBytes *int64 `json:"outdatedLogicalUsageBytes,omitempty"`

	// Specifies Timestamp of OutdatedLogicalUsageBytes.
	OutdatedLogicalUsageBytesTimestampUsec *int64 `json:"outdatedLogicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the total capacity, as computed by the Cohesity Cluster,
	// after the size of the data has been reduced by change-block tracking,
	// compression and deduplication. This includes resiliency impact.
	StorageConsumedBytes *int64 `json:"storageConsumedBytes,omitempty"`

	// Specifies Timestamp of StorageConsumedBytes.
	StorageConsumedBytesTimestampUsec *int64 `json:"storageConsumedBytesTimestampUsec,omitempty"`

	// Provides the combined data residing on protected objects.
	// The size of data before reduction by deduplication and compression.
	TotalLogicalUsageBytes *int64 `json:"totalLogicalUsageBytes,omitempty"`

	// Specifies Timestamp of TotalLogicalUsageBytes.
	TotalLogicalUsageBytesTimestampUsec *int64 `json:"totalLogicalUsageBytesTimestampUsec,omitempty"`

	// Specifies the unique physical data usage in bytes.
	UniquePhysicalDataBytes *int64 `json:"uniquePhysicalDataBytes,omitempty"`

	// Specifies the number of files.
	NumFiles *int64 `json:"numFiles,omitempty"`

	// Specifies the number of directories.
	NumDirectories *int64 `json:"numDirectories,omitempty"`
}

// Validate validates this data usage stats
func (m *DataUsageStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this data usage stats based on context it is used
func (m *DataUsageStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataUsageStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataUsageStats) UnmarshalBinary(b []byte) error {
	var res DataUsageStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
