// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// M365Params Specifies parameters of Microsoft 365 type snapshots.
//
// swagger:model M365Params
type M365Params struct {

	// Specifies the paramenters specific to Microsoft 365 Backup Storage.
	CsmParams *CSMParams `json:"csmParams,omitempty"`
}

// Validate validates this m365 params
func (m *M365Params) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCsmParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *M365Params) validateCsmParams(formats strfmt.Registry) error {
	if swag.IsZero(m.CsmParams) { // not required
		return nil
	}

	if m.CsmParams != nil {
		if err := m.CsmParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("csmParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("csmParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this m365 params based on the context it is used
func (m *M365Params) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCsmParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *M365Params) contextValidateCsmParams(ctx context.Context, formats strfmt.Registry) error {

	if m.CsmParams != nil {

		if swag.IsZero(m.CsmParams) { // not required
			return nil
		}

		if err := m.CsmParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("csmParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("csmParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *M365Params) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *M365Params) UnmarshalBinary(b []byte) error {
	var res M365Params
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
