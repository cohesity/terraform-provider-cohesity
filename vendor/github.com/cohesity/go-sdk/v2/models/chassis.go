// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Chassis Chassis specific response.
//
// Specifies information about hardware chassis.
//
// swagger:model Chassis
type Chassis struct {

	// Specifies the id of the chassis used to uniquely identify a chassis.
	ID *int64 `json:"id,omitempty"`

	// Specifies the hardware model of the chassis.
	HardwareModel *string `json:"hardwareModel,omitempty"`

	// Specifies the name of the chassis.
	Name *string `json:"name,omitempty"`

	// Specifies the serial number of the chassis.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Specifies list of ids of all the nodes in chassis.
	NodeIds []int64 `json:"nodeIds"`

	// Rack Id that this chassis belong to
	RackID *int64 `json:"rackId,omitempty"`
}

// Validate validates this chassis
func (m *Chassis) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this chassis based on context it is used
func (m *Chassis) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Chassis) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Chassis) UnmarshalBinary(b []byte) error {
	var res Chassis
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
