// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteAzureApplicationRequestParams Azure Application Deletion parameters
//
// Specifies the request parameters for deleting Azure Applications.
//
// swagger:model DeleteAzureApplicationRequestParams
type DeleteAzureApplicationRequestParams struct {

	// Specifies the access token for Azure Application access.
	// Required: true
	AccessToken *string `json:"accessToken"`

	// Specifies a list of Microsoft365 azure application already created within the Microsoft365 source.
	// Required: true
	// Min Items: 1
	AzureApplicationsList []*Office365AppCredentials `json:"azureApplicationsList"`

	// Specifies the Azure Active Directory tenant ID or domain name.
	// Required: true
	AzureTenantID *string `json:"azureTenantId"`
}

// Validate validates this delete azure application request params
func (m *DeleteAzureApplicationRequestParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzureApplicationsList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzureTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeleteAzureApplicationRequestParams) validateAccessToken(formats strfmt.Registry) error {

	if err := validate.Required("accessToken", "body", m.AccessToken); err != nil {
		return err
	}

	return nil
}

func (m *DeleteAzureApplicationRequestParams) validateAzureApplicationsList(formats strfmt.Registry) error {

	if err := validate.Required("azureApplicationsList", "body", m.AzureApplicationsList); err != nil {
		return err
	}

	iAzureApplicationsListSize := int64(len(m.AzureApplicationsList))

	if err := validate.MinItems("azureApplicationsList", "body", iAzureApplicationsListSize, 1); err != nil {
		return err
	}

	for i := 0; i < len(m.AzureApplicationsList); i++ {
		if swag.IsZero(m.AzureApplicationsList[i]) { // not required
			continue
		}

		if m.AzureApplicationsList[i] != nil {
			if err := m.AzureApplicationsList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("azureApplicationsList" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("azureApplicationsList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DeleteAzureApplicationRequestParams) validateAzureTenantID(formats strfmt.Registry) error {

	if err := validate.Required("azureTenantId", "body", m.AzureTenantID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this delete azure application request params based on the context it is used
func (m *DeleteAzureApplicationRequestParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAzureApplicationsList(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeleteAzureApplicationRequestParams) contextValidateAzureApplicationsList(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AzureApplicationsList); i++ {

		if m.AzureApplicationsList[i] != nil {

			if swag.IsZero(m.AzureApplicationsList[i]) { // not required
				return nil
			}

			if err := m.AzureApplicationsList[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("azureApplicationsList" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("azureApplicationsList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeleteAzureApplicationRequestParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeleteAzureApplicationRequestParams) UnmarshalBinary(b []byte) error {
	var res DeleteAzureApplicationRequestParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
