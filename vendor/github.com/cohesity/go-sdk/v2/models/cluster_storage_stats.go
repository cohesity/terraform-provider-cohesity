// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClusterStorageStats Specifies the Cluster storage stats.
//
// swagger:model ClusterStorageStats
type ClusterStorageStats struct {

	// Specifies the logical size of protected objects in bytes.
	DataProtectionLogicalUsageBytes *int64 `json:"dataProtectionLogicalUsageBytes,omitempty"`

	// Specifies the physical size of protected objects in bytes.
	DataProtectionPhysicalUsageBytes *int64 `json:"dataProtectionPhysicalUsageBytes,omitempty"`

	// Specifies the logical size consumed by file services in bytes.
	FileServicesLogicalUsageBytes *int64 `json:"fileServicesLogicalUsageBytes,omitempty"`

	// Specifies the physical size consumed by file services in bytes.
	FileServicesPhysicalUsageBytes *int64 `json:"fileServicesPhysicalUsageBytes,omitempty"`

	// Specifies the local storage currently in use on the cluster in bytes.
	LocalUsageBytes *int64 `json:"localUsageBytes,omitempty"`

	// Specifies the local storage currently available on the cluster in bytes.
	LocalAvailableBytes *int64 `json:"localAvailableBytes,omitempty"`

	// Specifies the total capacity of the cluster in bytes.
	TotalCapacityBytes *int64 `json:"totalCapacityBytes,omitempty"`
}

// Validate validates this cluster storage stats
func (m *ClusterStorageStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cluster storage stats based on context it is used
func (m *ClusterStorageStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterStorageStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterStorageStats) UnmarshalBinary(b []byte) error {
	var res ClusterStorageStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
