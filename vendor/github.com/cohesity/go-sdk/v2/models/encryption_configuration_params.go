// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EncryptionConfigurationParams Encryption Configuration params
//
// # Specifies the parameters the user wants to use when configuring encryption for the new Cluster
//
// swagger:model EncryptionConfigurationParams
type EncryptionConfigurationParams struct {

	// Specifies whether or not to enable software encryption
	EnableSoftwareEncryption *bool `json:"enableSoftwareEncryption,omitempty"`

	// Specifies whether or not to enable hardware encryption
	EnableHardwareEncryption *bool `json:"enableHardwareEncryption,omitempty"`

	// Specifies the rotation period for encryption keys in days
	RotationPeriod *int32 `json:"rotationPeriod,omitempty"`

	// Specifies whether or not to enable FIPS mode
	EnableFipsMode *bool `json:"enableFipsMode,omitempty"`
}

// Validate validates this encryption configuration params
func (m *EncryptionConfigurationParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this encryption configuration params based on context it is used
func (m *EncryptionConfigurationParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EncryptionConfigurationParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EncryptionConfigurationParams) UnmarshalBinary(b []byte) error {
	var res EncryptionConfigurationParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
