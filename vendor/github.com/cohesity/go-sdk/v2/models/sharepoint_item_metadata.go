// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharepointItemMetadata Info about a sharepoint item.
//
// swagger:model SharepointItemMetadata
type SharepointItemMetadata struct {

	// type of the sharepoint item
	// Enum: ["Unspecified","File","Directory","SiteDoclib","SiteList"]
	Type *string `json:"type,omitempty"`
}

// Validate validates this sharepoint item metadata
func (m *SharepointItemMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sharepointItemMetadataTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Unspecified","File","Directory","SiteDoclib","SiteList"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharepointItemMetadataTypeTypePropEnum = append(sharepointItemMetadataTypeTypePropEnum, v)
	}
}

const (

	// SharepointItemMetadataTypeUnspecified captures enum value "Unspecified"
	SharepointItemMetadataTypeUnspecified string = "Unspecified"

	// SharepointItemMetadataTypeFile captures enum value "File"
	SharepointItemMetadataTypeFile string = "File"

	// SharepointItemMetadataTypeDirectory captures enum value "Directory"
	SharepointItemMetadataTypeDirectory string = "Directory"

	// SharepointItemMetadataTypeSiteDoclib captures enum value "SiteDoclib"
	SharepointItemMetadataTypeSiteDoclib string = "SiteDoclib"

	// SharepointItemMetadataTypeSiteList captures enum value "SiteList"
	SharepointItemMetadataTypeSiteList string = "SiteList"
)

// prop value enum
func (m *SharepointItemMetadata) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, sharepointItemMetadataTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SharepointItemMetadata) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sharepoint item metadata based on context it is used
func (m *SharepointItemMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SharepointItemMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharepointItemMetadata) UnmarshalBinary(b []byte) error {
	var res SharepointItemMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
