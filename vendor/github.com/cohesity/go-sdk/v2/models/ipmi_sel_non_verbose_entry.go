// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpmiSelNonVerboseEntry Specifies each entry in the sel verbose response.
//
// swagger:model IpmiSelNonVerboseEntry
type IpmiSelNonVerboseEntry struct {

	// Specifies the ID corresponding to record in SEL(System Event Log) for given node.
	RecordID *string `json:"recordId,omitempty"`

	// Specifies the date on which the record is added to SEL. This is only returned in case of verbose = false.
	RecordDate *string `json:"recordDate,omitempty"`

	// Specifies the time at which the record is added to SEL. This is only returned in case of verbose = false.
	RecordTime *string `json:"recordTime,omitempty"`

	// Provides a short description related to sensor action. This is only returned in case of verbose = false.
	RecordEvent *string `json:"recordEvent,omitempty"`

	// Specifies whether the event is asserted or not. This is only returned in case of verbose = false.
	RecordAssertionType *string `json:"recordAssertionType,omitempty"`

	// Specifies a short description corresponding to the sensor event for which record is added to SEL.
	RecordDescription *string `json:"recordDescription,omitempty"`
}

// Validate validates this ipmi sel non verbose entry
func (m *IpmiSelNonVerboseEntry) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipmi sel non verbose entry based on context it is used
func (m *IpmiSelNonVerboseEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpmiSelNonVerboseEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpmiSelNonVerboseEntry) UnmarshalBinary(b []byte) error {
	var res IpmiSelNonVerboseEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
