// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PhysicalFileBackupPathParams physical file backup path params
//
// swagger:model PhysicalFileBackupPathParams
type PhysicalFileBackupPathParams struct {

	// Specifies a path to be included on the source. All paths under this path will be included unless they are specifically mentioned in excluded paths.
	// Required: true
	IncludedPath *string `json:"includedPath"`

	// Specifies a set of paths nested under the include path which should be excluded from the Protection Group.
	ExcludedPaths []string `json:"excludedPaths"`

	// Specifies whether to skip any nested volumes (both local and network) that are mounted under include path. Applicable only for windows sources.
	SkipNestedVolumes *bool `json:"skipNestedVolumes,omitempty"`
}

// Validate validates this physical file backup path params
func (m *PhysicalFileBackupPathParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIncludedPath(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PhysicalFileBackupPathParams) validateIncludedPath(formats strfmt.Registry) error {

	if err := validate.Required("includedPath", "body", m.IncludedPath); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this physical file backup path params based on context it is used
func (m *PhysicalFileBackupPathParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PhysicalFileBackupPathParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PhysicalFileBackupPathParams) UnmarshalBinary(b []byte) error {
	var res PhysicalFileBackupPathParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
