// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FreeDisk FreeDisk
//
// Specifies the details of a free disk.
//
// swagger:model FreeDisk
type FreeDisk struct {

	// Specifies the location of disk.
	Location *string `json:"location,omitempty"`

	// Specifies serial number of disk.
	// Required: true
	SerialNumber *string `json:"serialNumber"`

	// Specifies path of disk.
	Path *string `json:"path,omitempty"`

	// Size of disk.
	SizeInBytes *int64 `json:"sizeInBytes,omitempty"`
}

// Validate validates this free disk
func (m *FreeDisk) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSerialNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FreeDisk) validateSerialNumber(formats strfmt.Registry) error {

	if err := validate.Required("serialNumber", "body", m.SerialNumber); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this free disk based on context it is used
func (m *FreeDisk) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FreeDisk) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FreeDisk) UnmarshalBinary(b []byte) error {
	var res FreeDisk
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
