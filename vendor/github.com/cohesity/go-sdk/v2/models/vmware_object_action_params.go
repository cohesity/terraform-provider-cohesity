// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VmwareObjectActionParams Actions on VMware Objects
//
// Specifies the parameters to perform an action on VMware Objects.
//
// swagger:model VmwareObjectActionParams
type VmwareObjectActionParams struct {

	// Specifies the action on the Object.
	// Required: true
	// Enum: ["enableAppProtection","disableAppProtection","upgradeCdpIoFilter","uninstallCdpIoFilter","reEnableCDP"]
	Action *string `json:"action"`

	// Specifies the parameters to enable App Protection on VMware Object.
	EnableAppProtectionParams *VmwareObjectEnableAppProtectionParams `json:"enableAppProtectionParams,omitempty"`
}

// Validate validates this vmware object action params
func (m *VmwareObjectActionParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnableAppProtectionParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vmwareObjectActionParamsTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["enableAppProtection","disableAppProtection","upgradeCdpIoFilter","uninstallCdpIoFilter","reEnableCDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmwareObjectActionParamsTypeActionPropEnum = append(vmwareObjectActionParamsTypeActionPropEnum, v)
	}
}

const (

	// VmwareObjectActionParamsActionEnableAppProtection captures enum value "enableAppProtection"
	VmwareObjectActionParamsActionEnableAppProtection string = "enableAppProtection"

	// VmwareObjectActionParamsActionDisableAppProtection captures enum value "disableAppProtection"
	VmwareObjectActionParamsActionDisableAppProtection string = "disableAppProtection"

	// VmwareObjectActionParamsActionUpgradeCdpIoFilter captures enum value "upgradeCdpIoFilter"
	VmwareObjectActionParamsActionUpgradeCdpIoFilter string = "upgradeCdpIoFilter"

	// VmwareObjectActionParamsActionUninstallCdpIoFilter captures enum value "uninstallCdpIoFilter"
	VmwareObjectActionParamsActionUninstallCdpIoFilter string = "uninstallCdpIoFilter"

	// VmwareObjectActionParamsActionReEnableCDP captures enum value "reEnableCDP"
	VmwareObjectActionParamsActionReEnableCDP string = "reEnableCDP"
)

// prop value enum
func (m *VmwareObjectActionParams) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vmwareObjectActionParamsTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VmwareObjectActionParams) validateAction(formats strfmt.Registry) error {

	if err := validate.Required("action", "body", m.Action); err != nil {
		return err
	}

	// value enum
	if err := m.validateActionEnum("action", "body", *m.Action); err != nil {
		return err
	}

	return nil
}

func (m *VmwareObjectActionParams) validateEnableAppProtectionParams(formats strfmt.Registry) error {
	if swag.IsZero(m.EnableAppProtectionParams) { // not required
		return nil
	}

	if m.EnableAppProtectionParams != nil {
		if err := m.EnableAppProtectionParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("enableAppProtectionParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("enableAppProtectionParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this vmware object action params based on the context it is used
func (m *VmwareObjectActionParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateEnableAppProtectionParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VmwareObjectActionParams) contextValidateEnableAppProtectionParams(ctx context.Context, formats strfmt.Registry) error {

	if m.EnableAppProtectionParams != nil {

		if swag.IsZero(m.EnableAppProtectionParams) { // not required
			return nil
		}

		if err := m.EnableAppProtectionParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("enableAppProtectionParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("enableAppProtectionParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VmwareObjectActionParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareObjectActionParams) UnmarshalBinary(b []byte) error {
	var res VmwareObjectActionParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
