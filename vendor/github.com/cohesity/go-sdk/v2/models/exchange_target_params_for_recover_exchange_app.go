// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExchangeTargetParamsForRecoverExchangeApp Recover Exchange App params.
//
// Specifies the parameters to recover Exchange applications to an Exchange target.
//
// swagger:model ExchangeTargetParamsForRecoverExchangeApp
type ExchangeTargetParamsForRecoverExchangeApp struct {

	// Specifies the Recovered Object parameters.
	// Required: true
	Object *RecoverExchangeAppSnapshotParams `json:"object"`
}

// Validate validates this exchange target params for recover exchange app
func (m *ExchangeTargetParamsForRecoverExchangeApp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExchangeTargetParamsForRecoverExchangeApp) validateObject(formats strfmt.Registry) error {

	if err := validate.Required("object", "body", m.Object); err != nil {
		return err
	}

	if m.Object != nil {
		if err := m.Object.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this exchange target params for recover exchange app based on the context it is used
func (m *ExchangeTargetParamsForRecoverExchangeApp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExchangeTargetParamsForRecoverExchangeApp) contextValidateObject(ctx context.Context, formats strfmt.Registry) error {

	if m.Object != nil {

		if err := m.Object.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("object")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("object")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExchangeTargetParamsForRecoverExchangeApp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExchangeTargetParamsForRecoverExchangeApp) UnmarshalBinary(b []byte) error {
	var res ExchangeTargetParamsForRecoverExchangeApp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
