// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Office365UserOneDriveObjectProtectionParams Specifies the params to create a User OneDrive Object Protection.
//
// swagger:model Office365UserOneDriveObjectProtectionParams
type Office365UserOneDriveObjectProtectionParams struct {
	Office365ObjectProtectionCommonParams

	// Specifies filters to match OneDrive folders which should be excluded when backing up office365 onedrive source. Two kinds of filters are supported. a) prefix which always starts with '/'. b) posix which always starts with empty quotes(''). Regular expressions are not supported. If not specified, all the OneDrive will be protected.
	ExcludeFolders []string `json:"excludeFolders"`

	// Specifies the parameters specific to the protection of the Preservation Hold library.
	PreservationHoldLibraryParams *Office365PreservationHoldLibraryParams `json:"preservationHoldLibraryParams,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *Office365UserOneDriveObjectProtectionParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 Office365ObjectProtectionCommonParams
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.Office365ObjectProtectionCommonParams = aO0

	// AO1
	var dataAO1 struct {
		ExcludeFolders []string `json:"excludeFolders"`

		PreservationHoldLibraryParams *Office365PreservationHoldLibraryParams `json:"preservationHoldLibraryParams,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.ExcludeFolders = dataAO1.ExcludeFolders

	m.PreservationHoldLibraryParams = dataAO1.PreservationHoldLibraryParams

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m Office365UserOneDriveObjectProtectionParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.Office365ObjectProtectionCommonParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		ExcludeFolders []string `json:"excludeFolders"`

		PreservationHoldLibraryParams *Office365PreservationHoldLibraryParams `json:"preservationHoldLibraryParams,omitempty"`
	}

	dataAO1.ExcludeFolders = m.ExcludeFolders

	dataAO1.PreservationHoldLibraryParams = m.PreservationHoldLibraryParams

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this office365 user one drive object protection params
func (m *Office365UserOneDriveObjectProtectionParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with Office365ObjectProtectionCommonParams
	if err := m.Office365ObjectProtectionCommonParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreservationHoldLibraryParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Office365UserOneDriveObjectProtectionParams) validatePreservationHoldLibraryParams(formats strfmt.Registry) error {

	if swag.IsZero(m.PreservationHoldLibraryParams) { // not required
		return nil
	}

	if m.PreservationHoldLibraryParams != nil {
		if err := m.PreservationHoldLibraryParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preservationHoldLibraryParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preservationHoldLibraryParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this office365 user one drive object protection params based on the context it is used
func (m *Office365UserOneDriveObjectProtectionParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with Office365ObjectProtectionCommonParams
	if err := m.Office365ObjectProtectionCommonParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePreservationHoldLibraryParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Office365UserOneDriveObjectProtectionParams) contextValidatePreservationHoldLibraryParams(ctx context.Context, formats strfmt.Registry) error {

	if m.PreservationHoldLibraryParams != nil {

		if swag.IsZero(m.PreservationHoldLibraryParams) { // not required
			return nil
		}

		if err := m.PreservationHoldLibraryParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preservationHoldLibraryParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preservationHoldLibraryParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Office365UserOneDriveObjectProtectionParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Office365UserOneDriveObjectProtectionParams) UnmarshalBinary(b []byte) error {
	var res Office365UserOneDriveObjectProtectionParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
