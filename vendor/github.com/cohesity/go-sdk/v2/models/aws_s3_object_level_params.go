// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AwsS3ObjectLevelParams AWS S3 Object Level Params
//
// Specifies the Aws S3 object level settings for object protection.
//
// swagger:model AwsS3ObjectLevelParams
type AwsS3ObjectLevelParams struct {

	// Specifies the id of the object being protected. This can be a leaf level or non leaf level object.
	// Required: true
	ID *int64 `json:"id"`

	// Specifies the list of prefix paths included. Objects containing any of these prefixes in their path will be included. Among inclusion and exclusion, inclusion will take precedence.
	ObjectPrefixInclusions []string `json:"objectPrefixInclusions"`

	// Specifies the list of prefix paths excluded. Objects containing any of these prefixes in their path will be excluded.
	ObjectPrefixExclusions []string `json:"objectPrefixExclusions"`
}

// Validate validates this aws s3 object level params
func (m *AwsS3ObjectLevelParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsS3ObjectLevelParams) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this aws s3 object level params based on context it is used
func (m *AwsS3ObjectLevelParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AwsS3ObjectLevelParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsS3ObjectLevelParams) UnmarshalBinary(b []byte) error {
	var res AwsS3ObjectLevelParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
