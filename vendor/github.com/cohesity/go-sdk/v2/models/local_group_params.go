// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LocalGroupParams Specifies properties for LOCAL Cohesity group.
//
// swagger:model LocalGroupParams
type LocalGroupParams struct {

	// Specifies the LOCAL users which are part of this group.
	UserSids []string `json:"userSids,omitempty"`

	// Specifies the usernames of the LOCAL users which are part of this group.
	// Read Only: true
	Usernames []string `json:"usernames,omitempty"`
}

// Validate validates this local group params
func (m *LocalGroupParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this local group params based on the context it is used
func (m *LocalGroupParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateUsernames(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LocalGroupParams) contextValidateUsernames(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "usernames", "body", []string(m.Usernames)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LocalGroupParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LocalGroupParams) UnmarshalBinary(b []byte) error {
	var res LocalGroupParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
