// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ObjectProtectionGroupSummary Specifies a summary of a protection group protecting this object.
//
// swagger:model ObjectProtectionGroupSummary
type ObjectProtectionGroupSummary struct {

	// Specifies the protection group name.
	Name *string `json:"name,omitempty"`

	// Specifies the protection group id.
	ID *string `json:"id,omitempty"`

	// Specifies the protection type of the job if any.
	// Enum: ["kAgent","kNative","kSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsS3","kAwsRDSPostgresBackup","kAwsAuroraPostgres","kAwsRDSPostgres","kAzureSQL","kFile","kVolume"]
	ProtectionEnvType *string `json:"protectionEnvType,omitempty"`

	// Specifies the policy name for this group.
	PolicyName *string `json:"policyName,omitempty"`

	// Specifies the policy id for this group.
	PolicyID *string `json:"policyId,omitempty"`

	// Specifies the storage domain id of this group. Format is clusterId:clusterIncarnationId:storageDomainId.
	StorageDomainID *string `json:"storageDomainId,omitempty"`

	// Specifies the status of last local back up run.
	// Enum: ["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]
	LastBackupRunStatus *string `json:"lastBackupRunStatus,omitempty"`

	// Specifies the status of last archival run.
	// Enum: ["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]
	LastArchivalRunStatus *string `json:"lastArchivalRunStatus,omitempty"`

	// Specifies the status of last replication run.
	// Enum: ["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]
	LastReplicationRunStatus *string `json:"lastReplicationRunStatus,omitempty"`

	// Specifies if the sla is violated in last run.
	LastRunSLAViolated *bool `json:"lastRunSlaViolated,omitempty"`
}

// Validate validates this object protection group summary
func (m *ObjectProtectionGroupSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProtectionEnvType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastBackupRunStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastArchivalRunStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastReplicationRunStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var objectProtectionGroupSummaryTypeProtectionEnvTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAgent","kNative","kSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsS3","kAwsRDSPostgresBackup","kAwsAuroraPostgres","kAwsRDSPostgres","kAzureSQL","kFile","kVolume"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectProtectionGroupSummaryTypeProtectionEnvTypePropEnum = append(objectProtectionGroupSummaryTypeProtectionEnvTypePropEnum, v)
	}
}

const (

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAgent captures enum value "kAgent"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAgent string = "kAgent"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKNative captures enum value "kNative"
	ObjectProtectionGroupSummaryProtectionEnvTypeKNative string = "kNative"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKSnapshotManager captures enum value "kSnapshotManager"
	ObjectProtectionGroupSummaryProtectionEnvTypeKSnapshotManager string = "kSnapshotManager"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	ObjectProtectionGroupSummaryProtectionEnvTypeKRDSSnapshotManager string = "kRDSSnapshotManager"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAwsS3 captures enum value "kAwsS3"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAwsS3 string = "kAwsS3"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAwsAuroraPostgres captures enum value "kAwsAuroraPostgres"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAwsAuroraPostgres string = "kAwsAuroraPostgres"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAwsRDSPostgres captures enum value "kAwsRDSPostgres"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAwsRDSPostgres string = "kAwsRDSPostgres"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKAzureSQL captures enum value "kAzureSQL"
	ObjectProtectionGroupSummaryProtectionEnvTypeKAzureSQL string = "kAzureSQL"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKFile captures enum value "kFile"
	ObjectProtectionGroupSummaryProtectionEnvTypeKFile string = "kFile"

	// ObjectProtectionGroupSummaryProtectionEnvTypeKVolume captures enum value "kVolume"
	ObjectProtectionGroupSummaryProtectionEnvTypeKVolume string = "kVolume"
)

// prop value enum
func (m *ObjectProtectionGroupSummary) validateProtectionEnvTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, objectProtectionGroupSummaryTypeProtectionEnvTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ObjectProtectionGroupSummary) validateProtectionEnvType(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectionEnvType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProtectionEnvTypeEnum("protectionEnvType", "body", *m.ProtectionEnvType); err != nil {
		return err
	}

	return nil
}

var objectProtectionGroupSummaryTypeLastBackupRunStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectProtectionGroupSummaryTypeLastBackupRunStatusPropEnum = append(objectProtectionGroupSummaryTypeLastBackupRunStatusPropEnum, v)
	}
}

const (

	// ObjectProtectionGroupSummaryLastBackupRunStatusAccepted captures enum value "Accepted"
	ObjectProtectionGroupSummaryLastBackupRunStatusAccepted string = "Accepted"

	// ObjectProtectionGroupSummaryLastBackupRunStatusRunning captures enum value "Running"
	ObjectProtectionGroupSummaryLastBackupRunStatusRunning string = "Running"

	// ObjectProtectionGroupSummaryLastBackupRunStatusCanceled captures enum value "Canceled"
	ObjectProtectionGroupSummaryLastBackupRunStatusCanceled string = "Canceled"

	// ObjectProtectionGroupSummaryLastBackupRunStatusCanceling captures enum value "Canceling"
	ObjectProtectionGroupSummaryLastBackupRunStatusCanceling string = "Canceling"

	// ObjectProtectionGroupSummaryLastBackupRunStatusFailed captures enum value "Failed"
	ObjectProtectionGroupSummaryLastBackupRunStatusFailed string = "Failed"

	// ObjectProtectionGroupSummaryLastBackupRunStatusMissed captures enum value "Missed"
	ObjectProtectionGroupSummaryLastBackupRunStatusMissed string = "Missed"

	// ObjectProtectionGroupSummaryLastBackupRunStatusSucceeded captures enum value "Succeeded"
	ObjectProtectionGroupSummaryLastBackupRunStatusSucceeded string = "Succeeded"

	// ObjectProtectionGroupSummaryLastBackupRunStatusSucceededWithWarning captures enum value "SucceededWithWarning"
	ObjectProtectionGroupSummaryLastBackupRunStatusSucceededWithWarning string = "SucceededWithWarning"

	// ObjectProtectionGroupSummaryLastBackupRunStatusOnHold captures enum value "OnHold"
	ObjectProtectionGroupSummaryLastBackupRunStatusOnHold string = "OnHold"

	// ObjectProtectionGroupSummaryLastBackupRunStatusFinalizing captures enum value "Finalizing"
	ObjectProtectionGroupSummaryLastBackupRunStatusFinalizing string = "Finalizing"

	// ObjectProtectionGroupSummaryLastBackupRunStatusSkipped captures enum value "Skipped"
	ObjectProtectionGroupSummaryLastBackupRunStatusSkipped string = "Skipped"

	// ObjectProtectionGroupSummaryLastBackupRunStatusLegalHold captures enum value "LegalHold"
	ObjectProtectionGroupSummaryLastBackupRunStatusLegalHold string = "LegalHold"
)

// prop value enum
func (m *ObjectProtectionGroupSummary) validateLastBackupRunStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, objectProtectionGroupSummaryTypeLastBackupRunStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ObjectProtectionGroupSummary) validateLastBackupRunStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.LastBackupRunStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateLastBackupRunStatusEnum("lastBackupRunStatus", "body", *m.LastBackupRunStatus); err != nil {
		return err
	}

	return nil
}

var objectProtectionGroupSummaryTypeLastArchivalRunStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectProtectionGroupSummaryTypeLastArchivalRunStatusPropEnum = append(objectProtectionGroupSummaryTypeLastArchivalRunStatusPropEnum, v)
	}
}

const (

	// ObjectProtectionGroupSummaryLastArchivalRunStatusAccepted captures enum value "Accepted"
	ObjectProtectionGroupSummaryLastArchivalRunStatusAccepted string = "Accepted"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusRunning captures enum value "Running"
	ObjectProtectionGroupSummaryLastArchivalRunStatusRunning string = "Running"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusCanceled captures enum value "Canceled"
	ObjectProtectionGroupSummaryLastArchivalRunStatusCanceled string = "Canceled"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusCanceling captures enum value "Canceling"
	ObjectProtectionGroupSummaryLastArchivalRunStatusCanceling string = "Canceling"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusFailed captures enum value "Failed"
	ObjectProtectionGroupSummaryLastArchivalRunStatusFailed string = "Failed"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusMissed captures enum value "Missed"
	ObjectProtectionGroupSummaryLastArchivalRunStatusMissed string = "Missed"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusSucceeded captures enum value "Succeeded"
	ObjectProtectionGroupSummaryLastArchivalRunStatusSucceeded string = "Succeeded"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusSucceededWithWarning captures enum value "SucceededWithWarning"
	ObjectProtectionGroupSummaryLastArchivalRunStatusSucceededWithWarning string = "SucceededWithWarning"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusOnHold captures enum value "OnHold"
	ObjectProtectionGroupSummaryLastArchivalRunStatusOnHold string = "OnHold"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusFinalizing captures enum value "Finalizing"
	ObjectProtectionGroupSummaryLastArchivalRunStatusFinalizing string = "Finalizing"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusSkipped captures enum value "Skipped"
	ObjectProtectionGroupSummaryLastArchivalRunStatusSkipped string = "Skipped"

	// ObjectProtectionGroupSummaryLastArchivalRunStatusLegalHold captures enum value "LegalHold"
	ObjectProtectionGroupSummaryLastArchivalRunStatusLegalHold string = "LegalHold"
)

// prop value enum
func (m *ObjectProtectionGroupSummary) validateLastArchivalRunStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, objectProtectionGroupSummaryTypeLastArchivalRunStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ObjectProtectionGroupSummary) validateLastArchivalRunStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.LastArchivalRunStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateLastArchivalRunStatusEnum("lastArchivalRunStatus", "body", *m.LastArchivalRunStatus); err != nil {
		return err
	}

	return nil
}

var objectProtectionGroupSummaryTypeLastReplicationRunStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Accepted","Running","Canceled","Canceling","Failed","Missed","Succeeded","SucceededWithWarning","OnHold","Finalizing","Skipped","LegalHold"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectProtectionGroupSummaryTypeLastReplicationRunStatusPropEnum = append(objectProtectionGroupSummaryTypeLastReplicationRunStatusPropEnum, v)
	}
}

const (

	// ObjectProtectionGroupSummaryLastReplicationRunStatusAccepted captures enum value "Accepted"
	ObjectProtectionGroupSummaryLastReplicationRunStatusAccepted string = "Accepted"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusRunning captures enum value "Running"
	ObjectProtectionGroupSummaryLastReplicationRunStatusRunning string = "Running"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusCanceled captures enum value "Canceled"
	ObjectProtectionGroupSummaryLastReplicationRunStatusCanceled string = "Canceled"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusCanceling captures enum value "Canceling"
	ObjectProtectionGroupSummaryLastReplicationRunStatusCanceling string = "Canceling"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusFailed captures enum value "Failed"
	ObjectProtectionGroupSummaryLastReplicationRunStatusFailed string = "Failed"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusMissed captures enum value "Missed"
	ObjectProtectionGroupSummaryLastReplicationRunStatusMissed string = "Missed"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusSucceeded captures enum value "Succeeded"
	ObjectProtectionGroupSummaryLastReplicationRunStatusSucceeded string = "Succeeded"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusSucceededWithWarning captures enum value "SucceededWithWarning"
	ObjectProtectionGroupSummaryLastReplicationRunStatusSucceededWithWarning string = "SucceededWithWarning"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusOnHold captures enum value "OnHold"
	ObjectProtectionGroupSummaryLastReplicationRunStatusOnHold string = "OnHold"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusFinalizing captures enum value "Finalizing"
	ObjectProtectionGroupSummaryLastReplicationRunStatusFinalizing string = "Finalizing"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusSkipped captures enum value "Skipped"
	ObjectProtectionGroupSummaryLastReplicationRunStatusSkipped string = "Skipped"

	// ObjectProtectionGroupSummaryLastReplicationRunStatusLegalHold captures enum value "LegalHold"
	ObjectProtectionGroupSummaryLastReplicationRunStatusLegalHold string = "LegalHold"
)

// prop value enum
func (m *ObjectProtectionGroupSummary) validateLastReplicationRunStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, objectProtectionGroupSummaryTypeLastReplicationRunStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ObjectProtectionGroupSummary) validateLastReplicationRunStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.LastReplicationRunStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateLastReplicationRunStatusEnum("lastReplicationRunStatus", "body", *m.LastReplicationRunStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this object protection group summary based on context it is used
func (m *ObjectProtectionGroupSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ObjectProtectionGroupSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectProtectionGroupSummary) UnmarshalBinary(b []byte) error {
	var res ObjectProtectionGroupSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
