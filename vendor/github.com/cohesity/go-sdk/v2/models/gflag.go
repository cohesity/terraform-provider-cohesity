// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Gflag Gflag struct.
//
// Specifies the attributes of a service gflag.
//
// swagger:model Gflag
type Gflag struct {

	// Specifies the name of the gflag.
	Name string `json:"name,omitempty"`

	// Specifies the value of the gflag.
	Value string `json:"value,omitempty"`

	// Specifies the reason for setting the gflag.
	Reason *string `json:"reason,omitempty"`

	// Specifies timestamp when gflag was set.
	Timestamp *int64 `json:"timestamp,omitempty"`

	// Specifies product model this gflag set on.
	ProductModel string `json:"productModel,omitempty"`

	// If Clear is set to true, the GFlag is removed
	Clear *bool `json:"clear,omitempty"`
}

// Validate validates this gflag
func (m *Gflag) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this gflag based on context it is used
func (m *Gflag) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Gflag) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Gflag) UnmarshalBinary(b []byte) error {
	var res Gflag
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
