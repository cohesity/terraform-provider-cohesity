// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterIdentifier Cluster Identifier
//
// Specifies the information about a cluster.
//
// swagger:model ClusterIdentifier
type ClusterIdentifier struct {

	// Specifies the id of the cluster.
	ClusterID *int64 `json:"clusterId,omitempty"`

	// Specifies the incarnation id of the cluster.
	ClusterIncarnationID *int64 `json:"clusterIncarnationId,omitempty"`

	// Specifies the name of the cluster.
	// Read Only: true
	ClusterName *string `json:"clusterName,omitempty"`
}

// Validate validates this cluster identifier
func (m *ClusterIdentifier) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this cluster identifier based on the context it is used
func (m *ClusterIdentifier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateClusterName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterIdentifier) contextValidateClusterName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "clusterName", "body", m.ClusterName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClusterIdentifier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterIdentifier) UnmarshalBinary(b []byte) error {
	var res ClusterIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
