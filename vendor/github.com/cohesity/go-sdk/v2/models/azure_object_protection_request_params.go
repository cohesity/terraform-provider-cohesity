// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureObjectProtectionRequestParams Azure Object Protection Request Params.
//
// Specifies the parameters which are specific to Azure related Object Protection.
//
// swagger:model AzureObjectProtectionRequestParams
type AzureObjectProtectionRequestParams struct {
	AzureCommonObjectProtectionParams

	// Specifies the parameters which are specific to Azure related Protection using Azure native APIs.
	NativeProtectionTypeParams *AzureNativeObjectProtectionParams `json:"nativeProtectionTypeParams,omitempty"`

	// Specifies the parameters which are specific to Azure SQL related Protection using Azure native APIs.
	AzureSQLProtectionTypeParams *AzureSQLObjectProtectionParams `json:"azureSqlProtectionTypeParams,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *AzureObjectProtectionRequestParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 AzureCommonObjectProtectionParams
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.AzureCommonObjectProtectionParams = aO0

	// AO1
	var dataAO1 struct {
		NativeProtectionTypeParams *AzureNativeObjectProtectionParams `json:"nativeProtectionTypeParams,omitempty"`

		AzureSQLProtectionTypeParams *AzureSQLObjectProtectionParams `json:"azureSqlProtectionTypeParams,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.NativeProtectionTypeParams = dataAO1.NativeProtectionTypeParams

	m.AzureSQLProtectionTypeParams = dataAO1.AzureSQLProtectionTypeParams

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m AzureObjectProtectionRequestParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.AzureCommonObjectProtectionParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		NativeProtectionTypeParams *AzureNativeObjectProtectionParams `json:"nativeProtectionTypeParams,omitempty"`

		AzureSQLProtectionTypeParams *AzureSQLObjectProtectionParams `json:"azureSqlProtectionTypeParams,omitempty"`
	}

	dataAO1.NativeProtectionTypeParams = m.NativeProtectionTypeParams

	dataAO1.AzureSQLProtectionTypeParams = m.AzureSQLProtectionTypeParams

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this azure object protection request params
func (m *AzureObjectProtectionRequestParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with AzureCommonObjectProtectionParams
	if err := m.AzureCommonObjectProtectionParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNativeProtectionTypeParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzureSQLProtectionTypeParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureObjectProtectionRequestParams) validateNativeProtectionTypeParams(formats strfmt.Registry) error {

	if swag.IsZero(m.NativeProtectionTypeParams) { // not required
		return nil
	}

	if m.NativeProtectionTypeParams != nil {
		if err := m.NativeProtectionTypeParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nativeProtectionTypeParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("nativeProtectionTypeParams")
			}
			return err
		}
	}

	return nil
}

func (m *AzureObjectProtectionRequestParams) validateAzureSQLProtectionTypeParams(formats strfmt.Registry) error {

	if swag.IsZero(m.AzureSQLProtectionTypeParams) { // not required
		return nil
	}

	if m.AzureSQLProtectionTypeParams != nil {
		if err := m.AzureSQLProtectionTypeParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("azureSqlProtectionTypeParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("azureSqlProtectionTypeParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this azure object protection request params based on the context it is used
func (m *AzureObjectProtectionRequestParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with AzureCommonObjectProtectionParams
	if err := m.AzureCommonObjectProtectionParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateNativeProtectionTypeParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAzureSQLProtectionTypeParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureObjectProtectionRequestParams) contextValidateNativeProtectionTypeParams(ctx context.Context, formats strfmt.Registry) error {

	if m.NativeProtectionTypeParams != nil {

		if swag.IsZero(m.NativeProtectionTypeParams) { // not required
			return nil
		}

		if err := m.NativeProtectionTypeParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nativeProtectionTypeParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("nativeProtectionTypeParams")
			}
			return err
		}
	}

	return nil
}

func (m *AzureObjectProtectionRequestParams) contextValidateAzureSQLProtectionTypeParams(ctx context.Context, formats strfmt.Registry) error {

	if m.AzureSQLProtectionTypeParams != nil {

		if swag.IsZero(m.AzureSQLProtectionTypeParams) { // not required
			return nil
		}

		if err := m.AzureSQLProtectionTypeParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("azureSqlProtectionTypeParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("azureSqlProtectionTypeParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureObjectProtectionRequestParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureObjectProtectionRequestParams) UnmarshalBinary(b []byte) error {
	var res AzureObjectProtectionRequestParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
