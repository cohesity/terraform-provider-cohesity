// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ErasureCodingParams Erasure Coding Parameters
//
// Specifies parameters for erasure coding.
//
// swagger:model ErasureCodingParams
type ErasureCodingParams struct {

	// Specifies whether to enable erasure coding on a Storage Domain.
	// Required: true
	Enabled *bool `json:"enabled"`

	// Specifies the number of data stripes.
	// Required: true
	NumDataStripes *int32 `json:"numDataStripes"`

	// Specifies the number of coded stripes.
	// Required: true
	NumCodedStripes *int32 `json:"numCodedStripes"`

	// Specifies whether inline erasure coding is enabled. This field is appliciable only if enabled is set to true.
	InlineEnabled *bool `json:"inlineEnabled,omitempty"`

	// Specifies the time in seconds when erasure coding starts.
	DelaySecs *int32 `json:"delaySecs,omitempty"`
}

// Validate validates this erasure coding params
func (m *ErasureCodingParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumDataStripes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumCodedStripes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ErasureCodingParams) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *ErasureCodingParams) validateNumDataStripes(formats strfmt.Registry) error {

	if err := validate.Required("numDataStripes", "body", m.NumDataStripes); err != nil {
		return err
	}

	return nil
}

func (m *ErasureCodingParams) validateNumCodedStripes(formats strfmt.Registry) error {

	if err := validate.Required("numCodedStripes", "body", m.NumCodedStripes); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this erasure coding params based on context it is used
func (m *ErasureCodingParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ErasureCodingParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErasureCodingParams) UnmarshalBinary(b []byte) error {
	var res ErasureCodingParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
