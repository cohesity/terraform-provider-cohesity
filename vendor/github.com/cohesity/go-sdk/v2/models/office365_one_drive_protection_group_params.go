// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Office365OneDriveProtectionGroupParams Office 365 OneDrive Protection Group Parameters.
//
// Specifies the parameters which are specific to Office 365 OneDrive related Protection Groups.
//
// swagger:model Office365OneDriveProtectionGroupParams
type Office365OneDriveProtectionGroupParams struct {

	// Array of Excluded OneDrive folders. Specifies filters to match OneDrive folders which should be excluded when backing up Office 365 source. Two kinds of filters are supported. a) prefix which always starts with '/'. b) posix which always starts with empty quotes(''). Regular expressions are not supported. If not specified, all the mailboxes will be protected.
	ExcludeFolders []string `json:"excludeFolders"`

	// Specifies the parameters specific to the protection of the Preservation Hold library.
	PreservationHoldLibraryParams *Office365PreservationHoldLibraryParams `json:"preservationHoldLibraryParams,omitempty"`
}

// Validate validates this office365 one drive protection group params
func (m *Office365OneDriveProtectionGroupParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePreservationHoldLibraryParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Office365OneDriveProtectionGroupParams) validatePreservationHoldLibraryParams(formats strfmt.Registry) error {
	if swag.IsZero(m.PreservationHoldLibraryParams) { // not required
		return nil
	}

	if m.PreservationHoldLibraryParams != nil {
		if err := m.PreservationHoldLibraryParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preservationHoldLibraryParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preservationHoldLibraryParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this office365 one drive protection group params based on the context it is used
func (m *Office365OneDriveProtectionGroupParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePreservationHoldLibraryParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Office365OneDriveProtectionGroupParams) contextValidatePreservationHoldLibraryParams(ctx context.Context, formats strfmt.Registry) error {

	if m.PreservationHoldLibraryParams != nil {

		if swag.IsZero(m.PreservationHoldLibraryParams) { // not required
			return nil
		}

		if err := m.PreservationHoldLibraryParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preservationHoldLibraryParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("preservationHoldLibraryParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Office365OneDriveProtectionGroupParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Office365OneDriveProtectionGroupParams) UnmarshalBinary(b []byte) error {
	var res Office365OneDriveProtectionGroupParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
