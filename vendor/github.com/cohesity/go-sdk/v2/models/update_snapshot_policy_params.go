// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateSnapshotPolicyParams Snapshot Policy update request.
//
// Describes update snapshot policy request params.
//
// swagger:model UpdateSnapshotPolicyParams
type UpdateSnapshotPolicyParams struct {

	// Time of the day.
	Time *string `json:"time,omitempty"`

	// Time zone.
	TimeZone *string `json:"timeZone,omitempty"`

	// Days of the week.
	DaysOfWeek []string `json:"daysOfWeek"`

	// Days of the month.
	DaysOfMonth []int32 `json:"daysOfMonth"`

	// Suspend snapshot schedule policy.
	SuspendSchedulePolicy *bool `json:"suspendSchedulePolicy,omitempty"`

	// Number of days to keep the snapshot.
	NumOfDaysToKeep *int64 `json:"numOfDaysToKeep,omitempty"`

	// Number of snapshot versions to keep.
	NumOfVersionsToKeep *int64 `json:"numOfVersionsToKeep,omitempty"`

	// Suspend snapshot retention policy.
	SuspendRetentionPolicy *bool `json:"suspendRetentionPolicy,omitempty"`
}

// Validate validates this update snapshot policy params
func (m *UpdateSnapshotPolicyParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update snapshot policy params based on context it is used
func (m *UpdateSnapshotPolicyParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateSnapshotPolicyParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateSnapshotPolicyParams) UnmarshalBinary(b []byte) error {
	var res UpdateSnapshotPolicyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
