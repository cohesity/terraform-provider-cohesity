// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SystemAppStatusParams Specifies the status of each system app on the cluster.
//
// swagger:model SystemAppStatusParams
type SystemAppStatusParams struct {

	// Specifies the name of the system app.
	Name string `json:"name,omitempty"`

	// Specifies the service endpoint.
	ServiceEndpoint string `json:"serviceEndpoint,omitempty"`

	// Specifies the number of configured replicas.
	ConfiguredReplicas int32 `json:"configuredReplicas,omitempty"`

	// Specifies the number of ready replicas.
	ReadyReplicas int32 `json:"readyReplicas,omitempty"`

	// Specifies the number of available replicas.
	AvailableReplicas int32 `json:"availableReplicas,omitempty"`
}

// Validate validates this system app status params
func (m *SystemAppStatusParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this system app status params based on context it is used
func (m *SystemAppStatusParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SystemAppStatusParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemAppStatusParams) UnmarshalBinary(b []byte) error {
	var res SystemAppStatusParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
