// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OracleRangeMetaInfo Oracle Range Meta Info
//
// # Specifies Range related information for an oracle db
//
// swagger:model OracleRangeMetaInfo
type OracleRangeMetaInfo struct {

	// Specifies starting value of the range in time (usecs), SCN or sequence no.
	StartOfRange *int64 `json:"startOfRange,omitempty"`

	// Specifies ending value of the range in time (usecs), SCN or sequence no.
	EndOfRange *int64 `json:"endOfRange,omitempty"`

	// Specifies id of the Protection Group corresponding to this oracle range
	// Pattern: ^\d+:\d+:\d+$
	ProtectionGroupID *string `json:"protectionGroupId,omitempty"`

	// Specifies resetlogs identifier associated with the oracle range. Only applicable for ranges of type SCN and sequence no.
	ResetLogID *int64 `json:"resetLogId,omitempty"`

	// Specifies incarnation id associated with the oracle db for which the restore range belongs. Only applicable for ranges of type SCN and sequence no.
	IncarnationID *int64 `json:"incarnationId,omitempty"`

	// Specifies thread id associated with the oracle db for which the restore range belongs. Only applicable for ranges of type sequence no.
	ThreadID *int64 `json:"threadId,omitempty"`
}

// Validate validates this oracle range meta info
func (m *OracleRangeMetaInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProtectionGroupID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OracleRangeMetaInfo) validateProtectionGroupID(formats strfmt.Registry) error {
	if swag.IsZero(m.ProtectionGroupID) { // not required
		return nil
	}

	if err := validate.Pattern("protectionGroupId", "body", *m.ProtectionGroupID, `^\d+:\d+:\d+$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this oracle range meta info based on context it is used
func (m *OracleRangeMetaInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OracleRangeMetaInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OracleRangeMetaInfo) UnmarshalBinary(b []byte) error {
	var res OracleRangeMetaInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
