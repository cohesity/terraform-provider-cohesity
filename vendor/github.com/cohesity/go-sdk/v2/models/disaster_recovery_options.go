// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DisasterRecoveryOptions Oracle Disaster Recovery parameters.
//
// Specifies the parameters that are needed for Disaster Recovery of a database to its production configuration.
//
// swagger:model DisasterRecoveryOptions
type DisasterRecoveryOptions struct {

	// Specifies whether the recovery is of type Disaster Recovery.
	IsDisasterRecovery *bool `json:"isDisasterRecovery,omitempty"`

	// Specifies whether to cleanup the original database files or to do precheck to ensure no conflicting files exists. Recovery will fail if there are any conflicting files.
	CleanupOriginalDbFiles *bool `json:"cleanupOriginalDbFiles,omitempty"`

	// Whether to rename the database ASM directory. If false, the adapter will leave the database files and continue with clone and migration of datafiles. This might cause extra files left behind on the Oracle host from the existing database instance.
	RenameDatabaseAsmDirectory *bool `json:"renameDatabaseAsmDirectory,omitempty"`
}

// Validate validates this disaster recovery options
func (m *DisasterRecoveryOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this disaster recovery options based on context it is used
func (m *DisasterRecoveryOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DisasterRecoveryOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DisasterRecoveryOptions) UnmarshalBinary(b []byte) error {
	var res DisasterRecoveryOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
