// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonGcpExternalTargetParams GCP External Target Request Common Params.
//
// Specifies the common parameters which are specific to GCP related External Targets.
//
// swagger:model CommonGcpExternalTargetParams
type CommonGcpExternalTargetParams struct {

	// Specifies the bucket name of the external target.
	// Required: true
	BucketName *string `json:"bucketName"`

	// Specifies the project Id of the external target.
	// Required: true
	ProjectID *string `json:"projectId"`

	// Specifies the client email address of the external target.
	// Required: true
	ClientEmailAddress *string `json:"clientEmailAddress"`

	// Specifies the client private key of the external target.
	ClientPrivateKey *string `json:"clientPrivateKey,omitempty"`
}

// Validate validates this common gcp external target params
func (m *CommonGcpExternalTargetParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucketName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientEmailAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonGcpExternalTargetParams) validateBucketName(formats strfmt.Registry) error {

	if err := validate.Required("bucketName", "body", m.BucketName); err != nil {
		return err
	}

	return nil
}

func (m *CommonGcpExternalTargetParams) validateProjectID(formats strfmt.Registry) error {

	if err := validate.Required("projectId", "body", m.ProjectID); err != nil {
		return err
	}

	return nil
}

func (m *CommonGcpExternalTargetParams) validateClientEmailAddress(formats strfmt.Registry) error {

	if err := validate.Required("clientEmailAddress", "body", m.ClientEmailAddress); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this common gcp external target params based on context it is used
func (m *CommonGcpExternalTargetParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonGcpExternalTargetParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonGcpExternalTargetParams) UnmarshalBinary(b []byte) error {
	var res CommonGcpExternalTargetParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
