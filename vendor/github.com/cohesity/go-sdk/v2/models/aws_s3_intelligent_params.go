// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AwsS3IntelligentParams AWS S3 Intelligent Request Params.
//
// Specifies the parameters which are specific to AWS related External Targets with storage class S3 Intelligent.
//
// swagger:model AwsS3IntelligentParams
type AwsS3IntelligentParams struct {
	CommonAWSCategoryParams

	// aws cloud standard params
	AwsCloudStandardParams *AwsCloudStandardParams `json:"awsCloudStandardParams,omitempty"`

	// aws cloud gov params
	AwsCloudGovParams *AwsCloudGovParams `json:"awsCloudGovParams,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *AwsS3IntelligentParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 CommonAWSCategoryParams
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.CommonAWSCategoryParams = aO0

	// AO1
	var dataAO1 struct {
		AwsCloudStandardParams *AwsCloudStandardParams `json:"awsCloudStandardParams,omitempty"`

		AwsCloudGovParams *AwsCloudGovParams `json:"awsCloudGovParams,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.AwsCloudStandardParams = dataAO1.AwsCloudStandardParams

	m.AwsCloudGovParams = dataAO1.AwsCloudGovParams

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m AwsS3IntelligentParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.CommonAWSCategoryParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		AwsCloudStandardParams *AwsCloudStandardParams `json:"awsCloudStandardParams,omitempty"`

		AwsCloudGovParams *AwsCloudGovParams `json:"awsCloudGovParams,omitempty"`
	}

	dataAO1.AwsCloudStandardParams = m.AwsCloudStandardParams

	dataAO1.AwsCloudGovParams = m.AwsCloudGovParams

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this aws s3 intelligent params
func (m *AwsS3IntelligentParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CommonAWSCategoryParams
	if err := m.CommonAWSCategoryParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAwsCloudStandardParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAwsCloudGovParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsS3IntelligentParams) validateAwsCloudStandardParams(formats strfmt.Registry) error {

	if swag.IsZero(m.AwsCloudStandardParams) { // not required
		return nil
	}

	if m.AwsCloudStandardParams != nil {
		if err := m.AwsCloudStandardParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("awsCloudStandardParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("awsCloudStandardParams")
			}
			return err
		}
	}

	return nil
}

func (m *AwsS3IntelligentParams) validateAwsCloudGovParams(formats strfmt.Registry) error {

	if swag.IsZero(m.AwsCloudGovParams) { // not required
		return nil
	}

	if m.AwsCloudGovParams != nil {
		if err := m.AwsCloudGovParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("awsCloudGovParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("awsCloudGovParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this aws s3 intelligent params based on the context it is used
func (m *AwsS3IntelligentParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CommonAWSCategoryParams
	if err := m.CommonAWSCategoryParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAwsCloudStandardParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAwsCloudGovParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsS3IntelligentParams) contextValidateAwsCloudStandardParams(ctx context.Context, formats strfmt.Registry) error {

	if m.AwsCloudStandardParams != nil {

		if swag.IsZero(m.AwsCloudStandardParams) { // not required
			return nil
		}

		if err := m.AwsCloudStandardParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("awsCloudStandardParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("awsCloudStandardParams")
			}
			return err
		}
	}

	return nil
}

func (m *AwsS3IntelligentParams) contextValidateAwsCloudGovParams(ctx context.Context, formats strfmt.Registry) error {

	if m.AwsCloudGovParams != nil {

		if swag.IsZero(m.AwsCloudGovParams) { // not required
			return nil
		}

		if err := m.AwsCloudGovParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("awsCloudGovParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("awsCloudGovParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AwsS3IntelligentParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsS3IntelligentParams) UnmarshalBinary(b []byte) error {
	var res AwsS3IntelligentParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
