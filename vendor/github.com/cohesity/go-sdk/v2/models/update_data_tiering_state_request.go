// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateDataTieringStateRequest Update state of the data tiering groups.
//
// Specifies the parameters to perform an action on the data tiering
// groups for the specified Sources.
//
// swagger:model UpdateDataTieringStateRequest
type UpdateDataTieringStateRequest struct {

	// Specifies the action to be performed on all the specified data
	// tiering groups.
	// 'Pause'  specifies to pause.
	// 'Resume' specifies to resume.
	// Required: true
	// Enum: ["Pause","Resume"]
	Action *string `json:"action"`

	// Specifies a list of data tiering groups ids for
	// which the state should change.
	// Required: true
	// Min Items: 1
	// Unique: true
	Ids []string `json:"ids"`
}

// Validate validates this update data tiering state request
func (m *UpdateDataTieringStateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateDataTieringStateRequestTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Pause","Resume"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateDataTieringStateRequestTypeActionPropEnum = append(updateDataTieringStateRequestTypeActionPropEnum, v)
	}
}

const (

	// UpdateDataTieringStateRequestActionPause captures enum value "Pause"
	UpdateDataTieringStateRequestActionPause string = "Pause"

	// UpdateDataTieringStateRequestActionResume captures enum value "Resume"
	UpdateDataTieringStateRequestActionResume string = "Resume"
)

// prop value enum
func (m *UpdateDataTieringStateRequest) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateDataTieringStateRequestTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateDataTieringStateRequest) validateAction(formats strfmt.Registry) error {

	if err := validate.Required("action", "body", m.Action); err != nil {
		return err
	}

	// value enum
	if err := m.validateActionEnum("action", "body", *m.Action); err != nil {
		return err
	}

	return nil
}

func (m *UpdateDataTieringStateRequest) validateIds(formats strfmt.Registry) error {

	if err := validate.Required("ids", "body", m.Ids); err != nil {
		return err
	}

	iIdsSize := int64(len(m.Ids))

	if err := validate.MinItems("ids", "body", iIdsSize, 1); err != nil {
		return err
	}

	if err := validate.UniqueItems("ids", "body", m.Ids); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update data tiering state request based on context it is used
func (m *UpdateDataTieringStateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateDataTieringStateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateDataTieringStateRequest) UnmarshalBinary(b []byte) error {
	var res UpdateDataTieringStateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
