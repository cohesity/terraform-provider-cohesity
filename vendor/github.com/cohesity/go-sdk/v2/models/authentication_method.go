// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuthenticationMethod IBMCOS Authentication Method
//
// Specifies the authentication method for IBMCOS APIs.
//
// swagger:model AuthenticationMethod
type AuthenticationMethod struct {

	// Specifies the authentication type for IBMCOS APIs.
	// Required: true
	// Enum: ["kAPIKey","kTrustedProfile","kTrustedProfileWithS2SPolicy"]
	AuthenticationType *string `json:"authenticationType"`

	// Specifies the API key if the authenticationType is kApiKey.
	APIKey *string `json:"apiKey,omitempty"`

	// Specifies the trusted profile id if the authenticationType is kTrustedProfile.
	TrustedProfileID *string `json:"trustedProfileId,omitempty"`

	// Specifies the teneant CRN if the authenticationType is kTrustedProfileWithS2SPolicy.
	TenantCRN *string `json:"tenantCRN,omitempty"`
}

// Validate validates this authentication method
func (m *AuthenticationMethod) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthenticationType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var authenticationMethodTypeAuthenticationTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kAPIKey","kTrustedProfile","kTrustedProfileWithS2SPolicy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		authenticationMethodTypeAuthenticationTypePropEnum = append(authenticationMethodTypeAuthenticationTypePropEnum, v)
	}
}

const (

	// AuthenticationMethodAuthenticationTypeKAPIKey captures enum value "kAPIKey"
	AuthenticationMethodAuthenticationTypeKAPIKey string = "kAPIKey"

	// AuthenticationMethodAuthenticationTypeKTrustedProfile captures enum value "kTrustedProfile"
	AuthenticationMethodAuthenticationTypeKTrustedProfile string = "kTrustedProfile"

	// AuthenticationMethodAuthenticationTypeKTrustedProfileWithS2SPolicy captures enum value "kTrustedProfileWithS2SPolicy"
	AuthenticationMethodAuthenticationTypeKTrustedProfileWithS2SPolicy string = "kTrustedProfileWithS2SPolicy"
)

// prop value enum
func (m *AuthenticationMethod) validateAuthenticationTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, authenticationMethodTypeAuthenticationTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AuthenticationMethod) validateAuthenticationType(formats strfmt.Registry) error {

	if err := validate.Required("authenticationType", "body", m.AuthenticationType); err != nil {
		return err
	}

	// value enum
	if err := m.validateAuthenticationTypeEnum("authenticationType", "body", *m.AuthenticationType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this authentication method based on context it is used
func (m *AuthenticationMethod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuthenticationMethod) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthenticationMethod) UnmarshalBinary(b []byte) error {
	var res AuthenticationMethod
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
