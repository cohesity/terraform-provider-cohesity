// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpmiLanInfo Specifies the lan info for the ipmi.
//
// swagger:model IpmiLanInfo
type IpmiLanInfo struct {

	// Specifies the channel through which the IPMI interface communicates on the network.
	Channel *int32 `json:"channel,omitempty"`

	// Specifies the ipmi lan address source.
	IPAddrSource *string `json:"ipAddrSource,omitempty"`

	// Specifies the ip address for the given ipmi lan.
	LanIP *string `json:"lanIp,omitempty"`

	// Specifies the subnet mask for the given ipmi lan.
	SubnetMask *string `json:"subnetMask,omitempty"`

	// Specifies the default gateway ip for the given ipmi lan.
	DefaultGatewayIP *string `json:"defaultGatewayIp,omitempty"`

	// Specifies the default gateway mac address for the given ipmi lan.
	DefaultGatewayMac *string `json:"defaultGatewayMac,omitempty"`
}

// Validate validates this ipmi lan info
func (m *IpmiLanInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipmi lan info based on context it is used
func (m *IpmiLanInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpmiLanInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpmiLanInfo) UnmarshalBinary(b []byte) error {
	var res IpmiLanInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
