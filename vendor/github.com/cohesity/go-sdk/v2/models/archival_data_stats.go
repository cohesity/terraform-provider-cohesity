// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ArchivalDataStats Archival data statistics.
//
// Specifies statistics about archival data.
//
// swagger:model ArchivalDataStats
type ArchivalDataStats struct {

	// Specifies the logicalSizeBytes.
	LogicalSizeBytes *int64 `json:"logicalSizeBytes,omitempty"`

	// Specifies total logical bytes read for creating the snapshot.
	BytesRead *int64 `json:"bytesRead,omitempty"`

	// Specifies the logical bytes transferred.
	LogicalBytesTransferred *int64 `json:"logicalBytesTransferred,omitempty"`

	// Specifies the physical bytes transferred.
	PhysicalBytesTransferred *int64 `json:"physicalBytesTransferred,omitempty"`

	// Specifies the average rate of transfer in bytes per second.
	AvgLogicalTransferRateBps *int64 `json:"avgLogicalTransferRateBps,omitempty"`

	// Specifies whether the file system walk is done. Only applicable to file based backups.
	FileWalkDone *bool `json:"fileWalkDone,omitempty"`

	// Specifies the total number of file and directory entities visited in this backup. Only applicable to file based backups.
	TotalFileCount *int64 `json:"totalFileCount,omitempty"`

	// Specifies the total number of file and directory entities that are backed up in this run. Only applicable to file based backups.
	BackupFileCount *int64 `json:"backupFileCount,omitempty"`
}

// Validate validates this archival data stats
func (m *ArchivalDataStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this archival data stats based on context it is used
func (m *ArchivalDataStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ArchivalDataStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArchivalDataStats) UnmarshalBinary(b []byte) error {
	var res ArchivalDataStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
