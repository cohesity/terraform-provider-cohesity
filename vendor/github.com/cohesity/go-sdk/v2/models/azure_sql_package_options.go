// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureSQLPackageOptions Azure Object Protection & Recovery SQL Package Options.
//
// Specifies the SQL package parameters which are specific to Azure related Object Protection & Recovery.
//
// swagger:model AzureSqlPackageOptions
type AzureSQLPackageOptions struct {

	// Specifies the compression option supported by SQL package export command during Azure SQL backup.
	// Enum: ["Normal","Maximum","Fast","SuperFast","NotCompressed"]
	Compression *string `json:"compression,omitempty"`
}

// Validate validates this azure Sql package options
func (m *AzureSQLPackageOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompression(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureSqlPackageOptionsTypeCompressionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Normal","Maximum","Fast","SuperFast","NotCompressed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureSqlPackageOptionsTypeCompressionPropEnum = append(azureSqlPackageOptionsTypeCompressionPropEnum, v)
	}
}

const (

	// AzureSQLPackageOptionsCompressionNormal captures enum value "Normal"
	AzureSQLPackageOptionsCompressionNormal string = "Normal"

	// AzureSQLPackageOptionsCompressionMaximum captures enum value "Maximum"
	AzureSQLPackageOptionsCompressionMaximum string = "Maximum"

	// AzureSQLPackageOptionsCompressionFast captures enum value "Fast"
	AzureSQLPackageOptionsCompressionFast string = "Fast"

	// AzureSQLPackageOptionsCompressionSuperFast captures enum value "SuperFast"
	AzureSQLPackageOptionsCompressionSuperFast string = "SuperFast"

	// AzureSQLPackageOptionsCompressionNotCompressed captures enum value "NotCompressed"
	AzureSQLPackageOptionsCompressionNotCompressed string = "NotCompressed"
)

// prop value enum
func (m *AzureSQLPackageOptions) validateCompressionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureSqlPackageOptionsTypeCompressionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureSQLPackageOptions) validateCompression(formats strfmt.Registry) error {
	if swag.IsZero(m.Compression) { // not required
		return nil
	}

	// value enum
	if err := m.validateCompressionEnum("compression", "body", *m.Compression); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure Sql package options based on context it is used
func (m *AzureSQLPackageOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureSQLPackageOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureSQLPackageOptions) UnmarshalBinary(b []byte) error {
	var res AzureSQLPackageOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
