// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TargetOneDriveParam Specifies the target OneDrive to recover to.
//
// swagger:model TargetOneDriveParam
type TargetOneDriveParam struct {

	// Specifies the id of the target onedrive. Atleast one of id or primarySMTPAddress need to be defined. In case both id and primarySMTPAddress are defined then id takes precedence.
	ID *int64 `json:"id,omitempty"`

	// Specifies the name of the object.
	// Read Only: true
	Name *string `json:"name,omitempty"`

	// Specifies the path to the target folder.
	TargetFolderPath *string `json:"targetFolderPath,omitempty"`

	// Specifies the id of the domain for alternate domain recovery.
	ParentSourceID *int64 `json:"parentSourceId,omitempty"`

	// Specifies the primary SMTP address of the target onedrive. Atleast one of id or primarySMTPAddress needs to be defined. In case both id and primarySMTPAddress are defined then id takes precedence.
	PrimarySMTPAddress *string `json:"primarySmtpAddress,omitempty"`
}

// Validate validates this target one drive param
func (m *TargetOneDriveParam) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this target one drive param based on the context it is used
func (m *TargetOneDriveParam) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TargetOneDriveParam) contextValidateName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TargetOneDriveParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TargetOneDriveParam) UnmarshalBinary(b []byte) error {
	var res TargetOneDriveParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
