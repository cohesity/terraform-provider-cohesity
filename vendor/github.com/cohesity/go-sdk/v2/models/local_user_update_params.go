// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LocalUserUpdateParams Specifies properties for LOCAL cohesity user which are updatable.
//
// swagger:model LocalUserUpdateParams
type LocalUserUpdateParams struct {
	LocalUserParams

	// Specifies the current password of the user. This is required when a session user tries to update his own password.
	CurrentPassword *string `json:"currentPassword,omitempty"`

	LocalUserUpdateParamsAllOf2
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *LocalUserUpdateParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 LocalUserParams
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.LocalUserParams = aO0

	// AO1
	var dataAO1 struct {
		CurrentPassword *string `json:"currentPassword,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.CurrentPassword = dataAO1.CurrentPassword

	// AO2
	var aO2 LocalUserUpdateParamsAllOf2
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.LocalUserUpdateParamsAllOf2 = aO2

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m LocalUserUpdateParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	aO0, err := swag.WriteJSON(m.LocalUserParams)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		CurrentPassword *string `json:"currentPassword,omitempty"`
	}

	dataAO1.CurrentPassword = m.CurrentPassword

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	aO2, err := swag.WriteJSON(m.LocalUserUpdateParamsAllOf2)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this local user update params
func (m *LocalUserUpdateParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with LocalUserParams
	if err := m.LocalUserParams.Validate(formats); err != nil {
		res = append(res, err)
	}

	// validation for a type composition with LocalUserUpdateParamsAllOf2

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this local user update params based on the context it is used
func (m *LocalUserUpdateParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with LocalUserParams
	if err := m.LocalUserParams.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with LocalUserUpdateParamsAllOf2

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *LocalUserUpdateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LocalUserUpdateParams) UnmarshalBinary(b []byte) error {
	var res LocalUserUpdateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// LocalUserUpdateParamsAllOf2 local user update params all of2
//
// swagger:model LocalUserUpdateParamsAllOf2
type LocalUserUpdateParamsAllOf2 interface{}
