// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UsersDiscoveryParams Source Discovery parameter for kUser object type
//
// Specifies discovery params for User(mailbox/onedrive) entities. It should only be populated when the 'DiscoveryParams.discoverableObjectTypeList' includes 'kUsers' otherwise this will be ignored.
//
// swagger:model UsersDiscoveryParams
type UsersDiscoveryParams struct {

	// Specifies if office 365 users with valid mailboxes should be discovered or not.
	DiscoverUsersWithMailbox *bool `json:"discoverUsersWithMailbox,omitempty"`

	// Specifies if office 365 users with valid Onedrives should be discovered or not.
	DiscoverUsersWithOnedrive *bool `json:"discoverUsersWithOnedrive,omitempty"`

	// Specifies whether users' mailbox info including the provisioning status, mailbox type & in-place archival support will be fetched and processed.
	FetchMailboxInfo *bool `json:"fetchMailboxInfo,omitempty"`

	// Specifies whether users' onedrive info including the provisioning status & storage quota will be fetched and processed.
	FetchOneDriveInfo *bool `json:"fetchOneDriveInfo,omitempty"`

	// Specifies whether to skip processing user who have uninitialized OneDrive or are without MySite.
	SkipUsersWithoutMySite *bool `json:"skipUsersWithoutMySite,omitempty"`

	// Specifies whether users' chats should be backed up or not. If this is false or not specified users' chats backup will not be done.
	AllowChatsBackup *bool `json:"allowChatsBackup,omitempty"`
}

// Validate validates this users discovery params
func (m *UsersDiscoveryParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this users discovery params based on context it is used
func (m *UsersDiscoveryParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UsersDiscoveryParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UsersDiscoveryParams) UnmarshalBinary(b []byte) error {
	var res UsersDiscoveryParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
