// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DataAccessSnapshotResponseParams Snapshot Information
//
// Specifies the snapshot information.
//
// swagger:model DataAccessSnapshotResponseParams
type DataAccessSnapshotResponseParams struct {

	// Specifies the id of the object snapshot.
	ObjectID int64 `json:"objectId,omitempty"`

	// Specifies the environment of the source.
	Environment *string `json:"environment,omitempty"`

	// Specifies the start time of the run in micro seconds.
	RunStartTimeUsecs *int64 `json:"runStartTimeUsecs,omitempty"`

	// Specifies the timestamp (in microseconds. from epoch) for recovering to a point-in-time in the past.
	PointInTimeUsecs *int64 `json:"pointInTimeUsecs,omitempty"`

	// Specifies the id of the cluster vault.
	VaultID *int64 `json:"vaultId,omitempty"`
}

// Validate validates this data access snapshot response params
func (m *DataAccessSnapshotResponseParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this data access snapshot response params based on context it is used
func (m *DataAccessSnapshotResponseParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataAccessSnapshotResponseParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataAccessSnapshotResponseParams) UnmarshalBinary(b []byte) error {
	var res DataAccessSnapshotResponseParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
