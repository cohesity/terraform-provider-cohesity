// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeviceTreeLeafNode Specifies the parameters of a leaf node in device tree.
//
// swagger:model DeviceTreeLeafNode
type DeviceTreeLeafNode struct {

	// Specifies the disk name.
	DiskName *string `json:"diskName,omitempty"`

	// Specifies the paritition number.
	PartitionNumber *int32 `json:"partitionNumber,omitempty"`

	// Specifies the offset in bytes where data for the LVM volume (for which this device tree is being build) starts relative to the start of the partition.
	OffsetBytes *int64 `json:"offsetBytes,omitempty"`

	// Specifies The length of data in bytes for the LVM volume (for which this device tree is being built). It does not include size of the LVM meta data.
	LengthBytes *int64 `json:"lengthBytes,omitempty"`
}

// Validate validates this device tree leaf node
func (m *DeviceTreeLeafNode) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this device tree leaf node based on context it is used
func (m *DeviceTreeLeafNode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceTreeLeafNode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceTreeLeafNode) UnmarshalBinary(b []byte) error {
	var res DeviceTreeLeafNode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
