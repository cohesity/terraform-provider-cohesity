// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterCreateCloudParams Cloud Cluster Params.
//
// # Params for Cloud Edition Cluster Creation
//
// swagger:model ClusterCreateCloudParams
type ClusterCreateCloudParams struct {

	// node ips
	// Min Items: 1
	// Unique: true
	NodeIps []string `json:"nodeIps"`
}

// Validate validates this cluster create cloud params
func (m *ClusterCreateCloudParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodeIps(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterCreateCloudParams) validateNodeIps(formats strfmt.Registry) error {
	if swag.IsZero(m.NodeIps) { // not required
		return nil
	}

	iNodeIpsSize := int64(len(m.NodeIps))

	if err := validate.MinItems("nodeIps", "body", iNodeIpsSize, 1); err != nil {
		return err
	}

	if err := validate.UniqueItems("nodeIps", "body", m.NodeIps); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cluster create cloud params based on context it is used
func (m *ClusterCreateCloudParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterCreateCloudParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterCreateCloudParams) UnmarshalBinary(b []byte) error {
	var res ClusterCreateCloudParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
