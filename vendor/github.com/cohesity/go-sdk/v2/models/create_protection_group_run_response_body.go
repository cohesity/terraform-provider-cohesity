// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateProtectionGroupRunResponseBody Create protection run response.
//
// Specifies the response for create a protection run. On success, the system will accept the request and return the Protection Group id for which the run is supposed to start. The actual run may start at a later time if the system is busy. Consumers must query the Protection Group to see the run.
//
// swagger:model CreateProtectionGroupRunResponseBody
type CreateProtectionGroupRunResponseBody struct {

	// Specifies id of the Protection Group which must be polled for seeing the new run.
	ProtectionGroupID *string `json:"protectionGroupId,omitempty"`

	// Specifies parameters which are returned only for a Universal Data Adapter protection run.
	UdaParams *UdaCreateRunResponseParams `json:"udaParams,omitempty"`
}

// Validate validates this create protection group run response body
func (m *CreateProtectionGroupRunResponseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUdaParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateProtectionGroupRunResponseBody) validateUdaParams(formats strfmt.Registry) error {
	if swag.IsZero(m.UdaParams) { // not required
		return nil
	}

	if m.UdaParams != nil {
		if err := m.UdaParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("udaParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("udaParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create protection group run response body based on the context it is used
func (m *CreateProtectionGroupRunResponseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateUdaParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateProtectionGroupRunResponseBody) contextValidateUdaParams(ctx context.Context, formats strfmt.Registry) error {

	if m.UdaParams != nil {

		if swag.IsZero(m.UdaParams) { // not required
			return nil
		}

		if err := m.UdaParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("udaParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("udaParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateProtectionGroupRunResponseBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateProtectionGroupRunResponseBody) UnmarshalBinary(b []byte) error {
	var res CreateProtectionGroupRunResponseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
