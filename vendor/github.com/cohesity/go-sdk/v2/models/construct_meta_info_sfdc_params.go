// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConstructMetaInfoSfdcParams ConstructMetaInfoSfdcParams
//
// Params to fetch meta info for a salesforce object.
//
// swagger:model ConstructMetaInfoSfdcParams
type ConstructMetaInfoSfdcParams struct {

	// Specifies the type of meta info to fetch for salesforce object.
	// Required: true
	// Enum: ["DependentObjects"]
	MetaInfoType *string `json:"metaInfoType"`

	// Specifies the name of the object.
	ObjectName *string `json:"objectName,omitempty"`
}

// Validate validates this construct meta info sfdc params
func (m *ConstructMetaInfoSfdcParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetaInfoType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var constructMetaInfoSfdcParamsTypeMetaInfoTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DependentObjects"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		constructMetaInfoSfdcParamsTypeMetaInfoTypePropEnum = append(constructMetaInfoSfdcParamsTypeMetaInfoTypePropEnum, v)
	}
}

const (

	// ConstructMetaInfoSfdcParamsMetaInfoTypeDependentObjects captures enum value "DependentObjects"
	ConstructMetaInfoSfdcParamsMetaInfoTypeDependentObjects string = "DependentObjects"
)

// prop value enum
func (m *ConstructMetaInfoSfdcParams) validateMetaInfoTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, constructMetaInfoSfdcParamsTypeMetaInfoTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConstructMetaInfoSfdcParams) validateMetaInfoType(formats strfmt.Registry) error {

	if err := validate.Required("metaInfoType", "body", m.MetaInfoType); err != nil {
		return err
	}

	// value enum
	if err := m.validateMetaInfoTypeEnum("metaInfoType", "body", *m.MetaInfoType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this construct meta info sfdc params based on context it is used
func (m *ConstructMetaInfoSfdcParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConstructMetaInfoSfdcParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConstructMetaInfoSfdcParams) UnmarshalBinary(b []byte) error {
	var res ConstructMetaInfoSfdcParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
