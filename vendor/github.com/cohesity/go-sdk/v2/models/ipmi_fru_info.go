// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpmiFruInfo Specifies the fru for the ipmi.
//
// swagger:model IpmiFruInfo
type IpmiFruInfo struct {

	// Specifies the IPMI Field Replaceable Unit(FRU) ID for given node.
	ID *int32 `json:"Id,omitempty"`

	// Specifies the type of chassis for given node.
	ChassisType *string `json:"chassisType,omitempty"`

	// Specifies the chassis part number for given node.
	ChassisPN *string `json:"chassisPN,omitempty"`

	// Specifies the chassis serial number for given node.
	ChassisSerial *string `json:"chassisSerial,omitempty"`

	// Specifies the information about chassis extras provided for given node.
	ChassisExtra *string `json:"chassisExtra,omitempty"`

	// Specifies the board manufacturing date for given node.
	BoardMfgDate *string `json:"boardMfgDate,omitempty"`

	// Specifies the board manufacturer for given node.
	BoardMfg *string `json:"boardMfg,omitempty"`

	// Specifies the board product name for given node.
	BoardProduct *string `json:"boardProduct,omitempty"`

	// Specifies the board serial number for given node.
	BoardSerial *string `json:"boardSerial,omitempty"`

	// Specifies the board part number for given node.
	BoardPN *string `json:"boardPN,omitempty"`

	// Specifies the product manufacturer for given node.
	ProductMfg *string `json:"productMfg,omitempty"`

	// Specifies the product name for given node.
	ProductName *string `json:"productName,omitempty"`

	// Specifies the product part number for given node.
	ProductPN *string `json:"productPN,omitempty"`

	// Specifies the product version for given node.
	ProductVersion *string `json:"productVersion,omitempty"`

	// Specifies the product serial number for given node.
	ProductSerial *string `json:"productSerial,omitempty"`
}

// Validate validates this ipmi fru info
func (m *IpmiFruInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipmi fru info based on context it is used
func (m *IpmiFruInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpmiFruInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpmiFruInfo) UnmarshalBinary(b []byte) error {
	var res IpmiFruInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
