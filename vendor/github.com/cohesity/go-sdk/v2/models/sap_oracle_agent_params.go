// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SapOracleAgentParams SapOracle agent parameters
//
// swagger:model SapOracleAgentParams
type SapOracleAgentParams struct {

	// Specifies the type of installer.
	// Required: true
	// Enum: ["kScript","kRPM"]
	PackageType *string `json:"packageType"`
}

// Validate validates this sap oracle agent params
func (m *SapOracleAgentParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePackageType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sapOracleAgentParamsTypePackageTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kScript","kRPM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sapOracleAgentParamsTypePackageTypePropEnum = append(sapOracleAgentParamsTypePackageTypePropEnum, v)
	}
}

const (

	// SapOracleAgentParamsPackageTypeKScript captures enum value "kScript"
	SapOracleAgentParamsPackageTypeKScript string = "kScript"

	// SapOracleAgentParamsPackageTypeKRPM captures enum value "kRPM"
	SapOracleAgentParamsPackageTypeKRPM string = "kRPM"
)

// prop value enum
func (m *SapOracleAgentParams) validatePackageTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, sapOracleAgentParamsTypePackageTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SapOracleAgentParams) validatePackageType(formats strfmt.Registry) error {

	if err := validate.Required("packageType", "body", m.PackageType); err != nil {
		return err
	}

	// value enum
	if err := m.validatePackageTypeEnum("packageType", "body", *m.PackageType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sap oracle agent params based on context it is used
func (m *SapOracleAgentParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SapOracleAgentParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SapOracleAgentParams) UnmarshalBinary(b []byte) error {
	var res SapOracleAgentParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
