// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OAuthAudience OAuth 2 Audience
//
// swagger:model OAuthAudience
type OAuthAudience struct {

	// Specifies the ID of this audience. This must match the 'aud' field in the token at login time.
	// Required: true
	AudienceID *string `json:"audienceId"`

	// Specifies the list of client IDs which should be allowed to log in via this audience. The 'appid' in the token must match one of the values specified here.
	// Required: true
	// Max Items: 50
	// Min Items: 1
	ClientIds []string `json:"clientIds"`
}

// Validate validates this o auth audience
func (m *OAuthAudience) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAudienceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OAuthAudience) validateAudienceID(formats strfmt.Registry) error {

	if err := validate.Required("audienceId", "body", m.AudienceID); err != nil {
		return err
	}

	return nil
}

func (m *OAuthAudience) validateClientIds(formats strfmt.Registry) error {

	if err := validate.Required("clientIds", "body", m.ClientIds); err != nil {
		return err
	}

	iClientIdsSize := int64(len(m.ClientIds))

	if err := validate.MinItems("clientIds", "body", iClientIdsSize, 1); err != nil {
		return err
	}

	if err := validate.MaxItems("clientIds", "body", iClientIdsSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(m.ClientIds); i++ {

		if err := validate.MinLength("clientIds"+"."+strconv.Itoa(i), "body", m.ClientIds[i], 1); err != nil {
			return err
		}

		if err := validate.MaxLength("clientIds"+"."+strconv.Itoa(i), "body", m.ClientIds[i], 255); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this o auth audience based on context it is used
func (m *OAuthAudience) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OAuthAudience) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OAuthAudience) UnmarshalBinary(b []byte) error {
	var res OAuthAudience
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
