// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IpmiUserInfo Specifies the ipmi user info for each node.
//
// swagger:model IpmiUserInfo
type IpmiUserInfo struct {

	// Specifies the id for the ipmi user.
	ID *int32 `json:"id,omitempty"`

	// Specifies the name of the ipmi user.
	Name *string `json:"name,omitempty"`

	// Specifies whether the user is allowed to initiate IPMI communication.
	CallIn *bool `json:"callIn,omitempty"`

	// Specifies whether link-level authentication is required for this user.
	LinkAuth *bool `json:"linkAuth,omitempty"`

	// Specifies whether IPMI messaging is enabled for this user.
	IpmiMsg *bool `json:"ipmiMsg,omitempty"`

	// Specifies the privilege level assigned for this user.
	PrivilegeLevel *uint32 `json:"privilegeLevel,omitempty"`
}

// Validate validates this ipmi user info
func (m *IpmiUserInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipmi user info based on context it is used
func (m *IpmiUserInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpmiUserInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpmiUserInfo) UnmarshalBinary(b []byte) error {
	var res IpmiUserInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
