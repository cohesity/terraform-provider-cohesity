// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonProtectionGroupRunResponseParameters Common Protection Group run response parameters.
//
// Specifies the parameters which are common between Protection Group runs of all Protection Groups.
//
// swagger:model CommonProtectionGroupRunResponseParameters
type CommonProtectionGroupRunResponseParameters struct {

	// Specifies the ID of the Protection Group run.
	ID *string `json:"id,omitempty"`

	// Protection Group instance Id. This field will be removed later.
	ProtectionGroupInstanceID *int64 `json:"protectionGroupInstanceId,omitempty"`

	// ProtectionGroupId to which this run belongs.
	ProtectionGroupID *string `json:"protectionGroupId,omitempty"`

	// Specifies if this protection run is a replication run.
	IsReplicationRun *bool `json:"isReplicationRun,omitempty"`

	// Specifies the information of the primary cluster if this run is a replication run.
	OriginClusterIdentifier *ClusterIdentifier `json:"originClusterIdentifier,omitempty"`

	// ProtectionGroupId to which this run belongs on the primary cluster if this run is a replication run.
	OriginProtectionGroupID *string `json:"originProtectionGroupId,omitempty"`

	// Name of the Protection Group to which this run belongs.
	ProtectionGroupName *string `json:"protectionGroupName,omitempty"`

	// Specifies if snapshots for this run has been deleted.
	IsLocalSnapshotsDeleted *bool `json:"isLocalSnapshotsDeleted,omitempty"`

	// Specifies if snapshots metadata for this run has been deleted.
	IsMetadataDeleted *bool `json:"isMetadataDeleted,omitempty"`

	// Snapahot, replication, archival results for each object.
	Objects []*ObjectRunResult `json:"objects"`

	// Summary information about local snapshot run across all objects.
	LocalBackupInfo *BackupRunSummary `json:"localBackupInfo,omitempty"`

	// Summary information about snapshot run on the original cluster. This only applies to replication run.
	OriginalBackupInfo *BackupRunSummary `json:"originalBackupInfo,omitempty"`

	// Summary information about replication run across all objects.
	ReplicationInfo *ReplicationRunSummary `json:"replicationInfo,omitempty"`

	// Summary information about archival run.
	ArchivalInfo *ArchivalRunSummary `json:"archivalInfo,omitempty"`

	// Summary information about cloud spin run.
	CloudSpinInfo *CloudSpinRunSummary `json:"cloudSpinInfo,omitempty"`

	// Specifies if the Protection Run is on legal hold.
	OnLegalHold *bool `json:"onLegalHold,omitempty"`

	// Specifies the list of tenants that have permissions for this protection group run.
	Permissions []*Tenant `json:"permissions"`

	// Specifies whether the run is a CAD run if cloud archive direct feature is enabled. If this field is true, the primary backup copy will only be available at the given archived location.
	IsCloudArchivalDirect *bool `json:"isCloudArchivalDirect,omitempty"`

	// Specifies whether the run has a local snapshot. For cloud retrieved runs there may not be local snapshots.
	HasLocalSnapshot *bool `json:"hasLocalSnapshot,omitempty"`

	// Specifies the environment of the Protection Group.
	// Enum: ["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAwsDynamoDB","kAzureNative","kAzureSQL","kAzureEntraID","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kSAPHANA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM","kExperimentalAdapter","kMongoDBPhysical"]
	Environment *string `json:"environment,omitempty"`

	// The tag of externally triggered backup job.
	ExternallyTriggeredBackupTag *string `json:"externallyTriggeredBackupTag,omitempty"`
}

// Validate validates this common protection group run response parameters
func (m *CommonProtectionGroupRunResponseParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOriginClusterIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjects(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocalBackupInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalBackupInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReplicationInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateArchivalInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudSpinInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePermissions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateOriginClusterIdentifier(formats strfmt.Registry) error {
	if swag.IsZero(m.OriginClusterIdentifier) { // not required
		return nil
	}

	if m.OriginClusterIdentifier != nil {
		if err := m.OriginClusterIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("originClusterIdentifier")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("originClusterIdentifier")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateObjects(formats strfmt.Registry) error {
	if swag.IsZero(m.Objects) { // not required
		return nil
	}

	for i := 0; i < len(m.Objects); i++ {
		if swag.IsZero(m.Objects[i]) { // not required
			continue
		}

		if m.Objects[i] != nil {
			if err := m.Objects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("objects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("objects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateLocalBackupInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.LocalBackupInfo) { // not required
		return nil
	}

	if m.LocalBackupInfo != nil {
		if err := m.LocalBackupInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("localBackupInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("localBackupInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateOriginalBackupInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.OriginalBackupInfo) { // not required
		return nil
	}

	if m.OriginalBackupInfo != nil {
		if err := m.OriginalBackupInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("originalBackupInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("originalBackupInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateReplicationInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.ReplicationInfo) { // not required
		return nil
	}

	if m.ReplicationInfo != nil {
		if err := m.ReplicationInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("replicationInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("replicationInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateArchivalInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.ArchivalInfo) { // not required
		return nil
	}

	if m.ArchivalInfo != nil {
		if err := m.ArchivalInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("archivalInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("archivalInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateCloudSpinInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.CloudSpinInfo) { // not required
		return nil
	}

	if m.CloudSpinInfo != nil {
		if err := m.CloudSpinInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudSpinInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudSpinInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validatePermissions(formats strfmt.Registry) error {
	if swag.IsZero(m.Permissions) { // not required
		return nil
	}

	for i := 0; i < len(m.Permissions); i++ {
		if swag.IsZero(m.Permissions[i]) { // not required
			continue
		}

		if m.Permissions[i] != nil {
			if err := m.Permissions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("permissions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("permissions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var commonProtectionGroupRunResponseParametersTypeEnvironmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kVMware","kHyperV","kVCD","kSQL","kView","kRemoteAdapter","kPhysical","kPure","kIbmFlashSystem","kAzure","kNetapp","kGenericNas","kAcropolis","kIsilon","kKVM","kAWS","kAWSNative","kAwsS3","kAWSSnapshotManager","kRDSSnapshotManager","kAuroraSnapshotManager","kAwsRDSPostgresBackup","kAwsRDSPostgres","kAwsAuroraPostgres","kAwsDynamoDB","kAzureNative","kAzureSQL","kAzureEntraID","kAzureSnapshotManager","kExchange","kOracle","kGCP","kFlashBlade","kO365","kHyperFlex","kAD","kGPFS","kKubernetes","kNimble","kElastifile","kCassandra","kMongoDB","kCouchbase","kHdfs","kHive","kHBase","kUDA","kSAPHANA","kO365Sharepoint","kO365PublicFolders","kO365Teams","kO365Group","kO365Exchange","kO365OneDrive","kSfdc","kO365ExchangeCSM","kO365OneDriveCSM","kO365SharepointCSM","kExperimentalAdapter","kMongoDBPhysical"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonProtectionGroupRunResponseParametersTypeEnvironmentPropEnum = append(commonProtectionGroupRunResponseParametersTypeEnvironmentPropEnum, v)
	}
}

const (

	// CommonProtectionGroupRunResponseParametersEnvironmentKVMware captures enum value "kVMware"
	CommonProtectionGroupRunResponseParametersEnvironmentKVMware string = "kVMware"

	// CommonProtectionGroupRunResponseParametersEnvironmentKHyperV captures enum value "kHyperV"
	CommonProtectionGroupRunResponseParametersEnvironmentKHyperV string = "kHyperV"

	// CommonProtectionGroupRunResponseParametersEnvironmentKVCD captures enum value "kVCD"
	CommonProtectionGroupRunResponseParametersEnvironmentKVCD string = "kVCD"

	// CommonProtectionGroupRunResponseParametersEnvironmentKSQL captures enum value "kSQL"
	CommonProtectionGroupRunResponseParametersEnvironmentKSQL string = "kSQL"

	// CommonProtectionGroupRunResponseParametersEnvironmentKView captures enum value "kView"
	CommonProtectionGroupRunResponseParametersEnvironmentKView string = "kView"

	// CommonProtectionGroupRunResponseParametersEnvironmentKRemoteAdapter captures enum value "kRemoteAdapter"
	CommonProtectionGroupRunResponseParametersEnvironmentKRemoteAdapter string = "kRemoteAdapter"

	// CommonProtectionGroupRunResponseParametersEnvironmentKPhysical captures enum value "kPhysical"
	CommonProtectionGroupRunResponseParametersEnvironmentKPhysical string = "kPhysical"

	// CommonProtectionGroupRunResponseParametersEnvironmentKPure captures enum value "kPure"
	CommonProtectionGroupRunResponseParametersEnvironmentKPure string = "kPure"

	// CommonProtectionGroupRunResponseParametersEnvironmentKIbmFlashSystem captures enum value "kIbmFlashSystem"
	CommonProtectionGroupRunResponseParametersEnvironmentKIbmFlashSystem string = "kIbmFlashSystem"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAzure captures enum value "kAzure"
	CommonProtectionGroupRunResponseParametersEnvironmentKAzure string = "kAzure"

	// CommonProtectionGroupRunResponseParametersEnvironmentKNetapp captures enum value "kNetapp"
	CommonProtectionGroupRunResponseParametersEnvironmentKNetapp string = "kNetapp"

	// CommonProtectionGroupRunResponseParametersEnvironmentKGenericNas captures enum value "kGenericNas"
	CommonProtectionGroupRunResponseParametersEnvironmentKGenericNas string = "kGenericNas"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAcropolis captures enum value "kAcropolis"
	CommonProtectionGroupRunResponseParametersEnvironmentKAcropolis string = "kAcropolis"

	// CommonProtectionGroupRunResponseParametersEnvironmentKIsilon captures enum value "kIsilon"
	CommonProtectionGroupRunResponseParametersEnvironmentKIsilon string = "kIsilon"

	// CommonProtectionGroupRunResponseParametersEnvironmentKKVM captures enum value "kKVM"
	CommonProtectionGroupRunResponseParametersEnvironmentKKVM string = "kKVM"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAWS captures enum value "kAWS"
	CommonProtectionGroupRunResponseParametersEnvironmentKAWS string = "kAWS"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAWSNative captures enum value "kAWSNative"
	CommonProtectionGroupRunResponseParametersEnvironmentKAWSNative string = "kAWSNative"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAwsS3 captures enum value "kAwsS3"
	CommonProtectionGroupRunResponseParametersEnvironmentKAwsS3 string = "kAwsS3"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAWSSnapshotManager captures enum value "kAWSSnapshotManager"
	CommonProtectionGroupRunResponseParametersEnvironmentKAWSSnapshotManager string = "kAWSSnapshotManager"

	// CommonProtectionGroupRunResponseParametersEnvironmentKRDSSnapshotManager captures enum value "kRDSSnapshotManager"
	CommonProtectionGroupRunResponseParametersEnvironmentKRDSSnapshotManager string = "kRDSSnapshotManager"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAuroraSnapshotManager captures enum value "kAuroraSnapshotManager"
	CommonProtectionGroupRunResponseParametersEnvironmentKAuroraSnapshotManager string = "kAuroraSnapshotManager"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAwsRDSPostgresBackup captures enum value "kAwsRDSPostgresBackup"
	CommonProtectionGroupRunResponseParametersEnvironmentKAwsRDSPostgresBackup string = "kAwsRDSPostgresBackup"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAwsRDSPostgres captures enum value "kAwsRDSPostgres"
	CommonProtectionGroupRunResponseParametersEnvironmentKAwsRDSPostgres string = "kAwsRDSPostgres"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAwsAuroraPostgres captures enum value "kAwsAuroraPostgres"
	CommonProtectionGroupRunResponseParametersEnvironmentKAwsAuroraPostgres string = "kAwsAuroraPostgres"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAwsDynamoDB captures enum value "kAwsDynamoDB"
	CommonProtectionGroupRunResponseParametersEnvironmentKAwsDynamoDB string = "kAwsDynamoDB"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAzureNative captures enum value "kAzureNative"
	CommonProtectionGroupRunResponseParametersEnvironmentKAzureNative string = "kAzureNative"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAzureSQL captures enum value "kAzureSQL"
	CommonProtectionGroupRunResponseParametersEnvironmentKAzureSQL string = "kAzureSQL"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAzureEntraID captures enum value "kAzureEntraID"
	CommonProtectionGroupRunResponseParametersEnvironmentKAzureEntraID string = "kAzureEntraID"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAzureSnapshotManager captures enum value "kAzureSnapshotManager"
	CommonProtectionGroupRunResponseParametersEnvironmentKAzureSnapshotManager string = "kAzureSnapshotManager"

	// CommonProtectionGroupRunResponseParametersEnvironmentKExchange captures enum value "kExchange"
	CommonProtectionGroupRunResponseParametersEnvironmentKExchange string = "kExchange"

	// CommonProtectionGroupRunResponseParametersEnvironmentKOracle captures enum value "kOracle"
	CommonProtectionGroupRunResponseParametersEnvironmentKOracle string = "kOracle"

	// CommonProtectionGroupRunResponseParametersEnvironmentKGCP captures enum value "kGCP"
	CommonProtectionGroupRunResponseParametersEnvironmentKGCP string = "kGCP"

	// CommonProtectionGroupRunResponseParametersEnvironmentKFlashBlade captures enum value "kFlashBlade"
	CommonProtectionGroupRunResponseParametersEnvironmentKFlashBlade string = "kFlashBlade"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365 captures enum value "kO365"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365 string = "kO365"

	// CommonProtectionGroupRunResponseParametersEnvironmentKHyperFlex captures enum value "kHyperFlex"
	CommonProtectionGroupRunResponseParametersEnvironmentKHyperFlex string = "kHyperFlex"

	// CommonProtectionGroupRunResponseParametersEnvironmentKAD captures enum value "kAD"
	CommonProtectionGroupRunResponseParametersEnvironmentKAD string = "kAD"

	// CommonProtectionGroupRunResponseParametersEnvironmentKGPFS captures enum value "kGPFS"
	CommonProtectionGroupRunResponseParametersEnvironmentKGPFS string = "kGPFS"

	// CommonProtectionGroupRunResponseParametersEnvironmentKKubernetes captures enum value "kKubernetes"
	CommonProtectionGroupRunResponseParametersEnvironmentKKubernetes string = "kKubernetes"

	// CommonProtectionGroupRunResponseParametersEnvironmentKNimble captures enum value "kNimble"
	CommonProtectionGroupRunResponseParametersEnvironmentKNimble string = "kNimble"

	// CommonProtectionGroupRunResponseParametersEnvironmentKElastifile captures enum value "kElastifile"
	CommonProtectionGroupRunResponseParametersEnvironmentKElastifile string = "kElastifile"

	// CommonProtectionGroupRunResponseParametersEnvironmentKCassandra captures enum value "kCassandra"
	CommonProtectionGroupRunResponseParametersEnvironmentKCassandra string = "kCassandra"

	// CommonProtectionGroupRunResponseParametersEnvironmentKMongoDB captures enum value "kMongoDB"
	CommonProtectionGroupRunResponseParametersEnvironmentKMongoDB string = "kMongoDB"

	// CommonProtectionGroupRunResponseParametersEnvironmentKCouchbase captures enum value "kCouchbase"
	CommonProtectionGroupRunResponseParametersEnvironmentKCouchbase string = "kCouchbase"

	// CommonProtectionGroupRunResponseParametersEnvironmentKHdfs captures enum value "kHdfs"
	CommonProtectionGroupRunResponseParametersEnvironmentKHdfs string = "kHdfs"

	// CommonProtectionGroupRunResponseParametersEnvironmentKHive captures enum value "kHive"
	CommonProtectionGroupRunResponseParametersEnvironmentKHive string = "kHive"

	// CommonProtectionGroupRunResponseParametersEnvironmentKHBase captures enum value "kHBase"
	CommonProtectionGroupRunResponseParametersEnvironmentKHBase string = "kHBase"

	// CommonProtectionGroupRunResponseParametersEnvironmentKUDA captures enum value "kUDA"
	CommonProtectionGroupRunResponseParametersEnvironmentKUDA string = "kUDA"

	// CommonProtectionGroupRunResponseParametersEnvironmentKSAPHANA captures enum value "kSAPHANA"
	CommonProtectionGroupRunResponseParametersEnvironmentKSAPHANA string = "kSAPHANA"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365Sharepoint captures enum value "kO365Sharepoint"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365Sharepoint string = "kO365Sharepoint"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365PublicFolders captures enum value "kO365PublicFolders"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365PublicFolders string = "kO365PublicFolders"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365Teams captures enum value "kO365Teams"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365Teams string = "kO365Teams"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365Group captures enum value "kO365Group"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365Group string = "kO365Group"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365Exchange captures enum value "kO365Exchange"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365Exchange string = "kO365Exchange"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365OneDrive captures enum value "kO365OneDrive"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365OneDrive string = "kO365OneDrive"

	// CommonProtectionGroupRunResponseParametersEnvironmentKSfdc captures enum value "kSfdc"
	CommonProtectionGroupRunResponseParametersEnvironmentKSfdc string = "kSfdc"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365ExchangeCSM captures enum value "kO365ExchangeCSM"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365ExchangeCSM string = "kO365ExchangeCSM"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365OneDriveCSM captures enum value "kO365OneDriveCSM"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365OneDriveCSM string = "kO365OneDriveCSM"

	// CommonProtectionGroupRunResponseParametersEnvironmentKO365SharepointCSM captures enum value "kO365SharepointCSM"
	CommonProtectionGroupRunResponseParametersEnvironmentKO365SharepointCSM string = "kO365SharepointCSM"

	// CommonProtectionGroupRunResponseParametersEnvironmentKExperimentalAdapter captures enum value "kExperimentalAdapter"
	CommonProtectionGroupRunResponseParametersEnvironmentKExperimentalAdapter string = "kExperimentalAdapter"

	// CommonProtectionGroupRunResponseParametersEnvironmentKMongoDBPhysical captures enum value "kMongoDBPhysical"
	CommonProtectionGroupRunResponseParametersEnvironmentKMongoDBPhysical string = "kMongoDBPhysical"
)

// prop value enum
func (m *CommonProtectionGroupRunResponseParameters) validateEnvironmentEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, commonProtectionGroupRunResponseParametersTypeEnvironmentPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) validateEnvironment(formats strfmt.Registry) error {
	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	// value enum
	if err := m.validateEnvironmentEnum("environment", "body", *m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this common protection group run response parameters based on the context it is used
func (m *CommonProtectionGroupRunResponseParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOriginClusterIdentifier(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateObjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateLocalBackupInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOriginalBackupInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateReplicationInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateArchivalInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCloudSpinInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePermissions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateOriginClusterIdentifier(ctx context.Context, formats strfmt.Registry) error {

	if m.OriginClusterIdentifier != nil {

		if swag.IsZero(m.OriginClusterIdentifier) { // not required
			return nil
		}

		if err := m.OriginClusterIdentifier.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("originClusterIdentifier")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("originClusterIdentifier")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateObjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Objects); i++ {

		if m.Objects[i] != nil {

			if swag.IsZero(m.Objects[i]) { // not required
				return nil
			}

			if err := m.Objects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("objects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("objects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateLocalBackupInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.LocalBackupInfo != nil {

		if swag.IsZero(m.LocalBackupInfo) { // not required
			return nil
		}

		if err := m.LocalBackupInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("localBackupInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("localBackupInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateOriginalBackupInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.OriginalBackupInfo != nil {

		if swag.IsZero(m.OriginalBackupInfo) { // not required
			return nil
		}

		if err := m.OriginalBackupInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("originalBackupInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("originalBackupInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateReplicationInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.ReplicationInfo != nil {

		if swag.IsZero(m.ReplicationInfo) { // not required
			return nil
		}

		if err := m.ReplicationInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("replicationInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("replicationInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateArchivalInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.ArchivalInfo != nil {

		if swag.IsZero(m.ArchivalInfo) { // not required
			return nil
		}

		if err := m.ArchivalInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("archivalInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("archivalInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidateCloudSpinInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.CloudSpinInfo != nil {

		if swag.IsZero(m.CloudSpinInfo) { // not required
			return nil
		}

		if err := m.CloudSpinInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudSpinInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudSpinInfo")
			}
			return err
		}
	}

	return nil
}

func (m *CommonProtectionGroupRunResponseParameters) contextValidatePermissions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Permissions); i++ {

		if m.Permissions[i] != nil {

			if swag.IsZero(m.Permissions[i]) { // not required
				return nil
			}

			if err := m.Permissions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("permissions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("permissions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CommonProtectionGroupRunResponseParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonProtectionGroupRunResponseParameters) UnmarshalBinary(b []byte) error {
	var res CommonProtectionGroupRunResponseParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
