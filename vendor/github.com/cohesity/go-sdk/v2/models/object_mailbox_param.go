// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ObjectMailboxParam Specifies Mailbox recovery parameters associated with a user.
//
// swagger:model ObjectMailboxParam
type ObjectMailboxParam struct {

	// Specifies parameters to recover a Mailbox.
	// Required: true
	MailboxParams *MailboxParam `json:"mailboxParams"`

	// Specifies the Mailbox owner info.
	// Required: true
	OwnerInfo *CommonRecoverObjectSnapshotParams `json:"ownerInfo"`
}

// Validate validates this object mailbox param
func (m *ObjectMailboxParam) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMailboxParams(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwnerInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ObjectMailboxParam) validateMailboxParams(formats strfmt.Registry) error {

	if err := validate.Required("mailboxParams", "body", m.MailboxParams); err != nil {
		return err
	}

	if m.MailboxParams != nil {
		if err := m.MailboxParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mailboxParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mailboxParams")
			}
			return err
		}
	}

	return nil
}

func (m *ObjectMailboxParam) validateOwnerInfo(formats strfmt.Registry) error {

	if err := validate.Required("ownerInfo", "body", m.OwnerInfo); err != nil {
		return err
	}

	if m.OwnerInfo != nil {
		if err := m.OwnerInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ownerInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ownerInfo")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this object mailbox param based on the context it is used
func (m *ObjectMailboxParam) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMailboxParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOwnerInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ObjectMailboxParam) contextValidateMailboxParams(ctx context.Context, formats strfmt.Registry) error {

	if m.MailboxParams != nil {

		if err := m.MailboxParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mailboxParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mailboxParams")
			}
			return err
		}
	}

	return nil
}

func (m *ObjectMailboxParam) contextValidateOwnerInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.OwnerInfo != nil {

		if err := m.OwnerInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ownerInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ownerInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ObjectMailboxParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectMailboxParam) UnmarshalBinary(b []byte) error {
	var res ObjectMailboxParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
