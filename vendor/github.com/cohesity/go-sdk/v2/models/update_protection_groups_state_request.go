// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateProtectionGroupsStateRequest Update state of Protection Groups.
//
// Specifies the parameters to perform an action of list of Protection Groups.
//
// swagger:model UpdateProtectionGroupsStateRequest
type UpdateProtectionGroupsStateRequest struct {

	// Specifies the action to be performed on all the specfied Protection Groups. 'kActivate' specifies that Protection Group should be activated. 'kDeactivate' sepcifies that Protection Group should be deactivated. 'kPause' specifies that Protection Group should be paused. 'kResume' specifies that Protection Group should be resumed.
	// Required: true
	// Enum: ["kPause","kResume"]
	Action *string `json:"action"`

	// Specifies a list of Protection Group ids for which the state should change.
	// Required: true
	// Min Items: 1
	// Unique: true
	Ids []string `json:"ids"`
}

// Validate validates this update protection groups state request
func (m *UpdateProtectionGroupsStateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateProtectionGroupsStateRequestTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["kPause","kResume"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateProtectionGroupsStateRequestTypeActionPropEnum = append(updateProtectionGroupsStateRequestTypeActionPropEnum, v)
	}
}

const (

	// UpdateProtectionGroupsStateRequestActionKPause captures enum value "kPause"
	UpdateProtectionGroupsStateRequestActionKPause string = "kPause"

	// UpdateProtectionGroupsStateRequestActionKResume captures enum value "kResume"
	UpdateProtectionGroupsStateRequestActionKResume string = "kResume"
)

// prop value enum
func (m *UpdateProtectionGroupsStateRequest) validateActionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateProtectionGroupsStateRequestTypeActionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateProtectionGroupsStateRequest) validateAction(formats strfmt.Registry) error {

	if err := validate.Required("action", "body", m.Action); err != nil {
		return err
	}

	// value enum
	if err := m.validateActionEnum("action", "body", *m.Action); err != nil {
		return err
	}

	return nil
}

func (m *UpdateProtectionGroupsStateRequest) validateIds(formats strfmt.Registry) error {

	if err := validate.Required("ids", "body", m.Ids); err != nil {
		return err
	}

	iIdsSize := int64(len(m.Ids))

	if err := validate.MinItems("ids", "body", iIdsSize, 1); err != nil {
		return err
	}

	if err := validate.UniqueItems("ids", "body", m.Ids); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update protection groups state request based on context it is used
func (m *UpdateProtectionGroupsStateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateProtectionGroupsStateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateProtectionGroupsStateRequest) UnmarshalBinary(b []byte) error {
	var res UpdateProtectionGroupsStateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
