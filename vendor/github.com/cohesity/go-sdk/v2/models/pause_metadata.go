// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PauseMetadata Pause Metadata
//
// Encapsulation of all pause related data.
//
// swagger:model PauseMetadata
type PauseMetadata struct {

	// A note from the user explaining the reason for pausing future runs, if applicable.
	PausedNote *string `json:"pausedNote,omitempty"`

	// The user who last paused this protection group.
	LastPausedByUsername *string `json:"lastPausedByUsername,omitempty"`

	// Time in usec when the job was last paused or unpaused.
	LastPauseModificationTimeUsecs *int64 `json:"lastPauseModificationTimeUsecs,omitempty"`

	// Time in usec when user initiates protection run pause. This field gets populated on user initiated pause and gets cleared on user initiated resume.
	UserInitiatedPauseRequestedTimeUsecs *int64 `json:"userInitiatedPauseRequestedTimeUsecs,omitempty"`
}

// Validate validates this pause metadata
func (m *PauseMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pause metadata based on context it is used
func (m *PauseMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PauseMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PauseMetadata) UnmarshalBinary(b []byte) error {
	var res PauseMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
