// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CentrifyZone Specifies a centrify zone.
//
// swagger:model CentrifyZone
type CentrifyZone struct {

	// Specifies a description of the Centrify zone.
	// Required: true
	Description *string `json:"description"`

	// Specifies the distinguished name of the Centrify zone.
	// Required: true
	DistinguishedName *string `json:"distinguishedName"`

	// Specifies the schema of this Centrify zone.
	// Required: true
	// Enum: ["CentrifyDynamicSchema_1_0","CentrifyDynamicSchema_2_0","CentrifySfu_3_0","CentrifySfu_4_0","CentrifyCdcRfc2307","CentrifyDynamicSchema_3_0","CentrifyCdcRfc2307_2","CentrifyDynamicSchema_5_0","CentrifyCdcRfc2307_3","CentrifySfu_3_0_V5"]
	Schema *string `json:"schema"`

	// Specifies the zone name of the Centrify zone.
	// Read Only: true
	ZoneName *string `json:"zoneName,omitempty"`

	// Specifies the zone domain of the Centrify zone.
	// Read Only: true
	ZoneDomain *string `json:"zoneDomain,omitempty"`
}

// Validate validates this centrify zone
func (m *CentrifyZone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDistinguishedName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSchema(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifyZone) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *CentrifyZone) validateDistinguishedName(formats strfmt.Registry) error {

	if err := validate.Required("distinguishedName", "body", m.DistinguishedName); err != nil {
		return err
	}

	return nil
}

var centrifyZoneTypeSchemaPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CentrifyDynamicSchema_1_0","CentrifyDynamicSchema_2_0","CentrifySfu_3_0","CentrifySfu_4_0","CentrifyCdcRfc2307","CentrifyDynamicSchema_3_0","CentrifyCdcRfc2307_2","CentrifyDynamicSchema_5_0","CentrifyCdcRfc2307_3","CentrifySfu_3_0_V5"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		centrifyZoneTypeSchemaPropEnum = append(centrifyZoneTypeSchemaPropEnum, v)
	}
}

const (

	// CentrifyZoneSchemaCentrifyDynamicSchema10 captures enum value "CentrifyDynamicSchema_1_0"
	CentrifyZoneSchemaCentrifyDynamicSchema10 string = "CentrifyDynamicSchema_1_0"

	// CentrifyZoneSchemaCentrifyDynamicSchema20 captures enum value "CentrifyDynamicSchema_2_0"
	CentrifyZoneSchemaCentrifyDynamicSchema20 string = "CentrifyDynamicSchema_2_0"

	// CentrifyZoneSchemaCentrifySfu30 captures enum value "CentrifySfu_3_0"
	CentrifyZoneSchemaCentrifySfu30 string = "CentrifySfu_3_0"

	// CentrifyZoneSchemaCentrifySfu40 captures enum value "CentrifySfu_4_0"
	CentrifyZoneSchemaCentrifySfu40 string = "CentrifySfu_4_0"

	// CentrifyZoneSchemaCentrifyCdcRfc2307 captures enum value "CentrifyCdcRfc2307"
	CentrifyZoneSchemaCentrifyCdcRfc2307 string = "CentrifyCdcRfc2307"

	// CentrifyZoneSchemaCentrifyDynamicSchema30 captures enum value "CentrifyDynamicSchema_3_0"
	CentrifyZoneSchemaCentrifyDynamicSchema30 string = "CentrifyDynamicSchema_3_0"

	// CentrifyZoneSchemaCentrifyCdcRfc23072 captures enum value "CentrifyCdcRfc2307_2"
	CentrifyZoneSchemaCentrifyCdcRfc23072 string = "CentrifyCdcRfc2307_2"

	// CentrifyZoneSchemaCentrifyDynamicSchema50 captures enum value "CentrifyDynamicSchema_5_0"
	CentrifyZoneSchemaCentrifyDynamicSchema50 string = "CentrifyDynamicSchema_5_0"

	// CentrifyZoneSchemaCentrifyCdcRfc23073 captures enum value "CentrifyCdcRfc2307_3"
	CentrifyZoneSchemaCentrifyCdcRfc23073 string = "CentrifyCdcRfc2307_3"

	// CentrifyZoneSchemaCentrifySfu30V5 captures enum value "CentrifySfu_3_0_V5"
	CentrifyZoneSchemaCentrifySfu30V5 string = "CentrifySfu_3_0_V5"
)

// prop value enum
func (m *CentrifyZone) validateSchemaEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, centrifyZoneTypeSchemaPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CentrifyZone) validateSchema(formats strfmt.Registry) error {

	if err := validate.Required("schema", "body", m.Schema); err != nil {
		return err
	}

	// value enum
	if err := m.validateSchemaEnum("schema", "body", *m.Schema); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this centrify zone based on the context it is used
func (m *CentrifyZone) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateZoneName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateZoneDomain(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifyZone) contextValidateZoneName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "zoneName", "body", m.ZoneName); err != nil {
		return err
	}

	return nil
}

func (m *CentrifyZone) contextValidateZoneDomain(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "zoneDomain", "body", m.ZoneDomain); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CentrifyZone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CentrifyZone) UnmarshalBinary(b []byte) error {
	var res CentrifyZone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
